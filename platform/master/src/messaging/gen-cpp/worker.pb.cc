// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: worker.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "worker.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace presto {

namespace {

const ::google::protobuf::Descriptor* HelloRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HelloRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClearRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClearRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateCompositeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateCompositeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* WorkerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorkerRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* WorkerRequest_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* FetchRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FetchRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewExecuteRRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewExecuteRRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* IORequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IORequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* IORequest_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* LogRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* VerticaDLRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VerticaDLRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* VerticaDLRequest_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_worker_2eproto() {
  protobuf_AddDesc_worker_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "worker.proto");
  GOOGLE_CHECK(file != NULL);
  HelloRequest_descriptor_ = file->message_type(0);
  static const int HelloRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, master_location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, worker_location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, abs_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, reply_attr_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, is_heartbeat_),
  };
  HelloRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HelloRequest_descriptor_,
      HelloRequest::default_instance_,
      HelloRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HelloRequest));
  CreateRequest_descriptor_ = file->message_type(1);
  static const int CreateRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, arr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, initial_data_),
  };
  CreateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateRequest_descriptor_,
      CreateRequest::default_instance_,
      CreateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateRequest));
  ClearRequest_descriptor_ = file->message_type(2);
  static const int ClearRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearRequest, store_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearRequest, uid_),
  };
  ClearRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClearRequest_descriptor_,
      ClearRequest::default_instance_,
      ClearRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClearRequest));
  TransferRequest_descriptor_ = file->message_type(3);
  static const int TransferRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferRequest, arr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferRequest, hostname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferRequest, port_),
  };
  TransferRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TransferRequest_descriptor_,
      TransferRequest::default_instance_,
      TransferRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TransferRequest));
  CreateCompositeRequest_descriptor_ = file->message_type(4);
  static const int CreateCompositeRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCompositeRequest, arraynames_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCompositeRequest, offsets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCompositeRequest, dims_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCompositeRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCompositeRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCompositeRequest, uid_),
  };
  CreateCompositeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateCompositeRequest_descriptor_,
      CreateCompositeRequest::default_instance_,
      CreateCompositeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCompositeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCompositeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateCompositeRequest));
  WorkerRequest_descriptor_ = file->message_type(5);
  static const int WorkerRequest_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, hello_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, create_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, clear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, createcomposite_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, transfer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, fetch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, newexecr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, io_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, log_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, verticaload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, trace_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, span_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, parent_span_id_),
  };
  WorkerRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WorkerRequest_descriptor_,
      WorkerRequest::default_instance_,
      WorkerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WorkerRequest));
  WorkerRequest_Type_descriptor_ = WorkerRequest_descriptor_->enum_type(0);
  FetchRequest_descriptor_ = file->message_type(6);
  static const int FetchRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchRequest, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchRequest, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchRequest, store_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchRequest, uid_),
  };
  FetchRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FetchRequest_descriptor_,
      FetchRequest::default_instance_,
      FetchRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FetchRequest));
  NewExecuteRRequest_descriptor_ = file->message_type(7);
  static const int NewExecuteRRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewExecuteRRequest, func_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewExecuteRRequest, args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewExecuteRRequest, raw_args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewExecuteRRequest, composite_args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewExecuteRRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewExecuteRRequest, uid_),
  };
  NewExecuteRRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewExecuteRRequest_descriptor_,
      NewExecuteRRequest::default_instance_,
      NewExecuteRRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewExecuteRRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewExecuteRRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewExecuteRRequest));
  IORequest_descriptor_ = file->message_type(8);
  static const int IORequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IORequest, array_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IORequest, store_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IORequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IORequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IORequest, uid_),
  };
  IORequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IORequest_descriptor_,
      IORequest::default_instance_,
      IORequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IORequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IORequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IORequest));
  IORequest_Type_descriptor_ = IORequest_descriptor_->enum_type(0);
  LogRequest_descriptor_ = file->message_type(9);
  static const int LogRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogRequest, msg_),
  };
  LogRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LogRequest_descriptor_,
      LogRequest::default_instance_,
      LogRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LogRequest));
  VerticaDLRequest_descriptor_ = file->message_type(10);
  static const int VerticaDLRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerticaDLRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerticaDLRequest, split_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerticaDLRequest, split_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerticaDLRequest, query_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerticaDLRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerticaDLRequest, uid_),
  };
  VerticaDLRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VerticaDLRequest_descriptor_,
      VerticaDLRequest::default_instance_,
      VerticaDLRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerticaDLRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerticaDLRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VerticaDLRequest));
  VerticaDLRequest_Type_descriptor_ = VerticaDLRequest_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_worker_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HelloRequest_descriptor_, &HelloRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateRequest_descriptor_, &CreateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClearRequest_descriptor_, &ClearRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TransferRequest_descriptor_, &TransferRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateCompositeRequest_descriptor_, &CreateCompositeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WorkerRequest_descriptor_, &WorkerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FetchRequest_descriptor_, &FetchRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewExecuteRRequest_descriptor_, &NewExecuteRRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IORequest_descriptor_, &IORequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LogRequest_descriptor_, &LogRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VerticaDLRequest_descriptor_, &VerticaDLRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_worker_2eproto() {
  delete HelloRequest::default_instance_;
  delete HelloRequest_reflection_;
  delete CreateRequest::default_instance_;
  delete CreateRequest_reflection_;
  delete ClearRequest::default_instance_;
  delete ClearRequest_reflection_;
  delete TransferRequest::default_instance_;
  delete TransferRequest_reflection_;
  delete CreateCompositeRequest::default_instance_;
  delete CreateCompositeRequest_reflection_;
  delete WorkerRequest::default_instance_;
  delete WorkerRequest_reflection_;
  delete FetchRequest::default_instance_;
  delete FetchRequest_reflection_;
  delete NewExecuteRRequest::default_instance_;
  delete NewExecuteRRequest_reflection_;
  delete IORequest::default_instance_;
  delete IORequest_reflection_;
  delete LogRequest::default_instance_;
  delete LogRequest_reflection_;
  delete VerticaDLRequest::default_instance_;
  delete VerticaDLRequest_reflection_;
}

void protobuf_AddDesc_worker_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::presto::protobuf_AddDesc_shared_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014worker.proto\022\006presto\032\014shared.proto\"\263\001\n"
    "\014HelloRequest\022+\n\017master_location\030\001 \001(\0132\022"
    ".presto.ServerInfo\022+\n\017worker_location\030\002 "
    "\002(\0132\022.presto.ServerInfo\022\020\n\010abs_time\030\003 \001("
    "\003\022\032\n\017reply_attr_flag\030\004 \001(\005:\0010\022\033\n\014is_hear"
    "tbeat\030\005 \001(\010:\005false\"D\n\rCreateRequest\022\032\n\003a"
    "rr\030\001 \002(\0132\r.presto.Array\022\027\n\014initial_data\030"
    "\002 \001(\001:\0010\"D\n\014ClearRequest\022\014\n\004name\030\001 \002(\t\022\r"
    "\n\005store\030\002 \001(\t\022\n\n\002id\030\003 \001(\003\022\013\n\003uid\030\004 \002(\003\"M"
    "\n\017TransferRequest\022\032\n\003arr\030\001 \002(\0132\r.presto."
    "Array\022\020\n\010hostname\030\002 \002(\t\022\014\n\004port\030\003 \002(\005\"\220\001"
    "\n\026CreateCompositeRequest\022\022\n\narraynames\030\001"
    " \003(\t\022\036\n\007offsets\030\002 \003(\0132\r.presto.Tuple\022\033\n\004"
    "dims\030\003 \002(\0132\r.presto.Tuple\022\014\n\004name\030\004 \002(\t\022"
    "\n\n\002id\030\005 \001(\003\022\013\n\003uid\030\006 \002(\003\"\263\005\n\rWorkerReque"
    "st\022(\n\004type\030\001 \002(\0162\032.presto.WorkerRequest."
    "Type\022#\n\005hello\030\002 \001(\0132\024.presto.HelloReques"
    "t\022%\n\006create\030\003 \001(\0132\025.presto.CreateRequest"
    "\022#\n\005clear\030\004 \001(\0132\024.presto.ClearRequest\0227\n"
    "\017createcomposite\030\005 \001(\0132\036.presto.CreateCo"
    "mpositeRequest\022)\n\010transfer\030\006 \001(\0132\027.prest"
    "o.TransferRequest\022#\n\005fetch\030\007 \001(\0132\024.prest"
    "o.FetchRequest\022,\n\010newexecr\030\010 \001(\0132\032.prest"
    "o.NewExecuteRRequest\022\035\n\002io\030\t \001(\0132\021.prest"
    "o.IORequest\022\037\n\003log\030\n \001(\0132\022.presto.LogReq"
    "uest\022-\n\013verticaload\030\013 \001(\0132\030.presto.Verti"
    "caDLRequest\022\020\n\010trace_id\030\014 \001(\003\022\017\n\007span_id"
    "\030\r \001(\003\022\026\n\016parent_span_id\030\016 \001(\003\"\245\001\n\004Type\022"
    "\t\n\005HELLO\020\001\022\n\n\006CREATE\020\002\022\t\n\005CLEAR\020\003\022\023\n\017CRE"
    "ATECOMPOSITE\020\004\022\014\n\010TRANSFER\020\005\022\014\n\010SHUTDOWN"
    "\020\007\022\t\n\005FETCH\020\t\022\014\n\010NEWEXECR\020\n\022\017\n\013NEWTRANSF"
    "ER\020\013\022\006\n\002IO\020\014\022\007\n\003LOG\020\r\022\017\n\013VERTICALOAD\020\016\"x"
    "\n\014FetchRequest\022\014\n\004name\030\001 \002(\t\022$\n\010location"
    "\030\002 \002(\0132\022.presto.ServerInfo\022\014\n\004size\030\003 \002(\003"
    "\022\r\n\005store\030\004 \001(\t\022\n\n\002id\030\005 \001(\003\022\013\n\003uid\030\006 \001(\003"
    "\"\243\001\n\022NewExecuteRRequest\022\014\n\004func\030\001 \003(\t\022\034\n"
    "\004args\030\002 \003(\0132\016.presto.NewArg\022 \n\010raw_args\030"
    "\003 \003(\0132\016.presto.RawArg\022&\n\016composite_args\030"
    "\004 \003(\0132\016.presto.NewArg\022\n\n\002id\030\005 \001(\003\022\013\n\003uid"
    "\030\006 \002(\003\"\216\001\n\tIORequest\022\022\n\narray_name\030\001 \002(\t"
    "\022\022\n\nstore_name\030\002 \002(\t\022$\n\004type\030\003 \002(\0162\026.pre"
    "sto.IORequest.Type\022\n\n\002id\030\004 \001(\003\022\013\n\003uid\030\005 "
    "\002(\003\"\032\n\004Type\022\010\n\004LOAD\020\001\022\010\n\004SAVE\020\002\"\031\n\nLogRe"
    "quest\022\013\n\003msg\030\001 \002(\t\"\276\001\n\020VerticaDLRequest\022"
    "+\n\004type\030\001 \002(\0162\035.presto.VerticaDLRequest."
    "Type\022\022\n\nsplit_size\030\002 \001(\003\022\022\n\nsplit_name\030\003"
    " \001(\t\022\024\n\014query_result\030\004 \003(\t\022\n\n\002id\030\005 \002(\003\022\013"
    "\n\003uid\030\006 \001(\003\"&\n\004Type\022\t\n\005START\020\001\022\t\n\005FETCH\020"
    "\002\022\010\n\004STOP\020\003", 1931);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "worker.proto", &protobuf_RegisterTypes);
  HelloRequest::default_instance_ = new HelloRequest();
  CreateRequest::default_instance_ = new CreateRequest();
  ClearRequest::default_instance_ = new ClearRequest();
  TransferRequest::default_instance_ = new TransferRequest();
  CreateCompositeRequest::default_instance_ = new CreateCompositeRequest();
  WorkerRequest::default_instance_ = new WorkerRequest();
  FetchRequest::default_instance_ = new FetchRequest();
  NewExecuteRRequest::default_instance_ = new NewExecuteRRequest();
  IORequest::default_instance_ = new IORequest();
  LogRequest::default_instance_ = new LogRequest();
  VerticaDLRequest::default_instance_ = new VerticaDLRequest();
  HelloRequest::default_instance_->InitAsDefaultInstance();
  CreateRequest::default_instance_->InitAsDefaultInstance();
  ClearRequest::default_instance_->InitAsDefaultInstance();
  TransferRequest::default_instance_->InitAsDefaultInstance();
  CreateCompositeRequest::default_instance_->InitAsDefaultInstance();
  WorkerRequest::default_instance_->InitAsDefaultInstance();
  FetchRequest::default_instance_->InitAsDefaultInstance();
  NewExecuteRRequest::default_instance_->InitAsDefaultInstance();
  IORequest::default_instance_->InitAsDefaultInstance();
  LogRequest::default_instance_->InitAsDefaultInstance();
  VerticaDLRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_worker_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_worker_2eproto {
  StaticDescriptorInitializer_worker_2eproto() {
    protobuf_AddDesc_worker_2eproto();
  }
} static_descriptor_initializer_worker_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int HelloRequest::kMasterLocationFieldNumber;
const int HelloRequest::kWorkerLocationFieldNumber;
const int HelloRequest::kAbsTimeFieldNumber;
const int HelloRequest::kReplyAttrFlagFieldNumber;
const int HelloRequest::kIsHeartbeatFieldNumber;
#endif  // !_MSC_VER

HelloRequest::HelloRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.HelloRequest)
}

void HelloRequest::InitAsDefaultInstance() {
  master_location_ = const_cast< ::presto::ServerInfo*>(&::presto::ServerInfo::default_instance());
  worker_location_ = const_cast< ::presto::ServerInfo*>(&::presto::ServerInfo::default_instance());
}

HelloRequest::HelloRequest(const HelloRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.HelloRequest)
}

void HelloRequest::SharedCtor() {
  _cached_size_ = 0;
  master_location_ = NULL;
  worker_location_ = NULL;
  abs_time_ = GOOGLE_LONGLONG(0);
  reply_attr_flag_ = 0;
  is_heartbeat_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:presto.HelloRequest)
  SharedDtor();
}

void HelloRequest::SharedDtor() {
  if (this != default_instance_) {
    delete master_location_;
    delete worker_location_;
  }
}

void HelloRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HelloRequest_descriptor_;
}

const HelloRequest& HelloRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

HelloRequest* HelloRequest::default_instance_ = NULL;

HelloRequest* HelloRequest::New() const {
  return new HelloRequest;
}

void HelloRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HelloRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(abs_time_, is_heartbeat_);
    if (has_master_location()) {
      if (master_location_ != NULL) master_location_->::presto::ServerInfo::Clear();
    }
    if (has_worker_location()) {
      if (worker_location_ != NULL) worker_location_->::presto::ServerInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HelloRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.HelloRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .presto.ServerInfo master_location = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_master_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_worker_location;
        break;
      }

      // required .presto.ServerInfo worker_location = 2;
      case 2: {
        if (tag == 18) {
         parse_worker_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_worker_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_abs_time;
        break;
      }

      // optional int64 abs_time = 3;
      case 3: {
        if (tag == 24) {
         parse_abs_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &abs_time_)));
          set_has_abs_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_reply_attr_flag;
        break;
      }

      // optional int32 reply_attr_flag = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_reply_attr_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reply_attr_flag_)));
          set_has_reply_attr_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_is_heartbeat;
        break;
      }

      // optional bool is_heartbeat = 5 [default = false];
      case 5: {
        if (tag == 40) {
         parse_is_heartbeat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_heartbeat_)));
          set_has_is_heartbeat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.HelloRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.HelloRequest)
  return false;
#undef DO_
}

void HelloRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.HelloRequest)
  // optional .presto.ServerInfo master_location = 1;
  if (has_master_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->master_location(), output);
  }

  // required .presto.ServerInfo worker_location = 2;
  if (has_worker_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->worker_location(), output);
  }

  // optional int64 abs_time = 3;
  if (has_abs_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->abs_time(), output);
  }

  // optional int32 reply_attr_flag = 4 [default = 0];
  if (has_reply_attr_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reply_attr_flag(), output);
  }

  // optional bool is_heartbeat = 5 [default = false];
  if (has_is_heartbeat()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_heartbeat(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.HelloRequest)
}

::google::protobuf::uint8* HelloRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.HelloRequest)
  // optional .presto.ServerInfo master_location = 1;
  if (has_master_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->master_location(), target);
  }

  // required .presto.ServerInfo worker_location = 2;
  if (has_worker_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->worker_location(), target);
  }

  // optional int64 abs_time = 3;
  if (has_abs_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->abs_time(), target);
  }

  // optional int32 reply_attr_flag = 4 [default = 0];
  if (has_reply_attr_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reply_attr_flag(), target);
  }

  // optional bool is_heartbeat = 5 [default = false];
  if (has_is_heartbeat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_heartbeat(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.HelloRequest)
  return target;
}

int HelloRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .presto.ServerInfo master_location = 1;
    if (has_master_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->master_location());
    }

    // required .presto.ServerInfo worker_location = 2;
    if (has_worker_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->worker_location());
    }

    // optional int64 abs_time = 3;
    if (has_abs_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->abs_time());
    }

    // optional int32 reply_attr_flag = 4 [default = 0];
    if (has_reply_attr_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reply_attr_flag());
    }

    // optional bool is_heartbeat = 5 [default = false];
    if (has_is_heartbeat()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HelloRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HelloRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HelloRequest::MergeFrom(const HelloRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_master_location()) {
      mutable_master_location()->::presto::ServerInfo::MergeFrom(from.master_location());
    }
    if (from.has_worker_location()) {
      mutable_worker_location()->::presto::ServerInfo::MergeFrom(from.worker_location());
    }
    if (from.has_abs_time()) {
      set_abs_time(from.abs_time());
    }
    if (from.has_reply_attr_flag()) {
      set_reply_attr_flag(from.reply_attr_flag());
    }
    if (from.has_is_heartbeat()) {
      set_is_heartbeat(from.is_heartbeat());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HelloRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (has_master_location()) {
    if (!this->master_location().IsInitialized()) return false;
  }
  if (has_worker_location()) {
    if (!this->worker_location().IsInitialized()) return false;
  }
  return true;
}

void HelloRequest::Swap(HelloRequest* other) {
  if (other != this) {
    std::swap(master_location_, other->master_location_);
    std::swap(worker_location_, other->worker_location_);
    std::swap(abs_time_, other->abs_time_);
    std::swap(reply_attr_flag_, other->reply_attr_flag_);
    std::swap(is_heartbeat_, other->is_heartbeat_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HelloRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HelloRequest_descriptor_;
  metadata.reflection = HelloRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateRequest::kArrFieldNumber;
const int CreateRequest::kInitialDataFieldNumber;
#endif  // !_MSC_VER

CreateRequest::CreateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.CreateRequest)
}

void CreateRequest::InitAsDefaultInstance() {
  arr_ = const_cast< ::presto::Array*>(&::presto::Array::default_instance());
}

CreateRequest::CreateRequest(const CreateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.CreateRequest)
}

void CreateRequest::SharedCtor() {
  _cached_size_ = 0;
  arr_ = NULL;
  initial_data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateRequest::~CreateRequest() {
  // @@protoc_insertion_point(destructor:presto.CreateRequest)
  SharedDtor();
}

void CreateRequest::SharedDtor() {
  if (this != default_instance_) {
    delete arr_;
  }
}

void CreateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateRequest_descriptor_;
}

const CreateRequest& CreateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

CreateRequest* CreateRequest::default_instance_ = NULL;

CreateRequest* CreateRequest::New() const {
  return new CreateRequest;
}

void CreateRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_arr()) {
      if (arr_ != NULL) arr_->::presto::Array::Clear();
    }
    initial_data_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.CreateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .presto.Array arr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_initial_data;
        break;
      }

      // optional double initial_data = 2 [default = 0];
      case 2: {
        if (tag == 17) {
         parse_initial_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &initial_data_)));
          set_has_initial_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.CreateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.CreateRequest)
  return false;
#undef DO_
}

void CreateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.CreateRequest)
  // required .presto.Array arr = 1;
  if (has_arr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arr(), output);
  }

  // optional double initial_data = 2 [default = 0];
  if (has_initial_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->initial_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.CreateRequest)
}

::google::protobuf::uint8* CreateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.CreateRequest)
  // required .presto.Array arr = 1;
  if (has_arr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arr(), target);
  }

  // optional double initial_data = 2 [default = 0];
  if (has_initial_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->initial_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.CreateRequest)
  return target;
}

int CreateRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .presto.Array arr = 1;
    if (has_arr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arr());
    }

    // optional double initial_data = 2 [default = 0];
    if (has_initial_data()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateRequest::MergeFrom(const CreateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_arr()) {
      mutable_arr()->::presto::Array::MergeFrom(from.arr());
    }
    if (from.has_initial_data()) {
      set_initial_data(from.initial_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRequest::CopyFrom(const CreateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_arr()) {
    if (!this->arr().IsInitialized()) return false;
  }
  return true;
}

void CreateRequest::Swap(CreateRequest* other) {
  if (other != this) {
    std::swap(arr_, other->arr_);
    std::swap(initial_data_, other->initial_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateRequest_descriptor_;
  metadata.reflection = CreateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClearRequest::kNameFieldNumber;
const int ClearRequest::kStoreFieldNumber;
const int ClearRequest::kIdFieldNumber;
const int ClearRequest::kUidFieldNumber;
#endif  // !_MSC_VER

ClearRequest::ClearRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.ClearRequest)
}

void ClearRequest::InitAsDefaultInstance() {
}

ClearRequest::ClearRequest(const ClearRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.ClearRequest)
}

void ClearRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  uid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClearRequest::~ClearRequest() {
  // @@protoc_insertion_point(destructor:presto.ClearRequest)
  SharedDtor();
}

void ClearRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (store_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete store_;
  }
  if (this != default_instance_) {
  }
}

void ClearRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClearRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClearRequest_descriptor_;
}

const ClearRequest& ClearRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

ClearRequest* ClearRequest::default_instance_ = NULL;

ClearRequest* ClearRequest::New() const {
  return new ClearRequest;
}

void ClearRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ClearRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(id_, uid_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_store()) {
      if (store_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        store_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClearRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.ClearRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_store;
        break;
      }

      // optional string store = 2;
      case 2: {
        if (tag == 18) {
         parse_store:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->store().data(), this->store().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "store");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // optional int64 id = 3;
      case 3: {
        if (tag == 24) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uid;
        break;
      }

      // required int64 uid = 4;
      case 4: {
        if (tag == 32) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.ClearRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.ClearRequest)
  return false;
#undef DO_
}

void ClearRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.ClearRequest)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string store = 2;
  if (has_store()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store().data(), this->store().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "store");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->store(), output);
  }

  // optional int64 id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->id(), output);
  }

  // required int64 uid = 4;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.ClearRequest)
}

::google::protobuf::uint8* ClearRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.ClearRequest)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string store = 2;
  if (has_store()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store().data(), this->store().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "store");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->store(), target);
  }

  // optional int64 id = 3;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->id(), target);
  }

  // required int64 uid = 4;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.ClearRequest)
  return target;
}

int ClearRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string store = 2;
    if (has_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->store());
    }

    // optional int64 id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // required int64 uid = 4;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClearRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClearRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClearRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClearRequest::MergeFrom(const ClearRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_store()) {
      set_store(from.store());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClearRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearRequest::CopyFrom(const ClearRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  return true;
}

void ClearRequest::Swap(ClearRequest* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(store_, other->store_);
    std::swap(id_, other->id_);
    std::swap(uid_, other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClearRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClearRequest_descriptor_;
  metadata.reflection = ClearRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TransferRequest::kArrFieldNumber;
const int TransferRequest::kHostnameFieldNumber;
const int TransferRequest::kPortFieldNumber;
#endif  // !_MSC_VER

TransferRequest::TransferRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.TransferRequest)
}

void TransferRequest::InitAsDefaultInstance() {
  arr_ = const_cast< ::presto::Array*>(&::presto::Array::default_instance());
}

TransferRequest::TransferRequest(const TransferRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.TransferRequest)
}

void TransferRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  arr_ = NULL;
  hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TransferRequest::~TransferRequest() {
  // @@protoc_insertion_point(destructor:presto.TransferRequest)
  SharedDtor();
}

void TransferRequest::SharedDtor() {
  if (hostname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete hostname_;
  }
  if (this != default_instance_) {
    delete arr_;
  }
}

void TransferRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferRequest_descriptor_;
}

const TransferRequest& TransferRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

TransferRequest* TransferRequest::default_instance_ = NULL;

TransferRequest* TransferRequest::New() const {
  return new TransferRequest;
}

void TransferRequest::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_arr()) {
      if (arr_ != NULL) arr_->::presto::Array::Clear();
    }
    if (has_hostname()) {
      if (hostname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        hostname_->clear();
      }
    }
    port_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TransferRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.TransferRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .presto.Array arr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hostname;
        break;
      }

      // required string hostname = 2;
      case 2: {
        if (tag == 18) {
         parse_hostname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), this->hostname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hostname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_port;
        break;
      }

      // required int32 port = 3;
      case 3: {
        if (tag == 24) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.TransferRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.TransferRequest)
  return false;
#undef DO_
}

void TransferRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.TransferRequest)
  // required .presto.Array arr = 1;
  if (has_arr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arr(), output);
  }

  // required string hostname = 2;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hostname(), output);
  }

  // required int32 port = 3;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.TransferRequest)
}

::google::protobuf::uint8* TransferRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.TransferRequest)
  // required .presto.Array arr = 1;
  if (has_arr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arr(), target);
  }

  // required string hostname = 2;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hostname(), target);
  }

  // required int32 port = 3;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.TransferRequest)
  return target;
}

int TransferRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .presto.Array arr = 1;
    if (has_arr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arr());
    }

    // required string hostname = 2;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // required int32 port = 3;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TransferRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TransferRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TransferRequest::MergeFrom(const TransferRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_arr()) {
      mutable_arr()->::presto::Array::MergeFrom(from.arr());
    }
    if (from.has_hostname()) {
      set_hostname(from.hostname());
    }
    if (from.has_port()) {
      set_port(from.port());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TransferRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferRequest::CopyFrom(const TransferRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_arr()) {
    if (!this->arr().IsInitialized()) return false;
  }
  return true;
}

void TransferRequest::Swap(TransferRequest* other) {
  if (other != this) {
    std::swap(arr_, other->arr_);
    std::swap(hostname_, other->hostname_);
    std::swap(port_, other->port_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TransferRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferRequest_descriptor_;
  metadata.reflection = TransferRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateCompositeRequest::kArraynamesFieldNumber;
const int CreateCompositeRequest::kOffsetsFieldNumber;
const int CreateCompositeRequest::kDimsFieldNumber;
const int CreateCompositeRequest::kNameFieldNumber;
const int CreateCompositeRequest::kIdFieldNumber;
const int CreateCompositeRequest::kUidFieldNumber;
#endif  // !_MSC_VER

CreateCompositeRequest::CreateCompositeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.CreateCompositeRequest)
}

void CreateCompositeRequest::InitAsDefaultInstance() {
  dims_ = const_cast< ::presto::Tuple*>(&::presto::Tuple::default_instance());
}

CreateCompositeRequest::CreateCompositeRequest(const CreateCompositeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.CreateCompositeRequest)
}

void CreateCompositeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dims_ = NULL;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  uid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateCompositeRequest::~CreateCompositeRequest() {
  // @@protoc_insertion_point(destructor:presto.CreateCompositeRequest)
  SharedDtor();
}

void CreateCompositeRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete dims_;
  }
}

void CreateCompositeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateCompositeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateCompositeRequest_descriptor_;
}

const CreateCompositeRequest& CreateCompositeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

CreateCompositeRequest* CreateCompositeRequest::default_instance_ = NULL;

CreateCompositeRequest* CreateCompositeRequest::New() const {
  return new CreateCompositeRequest;
}

void CreateCompositeRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CreateCompositeRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 60) {
    ZR_(id_, uid_);
    if (has_dims()) {
      if (dims_ != NULL) dims_->::presto::Tuple::Clear();
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arraynames_.Clear();
  offsets_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateCompositeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.CreateCompositeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string arraynames = 1;
      case 1: {
        if (tag == 10) {
         parse_arraynames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_arraynames()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arraynames(this->arraynames_size() - 1).data(),
            this->arraynames(this->arraynames_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "arraynames");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_arraynames;
        if (input->ExpectTag(18)) goto parse_offsets;
        break;
      }

      // repeated .presto.Tuple offsets = 2;
      case 2: {
        if (tag == 18) {
         parse_offsets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_offsets()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_offsets;
        if (input->ExpectTag(26)) goto parse_dims;
        break;
      }

      // required .presto.Tuple dims = 3;
      case 3: {
        if (tag == 26) {
         parse_dims:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dims()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // required string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_id;
        break;
      }

      // optional int64 id = 5;
      case 5: {
        if (tag == 40) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_uid;
        break;
      }

      // required int64 uid = 6;
      case 6: {
        if (tag == 48) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.CreateCompositeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.CreateCompositeRequest)
  return false;
#undef DO_
}

void CreateCompositeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.CreateCompositeRequest)
  // repeated string arraynames = 1;
  for (int i = 0; i < this->arraynames_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->arraynames(i).data(), this->arraynames(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "arraynames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->arraynames(i), output);
  }

  // repeated .presto.Tuple offsets = 2;
  for (int i = 0; i < this->offsets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->offsets(i), output);
  }

  // required .presto.Tuple dims = 3;
  if (has_dims()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dims(), output);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional int64 id = 5;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->id(), output);
  }

  // required int64 uid = 6;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->uid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.CreateCompositeRequest)
}

::google::protobuf::uint8* CreateCompositeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.CreateCompositeRequest)
  // repeated string arraynames = 1;
  for (int i = 0; i < this->arraynames_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arraynames(i).data(), this->arraynames(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "arraynames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->arraynames(i), target);
  }

  // repeated .presto.Tuple offsets = 2;
  for (int i = 0; i < this->offsets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->offsets(i), target);
  }

  // required .presto.Tuple dims = 3;
  if (has_dims()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dims(), target);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional int64 id = 5;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->id(), target);
  }

  // required int64 uid = 6;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->uid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.CreateCompositeRequest)
  return target;
}

int CreateCompositeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // required .presto.Tuple dims = 3;
    if (has_dims()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dims());
    }

    // required string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int64 id = 5;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // required int64 uid = 6;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }

  }
  // repeated string arraynames = 1;
  total_size += 1 * this->arraynames_size();
  for (int i = 0; i < this->arraynames_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->arraynames(i));
  }

  // repeated .presto.Tuple offsets = 2;
  total_size += 1 * this->offsets_size();
  for (int i = 0; i < this->offsets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->offsets(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateCompositeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateCompositeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateCompositeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateCompositeRequest::MergeFrom(const CreateCompositeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  arraynames_.MergeFrom(from.arraynames_);
  offsets_.MergeFrom(from.offsets_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_dims()) {
      mutable_dims()->::presto::Tuple::MergeFrom(from.dims());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateCompositeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCompositeRequest::CopyFrom(const CreateCompositeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCompositeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000002c) != 0x0000002c) return false;

  return true;
}

void CreateCompositeRequest::Swap(CreateCompositeRequest* other) {
  if (other != this) {
    arraynames_.Swap(&other->arraynames_);
    offsets_.Swap(&other->offsets_);
    std::swap(dims_, other->dims_);
    std::swap(name_, other->name_);
    std::swap(id_, other->id_);
    std::swap(uid_, other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateCompositeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateCompositeRequest_descriptor_;
  metadata.reflection = CreateCompositeRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* WorkerRequest_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorkerRequest_Type_descriptor_;
}
bool WorkerRequest_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const WorkerRequest_Type WorkerRequest::HELLO;
const WorkerRequest_Type WorkerRequest::CREATE;
const WorkerRequest_Type WorkerRequest::CLEAR;
const WorkerRequest_Type WorkerRequest::CREATECOMPOSITE;
const WorkerRequest_Type WorkerRequest::TRANSFER;
const WorkerRequest_Type WorkerRequest::SHUTDOWN;
const WorkerRequest_Type WorkerRequest::FETCH;
const WorkerRequest_Type WorkerRequest::NEWEXECR;
const WorkerRequest_Type WorkerRequest::NEWTRANSFER;
const WorkerRequest_Type WorkerRequest::IO;
const WorkerRequest_Type WorkerRequest::LOG;
const WorkerRequest_Type WorkerRequest::VERTICALOAD;
const WorkerRequest_Type WorkerRequest::Type_MIN;
const WorkerRequest_Type WorkerRequest::Type_MAX;
const int WorkerRequest::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int WorkerRequest::kTypeFieldNumber;
const int WorkerRequest::kHelloFieldNumber;
const int WorkerRequest::kCreateFieldNumber;
const int WorkerRequest::kClearFieldNumber;
const int WorkerRequest::kCreatecompositeFieldNumber;
const int WorkerRequest::kTransferFieldNumber;
const int WorkerRequest::kFetchFieldNumber;
const int WorkerRequest::kNewexecrFieldNumber;
const int WorkerRequest::kIoFieldNumber;
const int WorkerRequest::kLogFieldNumber;
const int WorkerRequest::kVerticaloadFieldNumber;
const int WorkerRequest::kTraceIdFieldNumber;
const int WorkerRequest::kSpanIdFieldNumber;
const int WorkerRequest::kParentSpanIdFieldNumber;
#endif  // !_MSC_VER

WorkerRequest::WorkerRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.WorkerRequest)
}

void WorkerRequest::InitAsDefaultInstance() {
  hello_ = const_cast< ::presto::HelloRequest*>(&::presto::HelloRequest::default_instance());
  create_ = const_cast< ::presto::CreateRequest*>(&::presto::CreateRequest::default_instance());
  clear_ = const_cast< ::presto::ClearRequest*>(&::presto::ClearRequest::default_instance());
  createcomposite_ = const_cast< ::presto::CreateCompositeRequest*>(&::presto::CreateCompositeRequest::default_instance());
  transfer_ = const_cast< ::presto::TransferRequest*>(&::presto::TransferRequest::default_instance());
  fetch_ = const_cast< ::presto::FetchRequest*>(&::presto::FetchRequest::default_instance());
  newexecr_ = const_cast< ::presto::NewExecuteRRequest*>(&::presto::NewExecuteRRequest::default_instance());
  io_ = const_cast< ::presto::IORequest*>(&::presto::IORequest::default_instance());
  log_ = const_cast< ::presto::LogRequest*>(&::presto::LogRequest::default_instance());
  verticaload_ = const_cast< ::presto::VerticaDLRequest*>(&::presto::VerticaDLRequest::default_instance());
}

WorkerRequest::WorkerRequest(const WorkerRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.WorkerRequest)
}

void WorkerRequest::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  hello_ = NULL;
  create_ = NULL;
  clear_ = NULL;
  createcomposite_ = NULL;
  transfer_ = NULL;
  fetch_ = NULL;
  newexecr_ = NULL;
  io_ = NULL;
  log_ = NULL;
  verticaload_ = NULL;
  trace_id_ = GOOGLE_LONGLONG(0);
  span_id_ = GOOGLE_LONGLONG(0);
  parent_span_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WorkerRequest::~WorkerRequest() {
  // @@protoc_insertion_point(destructor:presto.WorkerRequest)
  SharedDtor();
}

void WorkerRequest::SharedDtor() {
  if (this != default_instance_) {
    delete hello_;
    delete create_;
    delete clear_;
    delete createcomposite_;
    delete transfer_;
    delete fetch_;
    delete newexecr_;
    delete io_;
    delete log_;
    delete verticaload_;
  }
}

void WorkerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorkerRequest_descriptor_;
}

const WorkerRequest& WorkerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

WorkerRequest* WorkerRequest::default_instance_ = NULL;

WorkerRequest* WorkerRequest::New() const {
  return new WorkerRequest;
}

void WorkerRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<WorkerRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    type_ = 1;
    if (has_hello()) {
      if (hello_ != NULL) hello_->::presto::HelloRequest::Clear();
    }
    if (has_create()) {
      if (create_ != NULL) create_->::presto::CreateRequest::Clear();
    }
    if (has_clear()) {
      if (clear_ != NULL) clear_->::presto::ClearRequest::Clear();
    }
    if (has_createcomposite()) {
      if (createcomposite_ != NULL) createcomposite_->::presto::CreateCompositeRequest::Clear();
    }
    if (has_transfer()) {
      if (transfer_ != NULL) transfer_->::presto::TransferRequest::Clear();
    }
    if (has_fetch()) {
      if (fetch_ != NULL) fetch_->::presto::FetchRequest::Clear();
    }
    if (has_newexecr()) {
      if (newexecr_ != NULL) newexecr_->::presto::NewExecuteRRequest::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 16128) {
    ZR_(trace_id_, parent_span_id_);
    if (has_io()) {
      if (io_ != NULL) io_->::presto::IORequest::Clear();
    }
    if (has_log()) {
      if (log_ != NULL) log_->::presto::LogRequest::Clear();
    }
    if (has_verticaload()) {
      if (verticaload_ != NULL) verticaload_->::presto::VerticaDLRequest::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WorkerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.WorkerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .presto.WorkerRequest.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::presto::WorkerRequest_Type_IsValid(value)) {
            set_type(static_cast< ::presto::WorkerRequest_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hello;
        break;
      }

      // optional .presto.HelloRequest hello = 2;
      case 2: {
        if (tag == 18) {
         parse_hello:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hello()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_create;
        break;
      }

      // optional .presto.CreateRequest create = 3;
      case 3: {
        if (tag == 26) {
         parse_create:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_clear;
        break;
      }

      // optional .presto.ClearRequest clear = 4;
      case 4: {
        if (tag == 34) {
         parse_clear:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clear()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_createcomposite;
        break;
      }

      // optional .presto.CreateCompositeRequest createcomposite = 5;
      case 5: {
        if (tag == 42) {
         parse_createcomposite:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createcomposite()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_transfer;
        break;
      }

      // optional .presto.TransferRequest transfer = 6;
      case 6: {
        if (tag == 50) {
         parse_transfer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transfer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_fetch;
        break;
      }

      // optional .presto.FetchRequest fetch = 7;
      case 7: {
        if (tag == 58) {
         parse_fetch:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fetch()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_newexecr;
        break;
      }

      // optional .presto.NewExecuteRRequest newexecr = 8;
      case 8: {
        if (tag == 66) {
         parse_newexecr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newexecr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_io;
        break;
      }

      // optional .presto.IORequest io = 9;
      case 9: {
        if (tag == 74) {
         parse_io:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_io()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_log;
        break;
      }

      // optional .presto.LogRequest log = 10;
      case 10: {
        if (tag == 82) {
         parse_log:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_log()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_verticaload;
        break;
      }

      // optional .presto.VerticaDLRequest verticaload = 11;
      case 11: {
        if (tag == 90) {
         parse_verticaload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_verticaload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_trace_id;
        break;
      }

      // optional int64 trace_id = 12;
      case 12: {
        if (tag == 96) {
         parse_trace_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &trace_id_)));
          set_has_trace_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_span_id;
        break;
      }

      // optional int64 span_id = 13;
      case 13: {
        if (tag == 104) {
         parse_span_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &span_id_)));
          set_has_span_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_parent_span_id;
        break;
      }

      // optional int64 parent_span_id = 14;
      case 14: {
        if (tag == 112) {
         parse_parent_span_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parent_span_id_)));
          set_has_parent_span_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.WorkerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.WorkerRequest)
  return false;
#undef DO_
}

void WorkerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.WorkerRequest)
  // required .presto.WorkerRequest.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .presto.HelloRequest hello = 2;
  if (has_hello()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hello(), output);
  }

  // optional .presto.CreateRequest create = 3;
  if (has_create()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->create(), output);
  }

  // optional .presto.ClearRequest clear = 4;
  if (has_clear()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->clear(), output);
  }

  // optional .presto.CreateCompositeRequest createcomposite = 5;
  if (has_createcomposite()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->createcomposite(), output);
  }

  // optional .presto.TransferRequest transfer = 6;
  if (has_transfer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->transfer(), output);
  }

  // optional .presto.FetchRequest fetch = 7;
  if (has_fetch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->fetch(), output);
  }

  // optional .presto.NewExecuteRRequest newexecr = 8;
  if (has_newexecr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->newexecr(), output);
  }

  // optional .presto.IORequest io = 9;
  if (has_io()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->io(), output);
  }

  // optional .presto.LogRequest log = 10;
  if (has_log()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->log(), output);
  }

  // optional .presto.VerticaDLRequest verticaload = 11;
  if (has_verticaload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->verticaload(), output);
  }

  // optional int64 trace_id = 12;
  if (has_trace_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->trace_id(), output);
  }

  // optional int64 span_id = 13;
  if (has_span_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->span_id(), output);
  }

  // optional int64 parent_span_id = 14;
  if (has_parent_span_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->parent_span_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.WorkerRequest)
}

::google::protobuf::uint8* WorkerRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.WorkerRequest)
  // required .presto.WorkerRequest.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .presto.HelloRequest hello = 2;
  if (has_hello()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hello(), target);
  }

  // optional .presto.CreateRequest create = 3;
  if (has_create()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->create(), target);
  }

  // optional .presto.ClearRequest clear = 4;
  if (has_clear()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->clear(), target);
  }

  // optional .presto.CreateCompositeRequest createcomposite = 5;
  if (has_createcomposite()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->createcomposite(), target);
  }

  // optional .presto.TransferRequest transfer = 6;
  if (has_transfer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->transfer(), target);
  }

  // optional .presto.FetchRequest fetch = 7;
  if (has_fetch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->fetch(), target);
  }

  // optional .presto.NewExecuteRRequest newexecr = 8;
  if (has_newexecr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->newexecr(), target);
  }

  // optional .presto.IORequest io = 9;
  if (has_io()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->io(), target);
  }

  // optional .presto.LogRequest log = 10;
  if (has_log()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->log(), target);
  }

  // optional .presto.VerticaDLRequest verticaload = 11;
  if (has_verticaload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->verticaload(), target);
  }

  // optional int64 trace_id = 12;
  if (has_trace_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->trace_id(), target);
  }

  // optional int64 span_id = 13;
  if (has_span_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->span_id(), target);
  }

  // optional int64 parent_span_id = 14;
  if (has_parent_span_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->parent_span_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.WorkerRequest)
  return target;
}

int WorkerRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .presto.WorkerRequest.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .presto.HelloRequest hello = 2;
    if (has_hello()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hello());
    }

    // optional .presto.CreateRequest create = 3;
    if (has_create()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->create());
    }

    // optional .presto.ClearRequest clear = 4;
    if (has_clear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->clear());
    }

    // optional .presto.CreateCompositeRequest createcomposite = 5;
    if (has_createcomposite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->createcomposite());
    }

    // optional .presto.TransferRequest transfer = 6;
    if (has_transfer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transfer());
    }

    // optional .presto.FetchRequest fetch = 7;
    if (has_fetch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fetch());
    }

    // optional .presto.NewExecuteRRequest newexecr = 8;
    if (has_newexecr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->newexecr());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .presto.IORequest io = 9;
    if (has_io()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->io());
    }

    // optional .presto.LogRequest log = 10;
    if (has_log()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->log());
    }

    // optional .presto.VerticaDLRequest verticaload = 11;
    if (has_verticaload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->verticaload());
    }

    // optional int64 trace_id = 12;
    if (has_trace_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->trace_id());
    }

    // optional int64 span_id = 13;
    if (has_span_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->span_id());
    }

    // optional int64 parent_span_id = 14;
    if (has_parent_span_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->parent_span_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkerRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WorkerRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WorkerRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WorkerRequest::MergeFrom(const WorkerRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_hello()) {
      mutable_hello()->::presto::HelloRequest::MergeFrom(from.hello());
    }
    if (from.has_create()) {
      mutable_create()->::presto::CreateRequest::MergeFrom(from.create());
    }
    if (from.has_clear()) {
      mutable_clear()->::presto::ClearRequest::MergeFrom(from.clear());
    }
    if (from.has_createcomposite()) {
      mutable_createcomposite()->::presto::CreateCompositeRequest::MergeFrom(from.createcomposite());
    }
    if (from.has_transfer()) {
      mutable_transfer()->::presto::TransferRequest::MergeFrom(from.transfer());
    }
    if (from.has_fetch()) {
      mutable_fetch()->::presto::FetchRequest::MergeFrom(from.fetch());
    }
    if (from.has_newexecr()) {
      mutable_newexecr()->::presto::NewExecuteRRequest::MergeFrom(from.newexecr());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_io()) {
      mutable_io()->::presto::IORequest::MergeFrom(from.io());
    }
    if (from.has_log()) {
      mutable_log()->::presto::LogRequest::MergeFrom(from.log());
    }
    if (from.has_verticaload()) {
      mutable_verticaload()->::presto::VerticaDLRequest::MergeFrom(from.verticaload());
    }
    if (from.has_trace_id()) {
      set_trace_id(from.trace_id());
    }
    if (from.has_span_id()) {
      set_span_id(from.span_id());
    }
    if (from.has_parent_span_id()) {
      set_parent_span_id(from.parent_span_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WorkerRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerRequest::CopyFrom(const WorkerRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_hello()) {
    if (!this->hello().IsInitialized()) return false;
  }
  if (has_create()) {
    if (!this->create().IsInitialized()) return false;
  }
  if (has_clear()) {
    if (!this->clear().IsInitialized()) return false;
  }
  if (has_createcomposite()) {
    if (!this->createcomposite().IsInitialized()) return false;
  }
  if (has_transfer()) {
    if (!this->transfer().IsInitialized()) return false;
  }
  if (has_fetch()) {
    if (!this->fetch().IsInitialized()) return false;
  }
  if (has_newexecr()) {
    if (!this->newexecr().IsInitialized()) return false;
  }
  if (has_io()) {
    if (!this->io().IsInitialized()) return false;
  }
  if (has_log()) {
    if (!this->log().IsInitialized()) return false;
  }
  if (has_verticaload()) {
    if (!this->verticaload().IsInitialized()) return false;
  }
  return true;
}

void WorkerRequest::Swap(WorkerRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(hello_, other->hello_);
    std::swap(create_, other->create_);
    std::swap(clear_, other->clear_);
    std::swap(createcomposite_, other->createcomposite_);
    std::swap(transfer_, other->transfer_);
    std::swap(fetch_, other->fetch_);
    std::swap(newexecr_, other->newexecr_);
    std::swap(io_, other->io_);
    std::swap(log_, other->log_);
    std::swap(verticaload_, other->verticaload_);
    std::swap(trace_id_, other->trace_id_);
    std::swap(span_id_, other->span_id_);
    std::swap(parent_span_id_, other->parent_span_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WorkerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorkerRequest_descriptor_;
  metadata.reflection = WorkerRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FetchRequest::kNameFieldNumber;
const int FetchRequest::kLocationFieldNumber;
const int FetchRequest::kSizeFieldNumber;
const int FetchRequest::kStoreFieldNumber;
const int FetchRequest::kIdFieldNumber;
const int FetchRequest::kUidFieldNumber;
#endif  // !_MSC_VER

FetchRequest::FetchRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.FetchRequest)
}

void FetchRequest::InitAsDefaultInstance() {
  location_ = const_cast< ::presto::ServerInfo*>(&::presto::ServerInfo::default_instance());
}

FetchRequest::FetchRequest(const FetchRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.FetchRequest)
}

void FetchRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_ = NULL;
  size_ = GOOGLE_LONGLONG(0);
  store_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  uid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FetchRequest::~FetchRequest() {
  // @@protoc_insertion_point(destructor:presto.FetchRequest)
  SharedDtor();
}

void FetchRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (store_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete store_;
  }
  if (this != default_instance_) {
    delete location_;
  }
}

void FetchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FetchRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FetchRequest_descriptor_;
}

const FetchRequest& FetchRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

FetchRequest* FetchRequest::default_instance_ = NULL;

FetchRequest* FetchRequest::New() const {
  return new FetchRequest;
}

void FetchRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FetchRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(id_, uid_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_location()) {
      if (location_ != NULL) location_->::presto::ServerInfo::Clear();
    }
    size_ = GOOGLE_LONGLONG(0);
    if (has_store()) {
      if (store_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        store_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FetchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.FetchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_location;
        break;
      }

      // required .presto.ServerInfo location = 2;
      case 2: {
        if (tag == 18) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_size;
        break;
      }

      // required int64 size = 3;
      case 3: {
        if (tag == 24) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_store;
        break;
      }

      // optional string store = 4;
      case 4: {
        if (tag == 34) {
         parse_store:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->store().data(), this->store().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "store");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_id;
        break;
      }

      // optional int64 id = 5;
      case 5: {
        if (tag == 40) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_uid;
        break;
      }

      // optional int64 uid = 6;
      case 6: {
        if (tag == 48) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.FetchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.FetchRequest)
  return false;
#undef DO_
}

void FetchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.FetchRequest)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .presto.ServerInfo location = 2;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->location(), output);
  }

  // required int64 size = 3;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->size(), output);
  }

  // optional string store = 4;
  if (has_store()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store().data(), this->store().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "store");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->store(), output);
  }

  // optional int64 id = 5;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->id(), output);
  }

  // optional int64 uid = 6;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->uid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.FetchRequest)
}

::google::protobuf::uint8* FetchRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.FetchRequest)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .presto.ServerInfo location = 2;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->location(), target);
  }

  // required int64 size = 3;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->size(), target);
  }

  // optional string store = 4;
  if (has_store()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store().data(), this->store().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "store");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->store(), target);
  }

  // optional int64 id = 5;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->id(), target);
  }

  // optional int64 uid = 6;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->uid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.FetchRequest)
  return target;
}

int FetchRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .presto.ServerInfo location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }

    // required int64 size = 3;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->size());
    }

    // optional string store = 4;
    if (has_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->store());
    }

    // optional int64 id = 5;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional int64 uid = 6;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FetchRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FetchRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FetchRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FetchRequest::MergeFrom(const FetchRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_location()) {
      mutable_location()->::presto::ServerInfo::MergeFrom(from.location());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
    if (from.has_store()) {
      set_store(from.store());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FetchRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchRequest::CopyFrom(const FetchRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void FetchRequest::Swap(FetchRequest* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(location_, other->location_);
    std::swap(size_, other->size_);
    std::swap(store_, other->store_);
    std::swap(id_, other->id_);
    std::swap(uid_, other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FetchRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FetchRequest_descriptor_;
  metadata.reflection = FetchRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewExecuteRRequest::kFuncFieldNumber;
const int NewExecuteRRequest::kArgsFieldNumber;
const int NewExecuteRRequest::kRawArgsFieldNumber;
const int NewExecuteRRequest::kCompositeArgsFieldNumber;
const int NewExecuteRRequest::kIdFieldNumber;
const int NewExecuteRRequest::kUidFieldNumber;
#endif  // !_MSC_VER

NewExecuteRRequest::NewExecuteRRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.NewExecuteRRequest)
}

void NewExecuteRRequest::InitAsDefaultInstance() {
}

NewExecuteRRequest::NewExecuteRRequest(const NewExecuteRRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.NewExecuteRRequest)
}

void NewExecuteRRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  uid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewExecuteRRequest::~NewExecuteRRequest() {
  // @@protoc_insertion_point(destructor:presto.NewExecuteRRequest)
  SharedDtor();
}

void NewExecuteRRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewExecuteRRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewExecuteRRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewExecuteRRequest_descriptor_;
}

const NewExecuteRRequest& NewExecuteRRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

NewExecuteRRequest* NewExecuteRRequest::default_instance_ = NULL;

NewExecuteRRequest* NewExecuteRRequest::New() const {
  return new NewExecuteRRequest;
}

void NewExecuteRRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NewExecuteRRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, uid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  func_.Clear();
  args_.Clear();
  raw_args_.Clear();
  composite_args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewExecuteRRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.NewExecuteRRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string func = 1;
      case 1: {
        if (tag == 10) {
         parse_func:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_func()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->func(this->func_size() - 1).data(),
            this->func(this->func_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "func");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_func;
        if (input->ExpectTag(18)) goto parse_args;
        break;
      }

      // repeated .presto.NewArg args = 2;
      case 2: {
        if (tag == 18) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_args;
        if (input->ExpectTag(26)) goto parse_raw_args;
        break;
      }

      // repeated .presto.RawArg raw_args = 3;
      case 3: {
        if (tag == 26) {
         parse_raw_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_raw_args()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_raw_args;
        if (input->ExpectTag(34)) goto parse_composite_args;
        break;
      }

      // repeated .presto.NewArg composite_args = 4;
      case 4: {
        if (tag == 34) {
         parse_composite_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_composite_args()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_composite_args;
        if (input->ExpectTag(40)) goto parse_id;
        break;
      }

      // optional int64 id = 5;
      case 5: {
        if (tag == 40) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_uid;
        break;
      }

      // required int64 uid = 6;
      case 6: {
        if (tag == 48) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.NewExecuteRRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.NewExecuteRRequest)
  return false;
#undef DO_
}

void NewExecuteRRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.NewExecuteRRequest)
  // repeated string func = 1;
  for (int i = 0; i < this->func_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->func(i).data(), this->func(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "func");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->func(i), output);
  }

  // repeated .presto.NewArg args = 2;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->args(i), output);
  }

  // repeated .presto.RawArg raw_args = 3;
  for (int i = 0; i < this->raw_args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->raw_args(i), output);
  }

  // repeated .presto.NewArg composite_args = 4;
  for (int i = 0; i < this->composite_args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->composite_args(i), output);
  }

  // optional int64 id = 5;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->id(), output);
  }

  // required int64 uid = 6;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->uid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.NewExecuteRRequest)
}

::google::protobuf::uint8* NewExecuteRRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.NewExecuteRRequest)
  // repeated string func = 1;
  for (int i = 0; i < this->func_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->func(i).data(), this->func(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "func");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->func(i), target);
  }

  // repeated .presto.NewArg args = 2;
  for (int i = 0; i < this->args_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->args(i), target);
  }

  // repeated .presto.RawArg raw_args = 3;
  for (int i = 0; i < this->raw_args_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->raw_args(i), target);
  }

  // repeated .presto.NewArg composite_args = 4;
  for (int i = 0; i < this->composite_args_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->composite_args(i), target);
  }

  // optional int64 id = 5;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->id(), target);
  }

  // required int64 uid = 6;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->uid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.NewExecuteRRequest)
  return target;
}

int NewExecuteRRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[4 / 32] & (0xffu << (4 % 32))) {
    // optional int64 id = 5;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // required int64 uid = 6;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }

  }
  // repeated string func = 1;
  total_size += 1 * this->func_size();
  for (int i = 0; i < this->func_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->func(i));
  }

  // repeated .presto.NewArg args = 2;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->args(i));
  }

  // repeated .presto.RawArg raw_args = 3;
  total_size += 1 * this->raw_args_size();
  for (int i = 0; i < this->raw_args_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->raw_args(i));
  }

  // repeated .presto.NewArg composite_args = 4;
  total_size += 1 * this->composite_args_size();
  for (int i = 0; i < this->composite_args_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->composite_args(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewExecuteRRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewExecuteRRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewExecuteRRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewExecuteRRequest::MergeFrom(const NewExecuteRRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  func_.MergeFrom(from.func_);
  args_.MergeFrom(from.args_);
  raw_args_.MergeFrom(from.raw_args_);
  composite_args_.MergeFrom(from.composite_args_);
  if (from._has_bits_[4 / 32] & (0xffu << (4 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewExecuteRRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewExecuteRRequest::CopyFrom(const NewExecuteRRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewExecuteRRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->args())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->raw_args())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->composite_args())) return false;
  return true;
}

void NewExecuteRRequest::Swap(NewExecuteRRequest* other) {
  if (other != this) {
    func_.Swap(&other->func_);
    args_.Swap(&other->args_);
    raw_args_.Swap(&other->raw_args_);
    composite_args_.Swap(&other->composite_args_);
    std::swap(id_, other->id_);
    std::swap(uid_, other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewExecuteRRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewExecuteRRequest_descriptor_;
  metadata.reflection = NewExecuteRRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* IORequest_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IORequest_Type_descriptor_;
}
bool IORequest_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const IORequest_Type IORequest::LOAD;
const IORequest_Type IORequest::SAVE;
const IORequest_Type IORequest::Type_MIN;
const IORequest_Type IORequest::Type_MAX;
const int IORequest::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int IORequest::kArrayNameFieldNumber;
const int IORequest::kStoreNameFieldNumber;
const int IORequest::kTypeFieldNumber;
const int IORequest::kIdFieldNumber;
const int IORequest::kUidFieldNumber;
#endif  // !_MSC_VER

IORequest::IORequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.IORequest)
}

void IORequest::InitAsDefaultInstance() {
}

IORequest::IORequest(const IORequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.IORequest)
}

void IORequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  array_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
  id_ = GOOGLE_LONGLONG(0);
  uid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IORequest::~IORequest() {
  // @@protoc_insertion_point(destructor:presto.IORequest)
  SharedDtor();
}

void IORequest::SharedDtor() {
  if (array_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete array_name_;
  }
  if (store_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete store_name_;
  }
  if (this != default_instance_) {
  }
}

void IORequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IORequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IORequest_descriptor_;
}

const IORequest& IORequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

IORequest* IORequest::default_instance_ = NULL;

IORequest* IORequest::New() const {
  return new IORequest;
}

void IORequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<IORequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(id_, uid_);
    if (has_array_name()) {
      if (array_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        array_name_->clear();
      }
    }
    if (has_store_name()) {
      if (store_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        store_name_->clear();
      }
    }
    type_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IORequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.IORequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string array_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_array_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->array_name().data(), this->array_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "array_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_store_name;
        break;
      }

      // required string store_name = 2;
      case 2: {
        if (tag == 18) {
         parse_store_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->store_name().data(), this->store_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "store_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // required .presto.IORequest.Type type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::presto::IORequest_Type_IsValid(value)) {
            set_type(static_cast< ::presto::IORequest_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_id;
        break;
      }

      // optional int64 id = 4;
      case 4: {
        if (tag == 32) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_uid;
        break;
      }

      // required int64 uid = 5;
      case 5: {
        if (tag == 40) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.IORequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.IORequest)
  return false;
#undef DO_
}

void IORequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.IORequest)
  // required string array_name = 1;
  if (has_array_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->array_name().data(), this->array_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "array_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->array_name(), output);
  }

  // required string store_name = 2;
  if (has_store_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store_name().data(), this->store_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "store_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->store_name(), output);
  }

  // required .presto.IORequest.Type type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // optional int64 id = 4;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->id(), output);
  }

  // required int64 uid = 5;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->uid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.IORequest)
}

::google::protobuf::uint8* IORequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.IORequest)
  // required string array_name = 1;
  if (has_array_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->array_name().data(), this->array_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "array_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->array_name(), target);
  }

  // required string store_name = 2;
  if (has_store_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store_name().data(), this->store_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "store_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->store_name(), target);
  }

  // required .presto.IORequest.Type type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // optional int64 id = 4;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->id(), target);
  }

  // required int64 uid = 5;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->uid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.IORequest)
  return target;
}

int IORequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string array_name = 1;
    if (has_array_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->array_name());
    }

    // required string store_name = 2;
    if (has_store_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->store_name());
    }

    // required .presto.IORequest.Type type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int64 id = 4;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // required int64 uid = 5;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IORequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IORequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IORequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IORequest::MergeFrom(const IORequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_array_name()) {
      set_array_name(from.array_name());
    }
    if (from.has_store_name()) {
      set_store_name(from.store_name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IORequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IORequest::CopyFrom(const IORequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IORequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000017) != 0x00000017) return false;

  return true;
}

void IORequest::Swap(IORequest* other) {
  if (other != this) {
    std::swap(array_name_, other->array_name_);
    std::swap(store_name_, other->store_name_);
    std::swap(type_, other->type_);
    std::swap(id_, other->id_);
    std::swap(uid_, other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IORequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IORequest_descriptor_;
  metadata.reflection = IORequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LogRequest::kMsgFieldNumber;
#endif  // !_MSC_VER

LogRequest::LogRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.LogRequest)
}

void LogRequest::InitAsDefaultInstance() {
}

LogRequest::LogRequest(const LogRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.LogRequest)
}

void LogRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogRequest::~LogRequest() {
  // @@protoc_insertion_point(destructor:presto.LogRequest)
  SharedDtor();
}

void LogRequest::SharedDtor() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

void LogRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogRequest_descriptor_;
}

const LogRequest& LogRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

LogRequest* LogRequest::default_instance_ = NULL;

LogRequest* LogRequest::New() const {
  return new LogRequest;
}

void LogRequest::Clear() {
  if (has_msg()) {
    if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      msg_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.LogRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.LogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.LogRequest)
  return false;
#undef DO_
}

void LogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.LogRequest)
  // required string msg = 1;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.LogRequest)
}

::google::protobuf::uint8* LogRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.LogRequest)
  // required string msg = 1;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.LogRequest)
  return target;
}

int LogRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string msg = 1;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LogRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LogRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LogRequest::MergeFrom(const LogRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LogRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogRequest::CopyFrom(const LogRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LogRequest::Swap(LogRequest* other) {
  if (other != this) {
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LogRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogRequest_descriptor_;
  metadata.reflection = LogRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* VerticaDLRequest_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VerticaDLRequest_Type_descriptor_;
}
bool VerticaDLRequest_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const VerticaDLRequest_Type VerticaDLRequest::START;
const VerticaDLRequest_Type VerticaDLRequest::FETCH;
const VerticaDLRequest_Type VerticaDLRequest::STOP;
const VerticaDLRequest_Type VerticaDLRequest::Type_MIN;
const VerticaDLRequest_Type VerticaDLRequest::Type_MAX;
const int VerticaDLRequest::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int VerticaDLRequest::kTypeFieldNumber;
const int VerticaDLRequest::kSplitSizeFieldNumber;
const int VerticaDLRequest::kSplitNameFieldNumber;
const int VerticaDLRequest::kQueryResultFieldNumber;
const int VerticaDLRequest::kIdFieldNumber;
const int VerticaDLRequest::kUidFieldNumber;
#endif  // !_MSC_VER

VerticaDLRequest::VerticaDLRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.VerticaDLRequest)
}

void VerticaDLRequest::InitAsDefaultInstance() {
}

VerticaDLRequest::VerticaDLRequest(const VerticaDLRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.VerticaDLRequest)
}

void VerticaDLRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 1;
  split_size_ = GOOGLE_LONGLONG(0);
  split_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  uid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VerticaDLRequest::~VerticaDLRequest() {
  // @@protoc_insertion_point(destructor:presto.VerticaDLRequest)
  SharedDtor();
}

void VerticaDLRequest::SharedDtor() {
  if (split_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete split_name_;
  }
  if (this != default_instance_) {
  }
}

void VerticaDLRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerticaDLRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VerticaDLRequest_descriptor_;
}

const VerticaDLRequest& VerticaDLRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_worker_2eproto();
  return *default_instance_;
}

VerticaDLRequest* VerticaDLRequest::default_instance_ = NULL;

VerticaDLRequest* VerticaDLRequest::New() const {
  return new VerticaDLRequest;
}

void VerticaDLRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<VerticaDLRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 55) {
    ZR_(id_, uid_);
    type_ = 1;
    split_size_ = GOOGLE_LONGLONG(0);
    if (has_split_name()) {
      if (split_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        split_name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  query_result_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VerticaDLRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.VerticaDLRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .presto.VerticaDLRequest.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::presto::VerticaDLRequest_Type_IsValid(value)) {
            set_type(static_cast< ::presto::VerticaDLRequest_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_split_size;
        break;
      }

      // optional int64 split_size = 2;
      case 2: {
        if (tag == 16) {
         parse_split_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &split_size_)));
          set_has_split_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_split_name;
        break;
      }

      // optional string split_name = 3;
      case 3: {
        if (tag == 26) {
         parse_split_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_split_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->split_name().data(), this->split_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "split_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_query_result;
        break;
      }

      // repeated string query_result = 4;
      case 4: {
        if (tag == 34) {
         parse_query_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_query_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->query_result(this->query_result_size() - 1).data(),
            this->query_result(this->query_result_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "query_result");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_query_result;
        if (input->ExpectTag(40)) goto parse_id;
        break;
      }

      // required int64 id = 5;
      case 5: {
        if (tag == 40) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_uid;
        break;
      }

      // optional int64 uid = 6;
      case 6: {
        if (tag == 48) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.VerticaDLRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.VerticaDLRequest)
  return false;
#undef DO_
}

void VerticaDLRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.VerticaDLRequest)
  // required .presto.VerticaDLRequest.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int64 split_size = 2;
  if (has_split_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->split_size(), output);
  }

  // optional string split_name = 3;
  if (has_split_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->split_name().data(), this->split_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "split_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->split_name(), output);
  }

  // repeated string query_result = 4;
  for (int i = 0; i < this->query_result_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->query_result(i).data(), this->query_result(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "query_result");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->query_result(i), output);
  }

  // required int64 id = 5;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->id(), output);
  }

  // optional int64 uid = 6;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->uid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.VerticaDLRequest)
}

::google::protobuf::uint8* VerticaDLRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.VerticaDLRequest)
  // required .presto.VerticaDLRequest.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int64 split_size = 2;
  if (has_split_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->split_size(), target);
  }

  // optional string split_name = 3;
  if (has_split_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->split_name().data(), this->split_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "split_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->split_name(), target);
  }

  // repeated string query_result = 4;
  for (int i = 0; i < this->query_result_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query_result(i).data(), this->query_result(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "query_result");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->query_result(i), target);
  }

  // required int64 id = 5;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->id(), target);
  }

  // optional int64 uid = 6;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->uid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.VerticaDLRequest)
  return target;
}

int VerticaDLRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .presto.VerticaDLRequest.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int64 split_size = 2;
    if (has_split_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->split_size());
    }

    // optional string split_name = 3;
    if (has_split_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->split_name());
    }

    // required int64 id = 5;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional int64 uid = 6;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }

  }
  // repeated string query_result = 4;
  total_size += 1 * this->query_result_size();
  for (int i = 0; i < this->query_result_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->query_result(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerticaDLRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VerticaDLRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VerticaDLRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VerticaDLRequest::MergeFrom(const VerticaDLRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  query_result_.MergeFrom(from.query_result_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_split_size()) {
      set_split_size(from.split_size());
    }
    if (from.has_split_name()) {
      set_split_name(from.split_name());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VerticaDLRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerticaDLRequest::CopyFrom(const VerticaDLRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerticaDLRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000011) != 0x00000011) return false;

  return true;
}

void VerticaDLRequest::Swap(VerticaDLRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(split_size_, other->split_size_);
    std::swap(split_name_, other->split_name_);
    query_result_.Swap(&other->query_result_);
    std::swap(id_, other->id_);
    std::swap(uid_, other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VerticaDLRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VerticaDLRequest_descriptor_;
  metadata.reflection = VerticaDLRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace presto

// @@protoc_insertion_point(global_scope)
