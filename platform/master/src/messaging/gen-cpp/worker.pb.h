// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: worker.proto

#ifndef PROTOBUF_worker_2eproto__INCLUDED
#define PROTOBUF_worker_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "shared.pb.h"
// @@protoc_insertion_point(includes)

namespace presto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_worker_2eproto();
void protobuf_AssignDesc_worker_2eproto();
void protobuf_ShutdownFile_worker_2eproto();

class HelloRequest;
class CreateRequest;
class ClearRequest;
class TransferRequest;
class CreateCompositeRequest;
class WorkerRequest;
class FetchRequest;
class NewExecuteRRequest;
class IORequest;
class LogRequest;
class VerticaDLRequest;

enum WorkerRequest_Type {
  WorkerRequest_Type_HELLO = 1,
  WorkerRequest_Type_CREATE = 2,
  WorkerRequest_Type_CLEAR = 3,
  WorkerRequest_Type_CREATECOMPOSITE = 4,
  WorkerRequest_Type_TRANSFER = 5,
  WorkerRequest_Type_SHUTDOWN = 7,
  WorkerRequest_Type_FETCH = 9,
  WorkerRequest_Type_NEWEXECR = 10,
  WorkerRequest_Type_NEWTRANSFER = 11,
  WorkerRequest_Type_IO = 12,
  WorkerRequest_Type_LOG = 13,
  WorkerRequest_Type_VERTICALOAD = 14
};
bool WorkerRequest_Type_IsValid(int value);
const WorkerRequest_Type WorkerRequest_Type_Type_MIN = WorkerRequest_Type_HELLO;
const WorkerRequest_Type WorkerRequest_Type_Type_MAX = WorkerRequest_Type_VERTICALOAD;
const int WorkerRequest_Type_Type_ARRAYSIZE = WorkerRequest_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorkerRequest_Type_descriptor();
inline const ::std::string& WorkerRequest_Type_Name(WorkerRequest_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorkerRequest_Type_descriptor(), value);
}
inline bool WorkerRequest_Type_Parse(
    const ::std::string& name, WorkerRequest_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorkerRequest_Type>(
    WorkerRequest_Type_descriptor(), name, value);
}
enum IORequest_Type {
  IORequest_Type_LOAD = 1,
  IORequest_Type_SAVE = 2
};
bool IORequest_Type_IsValid(int value);
const IORequest_Type IORequest_Type_Type_MIN = IORequest_Type_LOAD;
const IORequest_Type IORequest_Type_Type_MAX = IORequest_Type_SAVE;
const int IORequest_Type_Type_ARRAYSIZE = IORequest_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* IORequest_Type_descriptor();
inline const ::std::string& IORequest_Type_Name(IORequest_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    IORequest_Type_descriptor(), value);
}
inline bool IORequest_Type_Parse(
    const ::std::string& name, IORequest_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IORequest_Type>(
    IORequest_Type_descriptor(), name, value);
}
enum VerticaDLRequest_Type {
  VerticaDLRequest_Type_START = 1,
  VerticaDLRequest_Type_FETCH = 2,
  VerticaDLRequest_Type_STOP = 3
};
bool VerticaDLRequest_Type_IsValid(int value);
const VerticaDLRequest_Type VerticaDLRequest_Type_Type_MIN = VerticaDLRequest_Type_START;
const VerticaDLRequest_Type VerticaDLRequest_Type_Type_MAX = VerticaDLRequest_Type_STOP;
const int VerticaDLRequest_Type_Type_ARRAYSIZE = VerticaDLRequest_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* VerticaDLRequest_Type_descriptor();
inline const ::std::string& VerticaDLRequest_Type_Name(VerticaDLRequest_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    VerticaDLRequest_Type_descriptor(), value);
}
inline bool VerticaDLRequest_Type_Parse(
    const ::std::string& name, VerticaDLRequest_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VerticaDLRequest_Type>(
    VerticaDLRequest_Type_descriptor(), name, value);
}
// ===================================================================

class HelloRequest : public ::google::protobuf::Message {
 public:
  HelloRequest();
  virtual ~HelloRequest();

  HelloRequest(const HelloRequest& from);

  inline HelloRequest& operator=(const HelloRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloRequest& default_instance();

  void Swap(HelloRequest* other);

  // implements Message ----------------------------------------------

  HelloRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloRequest& from);
  void MergeFrom(const HelloRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .presto.ServerInfo master_location = 1;
  inline bool has_master_location() const;
  inline void clear_master_location();
  static const int kMasterLocationFieldNumber = 1;
  inline const ::presto::ServerInfo& master_location() const;
  inline ::presto::ServerInfo* mutable_master_location();
  inline ::presto::ServerInfo* release_master_location();
  inline void set_allocated_master_location(::presto::ServerInfo* master_location);

  // required .presto.ServerInfo worker_location = 2;
  inline bool has_worker_location() const;
  inline void clear_worker_location();
  static const int kWorkerLocationFieldNumber = 2;
  inline const ::presto::ServerInfo& worker_location() const;
  inline ::presto::ServerInfo* mutable_worker_location();
  inline ::presto::ServerInfo* release_worker_location();
  inline void set_allocated_worker_location(::presto::ServerInfo* worker_location);

  // optional int64 abs_time = 3;
  inline bool has_abs_time() const;
  inline void clear_abs_time();
  static const int kAbsTimeFieldNumber = 3;
  inline ::google::protobuf::int64 abs_time() const;
  inline void set_abs_time(::google::protobuf::int64 value);

  // optional int32 reply_attr_flag = 4 [default = 0];
  inline bool has_reply_attr_flag() const;
  inline void clear_reply_attr_flag();
  static const int kReplyAttrFlagFieldNumber = 4;
  inline ::google::protobuf::int32 reply_attr_flag() const;
  inline void set_reply_attr_flag(::google::protobuf::int32 value);

  // optional bool is_heartbeat = 5 [default = false];
  inline bool has_is_heartbeat() const;
  inline void clear_is_heartbeat();
  static const int kIsHeartbeatFieldNumber = 5;
  inline bool is_heartbeat() const;
  inline void set_is_heartbeat(bool value);

  // @@protoc_insertion_point(class_scope:presto.HelloRequest)
 private:
  inline void set_has_master_location();
  inline void clear_has_master_location();
  inline void set_has_worker_location();
  inline void clear_has_worker_location();
  inline void set_has_abs_time();
  inline void clear_has_abs_time();
  inline void set_has_reply_attr_flag();
  inline void clear_has_reply_attr_flag();
  inline void set_has_is_heartbeat();
  inline void clear_has_is_heartbeat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::presto::ServerInfo* master_location_;
  ::presto::ServerInfo* worker_location_;
  ::google::protobuf::int64 abs_time_;
  ::google::protobuf::int32 reply_attr_flag_;
  bool is_heartbeat_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static HelloRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateRequest : public ::google::protobuf::Message {
 public:
  CreateRequest();
  virtual ~CreateRequest();

  CreateRequest(const CreateRequest& from);

  inline CreateRequest& operator=(const CreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRequest& default_instance();

  void Swap(CreateRequest* other);

  // implements Message ----------------------------------------------

  CreateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRequest& from);
  void MergeFrom(const CreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .presto.Array arr = 1;
  inline bool has_arr() const;
  inline void clear_arr();
  static const int kArrFieldNumber = 1;
  inline const ::presto::Array& arr() const;
  inline ::presto::Array* mutable_arr();
  inline ::presto::Array* release_arr();
  inline void set_allocated_arr(::presto::Array* arr);

  // optional double initial_data = 2 [default = 0];
  inline bool has_initial_data() const;
  inline void clear_initial_data();
  static const int kInitialDataFieldNumber = 2;
  inline double initial_data() const;
  inline void set_initial_data(double value);

  // @@protoc_insertion_point(class_scope:presto.CreateRequest)
 private:
  inline void set_has_arr();
  inline void clear_has_arr();
  inline void set_has_initial_data();
  inline void clear_has_initial_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::presto::Array* arr_;
  double initial_data_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static CreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class ClearRequest : public ::google::protobuf::Message {
 public:
  ClearRequest();
  virtual ~ClearRequest();

  ClearRequest(const ClearRequest& from);

  inline ClearRequest& operator=(const ClearRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearRequest& default_instance();

  void Swap(ClearRequest* other);

  // implements Message ----------------------------------------------

  ClearRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClearRequest& from);
  void MergeFrom(const ClearRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string store = 2;
  inline bool has_store() const;
  inline void clear_store();
  static const int kStoreFieldNumber = 2;
  inline const ::std::string& store() const;
  inline void set_store(const ::std::string& value);
  inline void set_store(const char* value);
  inline void set_store(const char* value, size_t size);
  inline ::std::string* mutable_store();
  inline ::std::string* release_store();
  inline void set_allocated_store(::std::string* store);

  // optional int64 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required int64 uid = 4;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 4;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:presto.ClearRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_store();
  inline void clear_has_store();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* store_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 uid_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static ClearRequest* default_instance_;
};
// -------------------------------------------------------------------

class TransferRequest : public ::google::protobuf::Message {
 public:
  TransferRequest();
  virtual ~TransferRequest();

  TransferRequest(const TransferRequest& from);

  inline TransferRequest& operator=(const TransferRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferRequest& default_instance();

  void Swap(TransferRequest* other);

  // implements Message ----------------------------------------------

  TransferRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransferRequest& from);
  void MergeFrom(const TransferRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .presto.Array arr = 1;
  inline bool has_arr() const;
  inline void clear_arr();
  static const int kArrFieldNumber = 1;
  inline const ::presto::Array& arr() const;
  inline ::presto::Array* mutable_arr();
  inline ::presto::Array* release_arr();
  inline void set_allocated_arr(::presto::Array* arr);

  // required string hostname = 2;
  inline bool has_hostname() const;
  inline void clear_hostname();
  static const int kHostnameFieldNumber = 2;
  inline const ::std::string& hostname() const;
  inline void set_hostname(const ::std::string& value);
  inline void set_hostname(const char* value);
  inline void set_hostname(const char* value, size_t size);
  inline ::std::string* mutable_hostname();
  inline ::std::string* release_hostname();
  inline void set_allocated_hostname(::std::string* hostname);

  // required int32 port = 3;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 3;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:presto.TransferRequest)
 private:
  inline void set_has_arr();
  inline void clear_has_arr();
  inline void set_has_hostname();
  inline void clear_has_hostname();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::presto::Array* arr_;
  ::std::string* hostname_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static TransferRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateCompositeRequest : public ::google::protobuf::Message {
 public:
  CreateCompositeRequest();
  virtual ~CreateCompositeRequest();

  CreateCompositeRequest(const CreateCompositeRequest& from);

  inline CreateCompositeRequest& operator=(const CreateCompositeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateCompositeRequest& default_instance();

  void Swap(CreateCompositeRequest* other);

  // implements Message ----------------------------------------------

  CreateCompositeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateCompositeRequest& from);
  void MergeFrom(const CreateCompositeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string arraynames = 1;
  inline int arraynames_size() const;
  inline void clear_arraynames();
  static const int kArraynamesFieldNumber = 1;
  inline const ::std::string& arraynames(int index) const;
  inline ::std::string* mutable_arraynames(int index);
  inline void set_arraynames(int index, const ::std::string& value);
  inline void set_arraynames(int index, const char* value);
  inline void set_arraynames(int index, const char* value, size_t size);
  inline ::std::string* add_arraynames();
  inline void add_arraynames(const ::std::string& value);
  inline void add_arraynames(const char* value);
  inline void add_arraynames(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& arraynames() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_arraynames();

  // repeated .presto.Tuple offsets = 2;
  inline int offsets_size() const;
  inline void clear_offsets();
  static const int kOffsetsFieldNumber = 2;
  inline const ::presto::Tuple& offsets(int index) const;
  inline ::presto::Tuple* mutable_offsets(int index);
  inline ::presto::Tuple* add_offsets();
  inline const ::google::protobuf::RepeatedPtrField< ::presto::Tuple >&
      offsets() const;
  inline ::google::protobuf::RepeatedPtrField< ::presto::Tuple >*
      mutable_offsets();

  // required .presto.Tuple dims = 3;
  inline bool has_dims() const;
  inline void clear_dims();
  static const int kDimsFieldNumber = 3;
  inline const ::presto::Tuple& dims() const;
  inline ::presto::Tuple* mutable_dims();
  inline ::presto::Tuple* release_dims();
  inline void set_allocated_dims(::presto::Tuple* dims);

  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int64 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required int64 uid = 6;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 6;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:presto.CreateCompositeRequest)
 private:
  inline void set_has_dims();
  inline void clear_has_dims();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> arraynames_;
  ::google::protobuf::RepeatedPtrField< ::presto::Tuple > offsets_;
  ::presto::Tuple* dims_;
  ::std::string* name_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 uid_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static CreateCompositeRequest* default_instance_;
};
// -------------------------------------------------------------------

class WorkerRequest : public ::google::protobuf::Message {
 public:
  WorkerRequest();
  virtual ~WorkerRequest();

  WorkerRequest(const WorkerRequest& from);

  inline WorkerRequest& operator=(const WorkerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkerRequest& default_instance();

  void Swap(WorkerRequest* other);

  // implements Message ----------------------------------------------

  WorkerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkerRequest& from);
  void MergeFrom(const WorkerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WorkerRequest_Type Type;
  static const Type HELLO = WorkerRequest_Type_HELLO;
  static const Type CREATE = WorkerRequest_Type_CREATE;
  static const Type CLEAR = WorkerRequest_Type_CLEAR;
  static const Type CREATECOMPOSITE = WorkerRequest_Type_CREATECOMPOSITE;
  static const Type TRANSFER = WorkerRequest_Type_TRANSFER;
  static const Type SHUTDOWN = WorkerRequest_Type_SHUTDOWN;
  static const Type FETCH = WorkerRequest_Type_FETCH;
  static const Type NEWEXECR = WorkerRequest_Type_NEWEXECR;
  static const Type NEWTRANSFER = WorkerRequest_Type_NEWTRANSFER;
  static const Type IO = WorkerRequest_Type_IO;
  static const Type LOG = WorkerRequest_Type_LOG;
  static const Type VERTICALOAD = WorkerRequest_Type_VERTICALOAD;
  static inline bool Type_IsValid(int value) {
    return WorkerRequest_Type_IsValid(value);
  }
  static const Type Type_MIN =
    WorkerRequest_Type_Type_MIN;
  static const Type Type_MAX =
    WorkerRequest_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    WorkerRequest_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return WorkerRequest_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return WorkerRequest_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return WorkerRequest_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .presto.WorkerRequest.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::presto::WorkerRequest_Type type() const;
  inline void set_type(::presto::WorkerRequest_Type value);

  // optional .presto.HelloRequest hello = 2;
  inline bool has_hello() const;
  inline void clear_hello();
  static const int kHelloFieldNumber = 2;
  inline const ::presto::HelloRequest& hello() const;
  inline ::presto::HelloRequest* mutable_hello();
  inline ::presto::HelloRequest* release_hello();
  inline void set_allocated_hello(::presto::HelloRequest* hello);

  // optional .presto.CreateRequest create = 3;
  inline bool has_create() const;
  inline void clear_create();
  static const int kCreateFieldNumber = 3;
  inline const ::presto::CreateRequest& create() const;
  inline ::presto::CreateRequest* mutable_create();
  inline ::presto::CreateRequest* release_create();
  inline void set_allocated_create(::presto::CreateRequest* create);

  // optional .presto.ClearRequest clear = 4;
  inline bool has_clear() const;
  inline void clear_clear();
  static const int kClearFieldNumber = 4;
  inline const ::presto::ClearRequest& clear() const;
  inline ::presto::ClearRequest* mutable_clear();
  inline ::presto::ClearRequest* release_clear();
  inline void set_allocated_clear(::presto::ClearRequest* clear);

  // optional .presto.CreateCompositeRequest createcomposite = 5;
  inline bool has_createcomposite() const;
  inline void clear_createcomposite();
  static const int kCreatecompositeFieldNumber = 5;
  inline const ::presto::CreateCompositeRequest& createcomposite() const;
  inline ::presto::CreateCompositeRequest* mutable_createcomposite();
  inline ::presto::CreateCompositeRequest* release_createcomposite();
  inline void set_allocated_createcomposite(::presto::CreateCompositeRequest* createcomposite);

  // optional .presto.TransferRequest transfer = 6;
  inline bool has_transfer() const;
  inline void clear_transfer();
  static const int kTransferFieldNumber = 6;
  inline const ::presto::TransferRequest& transfer() const;
  inline ::presto::TransferRequest* mutable_transfer();
  inline ::presto::TransferRequest* release_transfer();
  inline void set_allocated_transfer(::presto::TransferRequest* transfer);

  // optional .presto.FetchRequest fetch = 7;
  inline bool has_fetch() const;
  inline void clear_fetch();
  static const int kFetchFieldNumber = 7;
  inline const ::presto::FetchRequest& fetch() const;
  inline ::presto::FetchRequest* mutable_fetch();
  inline ::presto::FetchRequest* release_fetch();
  inline void set_allocated_fetch(::presto::FetchRequest* fetch);

  // optional .presto.NewExecuteRRequest newexecr = 8;
  inline bool has_newexecr() const;
  inline void clear_newexecr();
  static const int kNewexecrFieldNumber = 8;
  inline const ::presto::NewExecuteRRequest& newexecr() const;
  inline ::presto::NewExecuteRRequest* mutable_newexecr();
  inline ::presto::NewExecuteRRequest* release_newexecr();
  inline void set_allocated_newexecr(::presto::NewExecuteRRequest* newexecr);

  // optional .presto.IORequest io = 9;
  inline bool has_io() const;
  inline void clear_io();
  static const int kIoFieldNumber = 9;
  inline const ::presto::IORequest& io() const;
  inline ::presto::IORequest* mutable_io();
  inline ::presto::IORequest* release_io();
  inline void set_allocated_io(::presto::IORequest* io);

  // optional .presto.LogRequest log = 10;
  inline bool has_log() const;
  inline void clear_log();
  static const int kLogFieldNumber = 10;
  inline const ::presto::LogRequest& log() const;
  inline ::presto::LogRequest* mutable_log();
  inline ::presto::LogRequest* release_log();
  inline void set_allocated_log(::presto::LogRequest* log);

  // optional .presto.VerticaDLRequest verticaload = 11;
  inline bool has_verticaload() const;
  inline void clear_verticaload();
  static const int kVerticaloadFieldNumber = 11;
  inline const ::presto::VerticaDLRequest& verticaload() const;
  inline ::presto::VerticaDLRequest* mutable_verticaload();
  inline ::presto::VerticaDLRequest* release_verticaload();
  inline void set_allocated_verticaload(::presto::VerticaDLRequest* verticaload);

  // optional int64 trace_id = 12;
  inline bool has_trace_id() const;
  inline void clear_trace_id();
  static const int kTraceIdFieldNumber = 12;
  inline ::google::protobuf::int64 trace_id() const;
  inline void set_trace_id(::google::protobuf::int64 value);

  // optional int64 span_id = 13;
  inline bool has_span_id() const;
  inline void clear_span_id();
  static const int kSpanIdFieldNumber = 13;
  inline ::google::protobuf::int64 span_id() const;
  inline void set_span_id(::google::protobuf::int64 value);

  // optional int64 parent_span_id = 14;
  inline bool has_parent_span_id() const;
  inline void clear_parent_span_id();
  static const int kParentSpanIdFieldNumber = 14;
  inline ::google::protobuf::int64 parent_span_id() const;
  inline void set_parent_span_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:presto.WorkerRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_hello();
  inline void clear_has_hello();
  inline void set_has_create();
  inline void clear_has_create();
  inline void set_has_clear();
  inline void clear_has_clear();
  inline void set_has_createcomposite();
  inline void clear_has_createcomposite();
  inline void set_has_transfer();
  inline void clear_has_transfer();
  inline void set_has_fetch();
  inline void clear_has_fetch();
  inline void set_has_newexecr();
  inline void clear_has_newexecr();
  inline void set_has_io();
  inline void clear_has_io();
  inline void set_has_log();
  inline void clear_has_log();
  inline void set_has_verticaload();
  inline void clear_has_verticaload();
  inline void set_has_trace_id();
  inline void clear_has_trace_id();
  inline void set_has_span_id();
  inline void clear_has_span_id();
  inline void set_has_parent_span_id();
  inline void clear_has_parent_span_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::presto::HelloRequest* hello_;
  ::presto::CreateRequest* create_;
  ::presto::ClearRequest* clear_;
  ::presto::CreateCompositeRequest* createcomposite_;
  ::presto::TransferRequest* transfer_;
  ::presto::FetchRequest* fetch_;
  ::presto::NewExecuteRRequest* newexecr_;
  ::presto::IORequest* io_;
  ::presto::LogRequest* log_;
  ::presto::VerticaDLRequest* verticaload_;
  ::google::protobuf::int64 trace_id_;
  ::google::protobuf::int64 span_id_;
  ::google::protobuf::int64 parent_span_id_;
  int type_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static WorkerRequest* default_instance_;
};
// -------------------------------------------------------------------

class FetchRequest : public ::google::protobuf::Message {
 public:
  FetchRequest();
  virtual ~FetchRequest();

  FetchRequest(const FetchRequest& from);

  inline FetchRequest& operator=(const FetchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchRequest& default_instance();

  void Swap(FetchRequest* other);

  // implements Message ----------------------------------------------

  FetchRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FetchRequest& from);
  void MergeFrom(const FetchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .presto.ServerInfo location = 2;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 2;
  inline const ::presto::ServerInfo& location() const;
  inline ::presto::ServerInfo* mutable_location();
  inline ::presto::ServerInfo* release_location();
  inline void set_allocated_location(::presto::ServerInfo* location);

  // required int64 size = 3;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 3;
  inline ::google::protobuf::int64 size() const;
  inline void set_size(::google::protobuf::int64 value);

  // optional string store = 4;
  inline bool has_store() const;
  inline void clear_store();
  static const int kStoreFieldNumber = 4;
  inline const ::std::string& store() const;
  inline void set_store(const ::std::string& value);
  inline void set_store(const char* value);
  inline void set_store(const char* value, size_t size);
  inline ::std::string* mutable_store();
  inline ::std::string* release_store();
  inline void set_allocated_store(::std::string* store);

  // optional int64 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 uid = 6;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 6;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:presto.FetchRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_store();
  inline void clear_has_store();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::presto::ServerInfo* location_;
  ::google::protobuf::int64 size_;
  ::std::string* store_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 uid_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static FetchRequest* default_instance_;
};
// -------------------------------------------------------------------

class NewExecuteRRequest : public ::google::protobuf::Message {
 public:
  NewExecuteRRequest();
  virtual ~NewExecuteRRequest();

  NewExecuteRRequest(const NewExecuteRRequest& from);

  inline NewExecuteRRequest& operator=(const NewExecuteRRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewExecuteRRequest& default_instance();

  void Swap(NewExecuteRRequest* other);

  // implements Message ----------------------------------------------

  NewExecuteRRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewExecuteRRequest& from);
  void MergeFrom(const NewExecuteRRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string func = 1;
  inline int func_size() const;
  inline void clear_func();
  static const int kFuncFieldNumber = 1;
  inline const ::std::string& func(int index) const;
  inline ::std::string* mutable_func(int index);
  inline void set_func(int index, const ::std::string& value);
  inline void set_func(int index, const char* value);
  inline void set_func(int index, const char* value, size_t size);
  inline ::std::string* add_func();
  inline void add_func(const ::std::string& value);
  inline void add_func(const char* value);
  inline void add_func(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& func() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_func();

  // repeated .presto.NewArg args = 2;
  inline int args_size() const;
  inline void clear_args();
  static const int kArgsFieldNumber = 2;
  inline const ::presto::NewArg& args(int index) const;
  inline ::presto::NewArg* mutable_args(int index);
  inline ::presto::NewArg* add_args();
  inline const ::google::protobuf::RepeatedPtrField< ::presto::NewArg >&
      args() const;
  inline ::google::protobuf::RepeatedPtrField< ::presto::NewArg >*
      mutable_args();

  // repeated .presto.RawArg raw_args = 3;
  inline int raw_args_size() const;
  inline void clear_raw_args();
  static const int kRawArgsFieldNumber = 3;
  inline const ::presto::RawArg& raw_args(int index) const;
  inline ::presto::RawArg* mutable_raw_args(int index);
  inline ::presto::RawArg* add_raw_args();
  inline const ::google::protobuf::RepeatedPtrField< ::presto::RawArg >&
      raw_args() const;
  inline ::google::protobuf::RepeatedPtrField< ::presto::RawArg >*
      mutable_raw_args();

  // repeated .presto.NewArg composite_args = 4;
  inline int composite_args_size() const;
  inline void clear_composite_args();
  static const int kCompositeArgsFieldNumber = 4;
  inline const ::presto::NewArg& composite_args(int index) const;
  inline ::presto::NewArg* mutable_composite_args(int index);
  inline ::presto::NewArg* add_composite_args();
  inline const ::google::protobuf::RepeatedPtrField< ::presto::NewArg >&
      composite_args() const;
  inline ::google::protobuf::RepeatedPtrField< ::presto::NewArg >*
      mutable_composite_args();

  // optional int64 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required int64 uid = 6;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 6;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:presto.NewExecuteRRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> func_;
  ::google::protobuf::RepeatedPtrField< ::presto::NewArg > args_;
  ::google::protobuf::RepeatedPtrField< ::presto::RawArg > raw_args_;
  ::google::protobuf::RepeatedPtrField< ::presto::NewArg > composite_args_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 uid_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static NewExecuteRRequest* default_instance_;
};
// -------------------------------------------------------------------

class IORequest : public ::google::protobuf::Message {
 public:
  IORequest();
  virtual ~IORequest();

  IORequest(const IORequest& from);

  inline IORequest& operator=(const IORequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IORequest& default_instance();

  void Swap(IORequest* other);

  // implements Message ----------------------------------------------

  IORequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IORequest& from);
  void MergeFrom(const IORequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IORequest_Type Type;
  static const Type LOAD = IORequest_Type_LOAD;
  static const Type SAVE = IORequest_Type_SAVE;
  static inline bool Type_IsValid(int value) {
    return IORequest_Type_IsValid(value);
  }
  static const Type Type_MIN =
    IORequest_Type_Type_MIN;
  static const Type Type_MAX =
    IORequest_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    IORequest_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return IORequest_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return IORequest_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return IORequest_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string array_name = 1;
  inline bool has_array_name() const;
  inline void clear_array_name();
  static const int kArrayNameFieldNumber = 1;
  inline const ::std::string& array_name() const;
  inline void set_array_name(const ::std::string& value);
  inline void set_array_name(const char* value);
  inline void set_array_name(const char* value, size_t size);
  inline ::std::string* mutable_array_name();
  inline ::std::string* release_array_name();
  inline void set_allocated_array_name(::std::string* array_name);

  // required string store_name = 2;
  inline bool has_store_name() const;
  inline void clear_store_name();
  static const int kStoreNameFieldNumber = 2;
  inline const ::std::string& store_name() const;
  inline void set_store_name(const ::std::string& value);
  inline void set_store_name(const char* value);
  inline void set_store_name(const char* value, size_t size);
  inline ::std::string* mutable_store_name();
  inline ::std::string* release_store_name();
  inline void set_allocated_store_name(::std::string* store_name);

  // required .presto.IORequest.Type type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::presto::IORequest_Type type() const;
  inline void set_type(::presto::IORequest_Type value);

  // optional int64 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required int64 uid = 5;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 5;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:presto.IORequest)
 private:
  inline void set_has_array_name();
  inline void clear_has_array_name();
  inline void set_has_store_name();
  inline void clear_has_store_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* array_name_;
  ::std::string* store_name_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 uid_;
  int type_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static IORequest* default_instance_;
};
// -------------------------------------------------------------------

class LogRequest : public ::google::protobuf::Message {
 public:
  LogRequest();
  virtual ~LogRequest();

  LogRequest(const LogRequest& from);

  inline LogRequest& operator=(const LogRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogRequest& default_instance();

  void Swap(LogRequest* other);

  // implements Message ----------------------------------------------

  LogRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogRequest& from);
  void MergeFrom(const LogRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:presto.LogRequest)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* msg_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static LogRequest* default_instance_;
};
// -------------------------------------------------------------------

class VerticaDLRequest : public ::google::protobuf::Message {
 public:
  VerticaDLRequest();
  virtual ~VerticaDLRequest();

  VerticaDLRequest(const VerticaDLRequest& from);

  inline VerticaDLRequest& operator=(const VerticaDLRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerticaDLRequest& default_instance();

  void Swap(VerticaDLRequest* other);

  // implements Message ----------------------------------------------

  VerticaDLRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VerticaDLRequest& from);
  void MergeFrom(const VerticaDLRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef VerticaDLRequest_Type Type;
  static const Type START = VerticaDLRequest_Type_START;
  static const Type FETCH = VerticaDLRequest_Type_FETCH;
  static const Type STOP = VerticaDLRequest_Type_STOP;
  static inline bool Type_IsValid(int value) {
    return VerticaDLRequest_Type_IsValid(value);
  }
  static const Type Type_MIN =
    VerticaDLRequest_Type_Type_MIN;
  static const Type Type_MAX =
    VerticaDLRequest_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    VerticaDLRequest_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return VerticaDLRequest_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return VerticaDLRequest_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return VerticaDLRequest_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .presto.VerticaDLRequest.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::presto::VerticaDLRequest_Type type() const;
  inline void set_type(::presto::VerticaDLRequest_Type value);

  // optional int64 split_size = 2;
  inline bool has_split_size() const;
  inline void clear_split_size();
  static const int kSplitSizeFieldNumber = 2;
  inline ::google::protobuf::int64 split_size() const;
  inline void set_split_size(::google::protobuf::int64 value);

  // optional string split_name = 3;
  inline bool has_split_name() const;
  inline void clear_split_name();
  static const int kSplitNameFieldNumber = 3;
  inline const ::std::string& split_name() const;
  inline void set_split_name(const ::std::string& value);
  inline void set_split_name(const char* value);
  inline void set_split_name(const char* value, size_t size);
  inline ::std::string* mutable_split_name();
  inline ::std::string* release_split_name();
  inline void set_allocated_split_name(::std::string* split_name);

  // repeated string query_result = 4;
  inline int query_result_size() const;
  inline void clear_query_result();
  static const int kQueryResultFieldNumber = 4;
  inline const ::std::string& query_result(int index) const;
  inline ::std::string* mutable_query_result(int index);
  inline void set_query_result(int index, const ::std::string& value);
  inline void set_query_result(int index, const char* value);
  inline void set_query_result(int index, const char* value, size_t size);
  inline ::std::string* add_query_result();
  inline void add_query_result(const ::std::string& value);
  inline void add_query_result(const char* value);
  inline void add_query_result(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& query_result() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_query_result();

  // required int64 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 uid = 6;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 6;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:presto.VerticaDLRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_split_size();
  inline void clear_has_split_size();
  inline void set_has_split_name();
  inline void clear_has_split_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 split_size_;
  ::std::string* split_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> query_result_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 uid_;
  int type_;
  friend void  protobuf_AddDesc_worker_2eproto();
  friend void protobuf_AssignDesc_worker_2eproto();
  friend void protobuf_ShutdownFile_worker_2eproto();

  void InitAsDefaultInstance();
  static VerticaDLRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// HelloRequest

// optional .presto.ServerInfo master_location = 1;
inline bool HelloRequest::has_master_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HelloRequest::set_has_master_location() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HelloRequest::clear_has_master_location() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HelloRequest::clear_master_location() {
  if (master_location_ != NULL) master_location_->::presto::ServerInfo::Clear();
  clear_has_master_location();
}
inline const ::presto::ServerInfo& HelloRequest::master_location() const {
  // @@protoc_insertion_point(field_get:presto.HelloRequest.master_location)
  return master_location_ != NULL ? *master_location_ : *default_instance_->master_location_;
}
inline ::presto::ServerInfo* HelloRequest::mutable_master_location() {
  set_has_master_location();
  if (master_location_ == NULL) master_location_ = new ::presto::ServerInfo;
  // @@protoc_insertion_point(field_mutable:presto.HelloRequest.master_location)
  return master_location_;
}
inline ::presto::ServerInfo* HelloRequest::release_master_location() {
  clear_has_master_location();
  ::presto::ServerInfo* temp = master_location_;
  master_location_ = NULL;
  return temp;
}
inline void HelloRequest::set_allocated_master_location(::presto::ServerInfo* master_location) {
  delete master_location_;
  master_location_ = master_location;
  if (master_location) {
    set_has_master_location();
  } else {
    clear_has_master_location();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.HelloRequest.master_location)
}

// required .presto.ServerInfo worker_location = 2;
inline bool HelloRequest::has_worker_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HelloRequest::set_has_worker_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HelloRequest::clear_has_worker_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HelloRequest::clear_worker_location() {
  if (worker_location_ != NULL) worker_location_->::presto::ServerInfo::Clear();
  clear_has_worker_location();
}
inline const ::presto::ServerInfo& HelloRequest::worker_location() const {
  // @@protoc_insertion_point(field_get:presto.HelloRequest.worker_location)
  return worker_location_ != NULL ? *worker_location_ : *default_instance_->worker_location_;
}
inline ::presto::ServerInfo* HelloRequest::mutable_worker_location() {
  set_has_worker_location();
  if (worker_location_ == NULL) worker_location_ = new ::presto::ServerInfo;
  // @@protoc_insertion_point(field_mutable:presto.HelloRequest.worker_location)
  return worker_location_;
}
inline ::presto::ServerInfo* HelloRequest::release_worker_location() {
  clear_has_worker_location();
  ::presto::ServerInfo* temp = worker_location_;
  worker_location_ = NULL;
  return temp;
}
inline void HelloRequest::set_allocated_worker_location(::presto::ServerInfo* worker_location) {
  delete worker_location_;
  worker_location_ = worker_location;
  if (worker_location) {
    set_has_worker_location();
  } else {
    clear_has_worker_location();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.HelloRequest.worker_location)
}

// optional int64 abs_time = 3;
inline bool HelloRequest::has_abs_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HelloRequest::set_has_abs_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HelloRequest::clear_has_abs_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HelloRequest::clear_abs_time() {
  abs_time_ = GOOGLE_LONGLONG(0);
  clear_has_abs_time();
}
inline ::google::protobuf::int64 HelloRequest::abs_time() const {
  // @@protoc_insertion_point(field_get:presto.HelloRequest.abs_time)
  return abs_time_;
}
inline void HelloRequest::set_abs_time(::google::protobuf::int64 value) {
  set_has_abs_time();
  abs_time_ = value;
  // @@protoc_insertion_point(field_set:presto.HelloRequest.abs_time)
}

// optional int32 reply_attr_flag = 4 [default = 0];
inline bool HelloRequest::has_reply_attr_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HelloRequest::set_has_reply_attr_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HelloRequest::clear_has_reply_attr_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HelloRequest::clear_reply_attr_flag() {
  reply_attr_flag_ = 0;
  clear_has_reply_attr_flag();
}
inline ::google::protobuf::int32 HelloRequest::reply_attr_flag() const {
  // @@protoc_insertion_point(field_get:presto.HelloRequest.reply_attr_flag)
  return reply_attr_flag_;
}
inline void HelloRequest::set_reply_attr_flag(::google::protobuf::int32 value) {
  set_has_reply_attr_flag();
  reply_attr_flag_ = value;
  // @@protoc_insertion_point(field_set:presto.HelloRequest.reply_attr_flag)
}

// optional bool is_heartbeat = 5 [default = false];
inline bool HelloRequest::has_is_heartbeat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HelloRequest::set_has_is_heartbeat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HelloRequest::clear_has_is_heartbeat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HelloRequest::clear_is_heartbeat() {
  is_heartbeat_ = false;
  clear_has_is_heartbeat();
}
inline bool HelloRequest::is_heartbeat() const {
  // @@protoc_insertion_point(field_get:presto.HelloRequest.is_heartbeat)
  return is_heartbeat_;
}
inline void HelloRequest::set_is_heartbeat(bool value) {
  set_has_is_heartbeat();
  is_heartbeat_ = value;
  // @@protoc_insertion_point(field_set:presto.HelloRequest.is_heartbeat)
}

// -------------------------------------------------------------------

// CreateRequest

// required .presto.Array arr = 1;
inline bool CreateRequest::has_arr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRequest::set_has_arr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRequest::clear_has_arr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRequest::clear_arr() {
  if (arr_ != NULL) arr_->::presto::Array::Clear();
  clear_has_arr();
}
inline const ::presto::Array& CreateRequest::arr() const {
  // @@protoc_insertion_point(field_get:presto.CreateRequest.arr)
  return arr_ != NULL ? *arr_ : *default_instance_->arr_;
}
inline ::presto::Array* CreateRequest::mutable_arr() {
  set_has_arr();
  if (arr_ == NULL) arr_ = new ::presto::Array;
  // @@protoc_insertion_point(field_mutable:presto.CreateRequest.arr)
  return arr_;
}
inline ::presto::Array* CreateRequest::release_arr() {
  clear_has_arr();
  ::presto::Array* temp = arr_;
  arr_ = NULL;
  return temp;
}
inline void CreateRequest::set_allocated_arr(::presto::Array* arr) {
  delete arr_;
  arr_ = arr;
  if (arr) {
    set_has_arr();
  } else {
    clear_has_arr();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.CreateRequest.arr)
}

// optional double initial_data = 2 [default = 0];
inline bool CreateRequest::has_initial_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRequest::set_has_initial_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRequest::clear_has_initial_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRequest::clear_initial_data() {
  initial_data_ = 0;
  clear_has_initial_data();
}
inline double CreateRequest::initial_data() const {
  // @@protoc_insertion_point(field_get:presto.CreateRequest.initial_data)
  return initial_data_;
}
inline void CreateRequest::set_initial_data(double value) {
  set_has_initial_data();
  initial_data_ = value;
  // @@protoc_insertion_point(field_set:presto.CreateRequest.initial_data)
}

// -------------------------------------------------------------------

// ClearRequest

// required string name = 1;
inline bool ClearRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClearRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClearRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClearRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ClearRequest::name() const {
  // @@protoc_insertion_point(field_get:presto.ClearRequest.name)
  return *name_;
}
inline void ClearRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:presto.ClearRequest.name)
}
inline void ClearRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.ClearRequest.name)
}
inline void ClearRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.ClearRequest.name)
}
inline ::std::string* ClearRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.ClearRequest.name)
  return name_;
}
inline ::std::string* ClearRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClearRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.ClearRequest.name)
}

// optional string store = 2;
inline bool ClearRequest::has_store() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClearRequest::set_has_store() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClearRequest::clear_has_store() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClearRequest::clear_store() {
  if (store_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_->clear();
  }
  clear_has_store();
}
inline const ::std::string& ClearRequest::store() const {
  // @@protoc_insertion_point(field_get:presto.ClearRequest.store)
  return *store_;
}
inline void ClearRequest::set_store(const ::std::string& value) {
  set_has_store();
  if (store_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_ = new ::std::string;
  }
  store_->assign(value);
  // @@protoc_insertion_point(field_set:presto.ClearRequest.store)
}
inline void ClearRequest::set_store(const char* value) {
  set_has_store();
  if (store_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_ = new ::std::string;
  }
  store_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.ClearRequest.store)
}
inline void ClearRequest::set_store(const char* value, size_t size) {
  set_has_store();
  if (store_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_ = new ::std::string;
  }
  store_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.ClearRequest.store)
}
inline ::std::string* ClearRequest::mutable_store() {
  set_has_store();
  if (store_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.ClearRequest.store)
  return store_;
}
inline ::std::string* ClearRequest::release_store() {
  clear_has_store();
  if (store_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = store_;
    store_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClearRequest::set_allocated_store(::std::string* store) {
  if (store_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete store_;
  }
  if (store) {
    set_has_store();
    store_ = store;
  } else {
    clear_has_store();
    store_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.ClearRequest.store)
}

// optional int64 id = 3;
inline bool ClearRequest::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClearRequest::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClearRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClearRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 ClearRequest::id() const {
  // @@protoc_insertion_point(field_get:presto.ClearRequest.id)
  return id_;
}
inline void ClearRequest::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:presto.ClearRequest.id)
}

// required int64 uid = 4;
inline bool ClearRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClearRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClearRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClearRequest::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 ClearRequest::uid() const {
  // @@protoc_insertion_point(field_get:presto.ClearRequest.uid)
  return uid_;
}
inline void ClearRequest::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:presto.ClearRequest.uid)
}

// -------------------------------------------------------------------

// TransferRequest

// required .presto.Array arr = 1;
inline bool TransferRequest::has_arr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransferRequest::set_has_arr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransferRequest::clear_has_arr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransferRequest::clear_arr() {
  if (arr_ != NULL) arr_->::presto::Array::Clear();
  clear_has_arr();
}
inline const ::presto::Array& TransferRequest::arr() const {
  // @@protoc_insertion_point(field_get:presto.TransferRequest.arr)
  return arr_ != NULL ? *arr_ : *default_instance_->arr_;
}
inline ::presto::Array* TransferRequest::mutable_arr() {
  set_has_arr();
  if (arr_ == NULL) arr_ = new ::presto::Array;
  // @@protoc_insertion_point(field_mutable:presto.TransferRequest.arr)
  return arr_;
}
inline ::presto::Array* TransferRequest::release_arr() {
  clear_has_arr();
  ::presto::Array* temp = arr_;
  arr_ = NULL;
  return temp;
}
inline void TransferRequest::set_allocated_arr(::presto::Array* arr) {
  delete arr_;
  arr_ = arr;
  if (arr) {
    set_has_arr();
  } else {
    clear_has_arr();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.TransferRequest.arr)
}

// required string hostname = 2;
inline bool TransferRequest::has_hostname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransferRequest::set_has_hostname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransferRequest::clear_has_hostname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransferRequest::clear_hostname() {
  if (hostname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hostname_->clear();
  }
  clear_has_hostname();
}
inline const ::std::string& TransferRequest::hostname() const {
  // @@protoc_insertion_point(field_get:presto.TransferRequest.hostname)
  return *hostname_;
}
inline void TransferRequest::set_hostname(const ::std::string& value) {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(value);
  // @@protoc_insertion_point(field_set:presto.TransferRequest.hostname)
}
inline void TransferRequest::set_hostname(const char* value) {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.TransferRequest.hostname)
}
inline void TransferRequest::set_hostname(const char* value, size_t size) {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.TransferRequest.hostname)
}
inline ::std::string* TransferRequest::mutable_hostname() {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hostname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.TransferRequest.hostname)
  return hostname_;
}
inline ::std::string* TransferRequest::release_hostname() {
  clear_has_hostname();
  if (hostname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = hostname_;
    hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TransferRequest::set_allocated_hostname(::std::string* hostname) {
  if (hostname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete hostname_;
  }
  if (hostname) {
    set_has_hostname();
    hostname_ = hostname;
  } else {
    clear_has_hostname();
    hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.TransferRequest.hostname)
}

// required int32 port = 3;
inline bool TransferRequest::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransferRequest::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransferRequest::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransferRequest::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 TransferRequest::port() const {
  // @@protoc_insertion_point(field_get:presto.TransferRequest.port)
  return port_;
}
inline void TransferRequest::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:presto.TransferRequest.port)
}

// -------------------------------------------------------------------

// CreateCompositeRequest

// repeated string arraynames = 1;
inline int CreateCompositeRequest::arraynames_size() const {
  return arraynames_.size();
}
inline void CreateCompositeRequest::clear_arraynames() {
  arraynames_.Clear();
}
inline const ::std::string& CreateCompositeRequest::arraynames(int index) const {
  // @@protoc_insertion_point(field_get:presto.CreateCompositeRequest.arraynames)
  return arraynames_.Get(index);
}
inline ::std::string* CreateCompositeRequest::mutable_arraynames(int index) {
  // @@protoc_insertion_point(field_mutable:presto.CreateCompositeRequest.arraynames)
  return arraynames_.Mutable(index);
}
inline void CreateCompositeRequest::set_arraynames(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:presto.CreateCompositeRequest.arraynames)
  arraynames_.Mutable(index)->assign(value);
}
inline void CreateCompositeRequest::set_arraynames(int index, const char* value) {
  arraynames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.CreateCompositeRequest.arraynames)
}
inline void CreateCompositeRequest::set_arraynames(int index, const char* value, size_t size) {
  arraynames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.CreateCompositeRequest.arraynames)
}
inline ::std::string* CreateCompositeRequest::add_arraynames() {
  return arraynames_.Add();
}
inline void CreateCompositeRequest::add_arraynames(const ::std::string& value) {
  arraynames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:presto.CreateCompositeRequest.arraynames)
}
inline void CreateCompositeRequest::add_arraynames(const char* value) {
  arraynames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:presto.CreateCompositeRequest.arraynames)
}
inline void CreateCompositeRequest::add_arraynames(const char* value, size_t size) {
  arraynames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:presto.CreateCompositeRequest.arraynames)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CreateCompositeRequest::arraynames() const {
  // @@protoc_insertion_point(field_list:presto.CreateCompositeRequest.arraynames)
  return arraynames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CreateCompositeRequest::mutable_arraynames() {
  // @@protoc_insertion_point(field_mutable_list:presto.CreateCompositeRequest.arraynames)
  return &arraynames_;
}

// repeated .presto.Tuple offsets = 2;
inline int CreateCompositeRequest::offsets_size() const {
  return offsets_.size();
}
inline void CreateCompositeRequest::clear_offsets() {
  offsets_.Clear();
}
inline const ::presto::Tuple& CreateCompositeRequest::offsets(int index) const {
  // @@protoc_insertion_point(field_get:presto.CreateCompositeRequest.offsets)
  return offsets_.Get(index);
}
inline ::presto::Tuple* CreateCompositeRequest::mutable_offsets(int index) {
  // @@protoc_insertion_point(field_mutable:presto.CreateCompositeRequest.offsets)
  return offsets_.Mutable(index);
}
inline ::presto::Tuple* CreateCompositeRequest::add_offsets() {
  // @@protoc_insertion_point(field_add:presto.CreateCompositeRequest.offsets)
  return offsets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::presto::Tuple >&
CreateCompositeRequest::offsets() const {
  // @@protoc_insertion_point(field_list:presto.CreateCompositeRequest.offsets)
  return offsets_;
}
inline ::google::protobuf::RepeatedPtrField< ::presto::Tuple >*
CreateCompositeRequest::mutable_offsets() {
  // @@protoc_insertion_point(field_mutable_list:presto.CreateCompositeRequest.offsets)
  return &offsets_;
}

// required .presto.Tuple dims = 3;
inline bool CreateCompositeRequest::has_dims() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateCompositeRequest::set_has_dims() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateCompositeRequest::clear_has_dims() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateCompositeRequest::clear_dims() {
  if (dims_ != NULL) dims_->::presto::Tuple::Clear();
  clear_has_dims();
}
inline const ::presto::Tuple& CreateCompositeRequest::dims() const {
  // @@protoc_insertion_point(field_get:presto.CreateCompositeRequest.dims)
  return dims_ != NULL ? *dims_ : *default_instance_->dims_;
}
inline ::presto::Tuple* CreateCompositeRequest::mutable_dims() {
  set_has_dims();
  if (dims_ == NULL) dims_ = new ::presto::Tuple;
  // @@protoc_insertion_point(field_mutable:presto.CreateCompositeRequest.dims)
  return dims_;
}
inline ::presto::Tuple* CreateCompositeRequest::release_dims() {
  clear_has_dims();
  ::presto::Tuple* temp = dims_;
  dims_ = NULL;
  return temp;
}
inline void CreateCompositeRequest::set_allocated_dims(::presto::Tuple* dims) {
  delete dims_;
  dims_ = dims;
  if (dims) {
    set_has_dims();
  } else {
    clear_has_dims();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.CreateCompositeRequest.dims)
}

// required string name = 4;
inline bool CreateCompositeRequest::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateCompositeRequest::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateCompositeRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateCompositeRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CreateCompositeRequest::name() const {
  // @@protoc_insertion_point(field_get:presto.CreateCompositeRequest.name)
  return *name_;
}
inline void CreateCompositeRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:presto.CreateCompositeRequest.name)
}
inline void CreateCompositeRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.CreateCompositeRequest.name)
}
inline void CreateCompositeRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.CreateCompositeRequest.name)
}
inline ::std::string* CreateCompositeRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.CreateCompositeRequest.name)
  return name_;
}
inline ::std::string* CreateCompositeRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateCompositeRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.CreateCompositeRequest.name)
}

// optional int64 id = 5;
inline bool CreateCompositeRequest::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateCompositeRequest::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateCompositeRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateCompositeRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 CreateCompositeRequest::id() const {
  // @@protoc_insertion_point(field_get:presto.CreateCompositeRequest.id)
  return id_;
}
inline void CreateCompositeRequest::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:presto.CreateCompositeRequest.id)
}

// required int64 uid = 6;
inline bool CreateCompositeRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateCompositeRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateCompositeRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateCompositeRequest::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 CreateCompositeRequest::uid() const {
  // @@protoc_insertion_point(field_get:presto.CreateCompositeRequest.uid)
  return uid_;
}
inline void CreateCompositeRequest::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:presto.CreateCompositeRequest.uid)
}

// -------------------------------------------------------------------

// WorkerRequest

// required .presto.WorkerRequest.Type type = 1;
inline bool WorkerRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkerRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkerRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkerRequest::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::presto::WorkerRequest_Type WorkerRequest::type() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.type)
  return static_cast< ::presto::WorkerRequest_Type >(type_);
}
inline void WorkerRequest::set_type(::presto::WorkerRequest_Type value) {
  assert(::presto::WorkerRequest_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:presto.WorkerRequest.type)
}

// optional .presto.HelloRequest hello = 2;
inline bool WorkerRequest::has_hello() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkerRequest::set_has_hello() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkerRequest::clear_has_hello() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkerRequest::clear_hello() {
  if (hello_ != NULL) hello_->::presto::HelloRequest::Clear();
  clear_has_hello();
}
inline const ::presto::HelloRequest& WorkerRequest::hello() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.hello)
  return hello_ != NULL ? *hello_ : *default_instance_->hello_;
}
inline ::presto::HelloRequest* WorkerRequest::mutable_hello() {
  set_has_hello();
  if (hello_ == NULL) hello_ = new ::presto::HelloRequest;
  // @@protoc_insertion_point(field_mutable:presto.WorkerRequest.hello)
  return hello_;
}
inline ::presto::HelloRequest* WorkerRequest::release_hello() {
  clear_has_hello();
  ::presto::HelloRequest* temp = hello_;
  hello_ = NULL;
  return temp;
}
inline void WorkerRequest::set_allocated_hello(::presto::HelloRequest* hello) {
  delete hello_;
  hello_ = hello;
  if (hello) {
    set_has_hello();
  } else {
    clear_has_hello();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerRequest.hello)
}

// optional .presto.CreateRequest create = 3;
inline bool WorkerRequest::has_create() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorkerRequest::set_has_create() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorkerRequest::clear_has_create() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorkerRequest::clear_create() {
  if (create_ != NULL) create_->::presto::CreateRequest::Clear();
  clear_has_create();
}
inline const ::presto::CreateRequest& WorkerRequest::create() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.create)
  return create_ != NULL ? *create_ : *default_instance_->create_;
}
inline ::presto::CreateRequest* WorkerRequest::mutable_create() {
  set_has_create();
  if (create_ == NULL) create_ = new ::presto::CreateRequest;
  // @@protoc_insertion_point(field_mutable:presto.WorkerRequest.create)
  return create_;
}
inline ::presto::CreateRequest* WorkerRequest::release_create() {
  clear_has_create();
  ::presto::CreateRequest* temp = create_;
  create_ = NULL;
  return temp;
}
inline void WorkerRequest::set_allocated_create(::presto::CreateRequest* create) {
  delete create_;
  create_ = create;
  if (create) {
    set_has_create();
  } else {
    clear_has_create();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerRequest.create)
}

// optional .presto.ClearRequest clear = 4;
inline bool WorkerRequest::has_clear() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorkerRequest::set_has_clear() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorkerRequest::clear_has_clear() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorkerRequest::clear_clear() {
  if (clear_ != NULL) clear_->::presto::ClearRequest::Clear();
  clear_has_clear();
}
inline const ::presto::ClearRequest& WorkerRequest::clear() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.clear)
  return clear_ != NULL ? *clear_ : *default_instance_->clear_;
}
inline ::presto::ClearRequest* WorkerRequest::mutable_clear() {
  set_has_clear();
  if (clear_ == NULL) clear_ = new ::presto::ClearRequest;
  // @@protoc_insertion_point(field_mutable:presto.WorkerRequest.clear)
  return clear_;
}
inline ::presto::ClearRequest* WorkerRequest::release_clear() {
  clear_has_clear();
  ::presto::ClearRequest* temp = clear_;
  clear_ = NULL;
  return temp;
}
inline void WorkerRequest::set_allocated_clear(::presto::ClearRequest* clear) {
  delete clear_;
  clear_ = clear;
  if (clear) {
    set_has_clear();
  } else {
    clear_has_clear();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerRequest.clear)
}

// optional .presto.CreateCompositeRequest createcomposite = 5;
inline bool WorkerRequest::has_createcomposite() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorkerRequest::set_has_createcomposite() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorkerRequest::clear_has_createcomposite() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorkerRequest::clear_createcomposite() {
  if (createcomposite_ != NULL) createcomposite_->::presto::CreateCompositeRequest::Clear();
  clear_has_createcomposite();
}
inline const ::presto::CreateCompositeRequest& WorkerRequest::createcomposite() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.createcomposite)
  return createcomposite_ != NULL ? *createcomposite_ : *default_instance_->createcomposite_;
}
inline ::presto::CreateCompositeRequest* WorkerRequest::mutable_createcomposite() {
  set_has_createcomposite();
  if (createcomposite_ == NULL) createcomposite_ = new ::presto::CreateCompositeRequest;
  // @@protoc_insertion_point(field_mutable:presto.WorkerRequest.createcomposite)
  return createcomposite_;
}
inline ::presto::CreateCompositeRequest* WorkerRequest::release_createcomposite() {
  clear_has_createcomposite();
  ::presto::CreateCompositeRequest* temp = createcomposite_;
  createcomposite_ = NULL;
  return temp;
}
inline void WorkerRequest::set_allocated_createcomposite(::presto::CreateCompositeRequest* createcomposite) {
  delete createcomposite_;
  createcomposite_ = createcomposite;
  if (createcomposite) {
    set_has_createcomposite();
  } else {
    clear_has_createcomposite();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerRequest.createcomposite)
}

// optional .presto.TransferRequest transfer = 6;
inline bool WorkerRequest::has_transfer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorkerRequest::set_has_transfer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorkerRequest::clear_has_transfer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorkerRequest::clear_transfer() {
  if (transfer_ != NULL) transfer_->::presto::TransferRequest::Clear();
  clear_has_transfer();
}
inline const ::presto::TransferRequest& WorkerRequest::transfer() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.transfer)
  return transfer_ != NULL ? *transfer_ : *default_instance_->transfer_;
}
inline ::presto::TransferRequest* WorkerRequest::mutable_transfer() {
  set_has_transfer();
  if (transfer_ == NULL) transfer_ = new ::presto::TransferRequest;
  // @@protoc_insertion_point(field_mutable:presto.WorkerRequest.transfer)
  return transfer_;
}
inline ::presto::TransferRequest* WorkerRequest::release_transfer() {
  clear_has_transfer();
  ::presto::TransferRequest* temp = transfer_;
  transfer_ = NULL;
  return temp;
}
inline void WorkerRequest::set_allocated_transfer(::presto::TransferRequest* transfer) {
  delete transfer_;
  transfer_ = transfer;
  if (transfer) {
    set_has_transfer();
  } else {
    clear_has_transfer();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerRequest.transfer)
}

// optional .presto.FetchRequest fetch = 7;
inline bool WorkerRequest::has_fetch() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorkerRequest::set_has_fetch() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorkerRequest::clear_has_fetch() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorkerRequest::clear_fetch() {
  if (fetch_ != NULL) fetch_->::presto::FetchRequest::Clear();
  clear_has_fetch();
}
inline const ::presto::FetchRequest& WorkerRequest::fetch() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.fetch)
  return fetch_ != NULL ? *fetch_ : *default_instance_->fetch_;
}
inline ::presto::FetchRequest* WorkerRequest::mutable_fetch() {
  set_has_fetch();
  if (fetch_ == NULL) fetch_ = new ::presto::FetchRequest;
  // @@protoc_insertion_point(field_mutable:presto.WorkerRequest.fetch)
  return fetch_;
}
inline ::presto::FetchRequest* WorkerRequest::release_fetch() {
  clear_has_fetch();
  ::presto::FetchRequest* temp = fetch_;
  fetch_ = NULL;
  return temp;
}
inline void WorkerRequest::set_allocated_fetch(::presto::FetchRequest* fetch) {
  delete fetch_;
  fetch_ = fetch;
  if (fetch) {
    set_has_fetch();
  } else {
    clear_has_fetch();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerRequest.fetch)
}

// optional .presto.NewExecuteRRequest newexecr = 8;
inline bool WorkerRequest::has_newexecr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WorkerRequest::set_has_newexecr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WorkerRequest::clear_has_newexecr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WorkerRequest::clear_newexecr() {
  if (newexecr_ != NULL) newexecr_->::presto::NewExecuteRRequest::Clear();
  clear_has_newexecr();
}
inline const ::presto::NewExecuteRRequest& WorkerRequest::newexecr() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.newexecr)
  return newexecr_ != NULL ? *newexecr_ : *default_instance_->newexecr_;
}
inline ::presto::NewExecuteRRequest* WorkerRequest::mutable_newexecr() {
  set_has_newexecr();
  if (newexecr_ == NULL) newexecr_ = new ::presto::NewExecuteRRequest;
  // @@protoc_insertion_point(field_mutable:presto.WorkerRequest.newexecr)
  return newexecr_;
}
inline ::presto::NewExecuteRRequest* WorkerRequest::release_newexecr() {
  clear_has_newexecr();
  ::presto::NewExecuteRRequest* temp = newexecr_;
  newexecr_ = NULL;
  return temp;
}
inline void WorkerRequest::set_allocated_newexecr(::presto::NewExecuteRRequest* newexecr) {
  delete newexecr_;
  newexecr_ = newexecr;
  if (newexecr) {
    set_has_newexecr();
  } else {
    clear_has_newexecr();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerRequest.newexecr)
}

// optional .presto.IORequest io = 9;
inline bool WorkerRequest::has_io() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WorkerRequest::set_has_io() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WorkerRequest::clear_has_io() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WorkerRequest::clear_io() {
  if (io_ != NULL) io_->::presto::IORequest::Clear();
  clear_has_io();
}
inline const ::presto::IORequest& WorkerRequest::io() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.io)
  return io_ != NULL ? *io_ : *default_instance_->io_;
}
inline ::presto::IORequest* WorkerRequest::mutable_io() {
  set_has_io();
  if (io_ == NULL) io_ = new ::presto::IORequest;
  // @@protoc_insertion_point(field_mutable:presto.WorkerRequest.io)
  return io_;
}
inline ::presto::IORequest* WorkerRequest::release_io() {
  clear_has_io();
  ::presto::IORequest* temp = io_;
  io_ = NULL;
  return temp;
}
inline void WorkerRequest::set_allocated_io(::presto::IORequest* io) {
  delete io_;
  io_ = io;
  if (io) {
    set_has_io();
  } else {
    clear_has_io();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerRequest.io)
}

// optional .presto.LogRequest log = 10;
inline bool WorkerRequest::has_log() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WorkerRequest::set_has_log() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WorkerRequest::clear_has_log() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WorkerRequest::clear_log() {
  if (log_ != NULL) log_->::presto::LogRequest::Clear();
  clear_has_log();
}
inline const ::presto::LogRequest& WorkerRequest::log() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.log)
  return log_ != NULL ? *log_ : *default_instance_->log_;
}
inline ::presto::LogRequest* WorkerRequest::mutable_log() {
  set_has_log();
  if (log_ == NULL) log_ = new ::presto::LogRequest;
  // @@protoc_insertion_point(field_mutable:presto.WorkerRequest.log)
  return log_;
}
inline ::presto::LogRequest* WorkerRequest::release_log() {
  clear_has_log();
  ::presto::LogRequest* temp = log_;
  log_ = NULL;
  return temp;
}
inline void WorkerRequest::set_allocated_log(::presto::LogRequest* log) {
  delete log_;
  log_ = log;
  if (log) {
    set_has_log();
  } else {
    clear_has_log();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerRequest.log)
}

// optional .presto.VerticaDLRequest verticaload = 11;
inline bool WorkerRequest::has_verticaload() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WorkerRequest::set_has_verticaload() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WorkerRequest::clear_has_verticaload() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WorkerRequest::clear_verticaload() {
  if (verticaload_ != NULL) verticaload_->::presto::VerticaDLRequest::Clear();
  clear_has_verticaload();
}
inline const ::presto::VerticaDLRequest& WorkerRequest::verticaload() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.verticaload)
  return verticaload_ != NULL ? *verticaload_ : *default_instance_->verticaload_;
}
inline ::presto::VerticaDLRequest* WorkerRequest::mutable_verticaload() {
  set_has_verticaload();
  if (verticaload_ == NULL) verticaload_ = new ::presto::VerticaDLRequest;
  // @@protoc_insertion_point(field_mutable:presto.WorkerRequest.verticaload)
  return verticaload_;
}
inline ::presto::VerticaDLRequest* WorkerRequest::release_verticaload() {
  clear_has_verticaload();
  ::presto::VerticaDLRequest* temp = verticaload_;
  verticaload_ = NULL;
  return temp;
}
inline void WorkerRequest::set_allocated_verticaload(::presto::VerticaDLRequest* verticaload) {
  delete verticaload_;
  verticaload_ = verticaload;
  if (verticaload) {
    set_has_verticaload();
  } else {
    clear_has_verticaload();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerRequest.verticaload)
}

// optional int64 trace_id = 12;
inline bool WorkerRequest::has_trace_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WorkerRequest::set_has_trace_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WorkerRequest::clear_has_trace_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WorkerRequest::clear_trace_id() {
  trace_id_ = GOOGLE_LONGLONG(0);
  clear_has_trace_id();
}
inline ::google::protobuf::int64 WorkerRequest::trace_id() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.trace_id)
  return trace_id_;
}
inline void WorkerRequest::set_trace_id(::google::protobuf::int64 value) {
  set_has_trace_id();
  trace_id_ = value;
  // @@protoc_insertion_point(field_set:presto.WorkerRequest.trace_id)
}

// optional int64 span_id = 13;
inline bool WorkerRequest::has_span_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WorkerRequest::set_has_span_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void WorkerRequest::clear_has_span_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void WorkerRequest::clear_span_id() {
  span_id_ = GOOGLE_LONGLONG(0);
  clear_has_span_id();
}
inline ::google::protobuf::int64 WorkerRequest::span_id() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.span_id)
  return span_id_;
}
inline void WorkerRequest::set_span_id(::google::protobuf::int64 value) {
  set_has_span_id();
  span_id_ = value;
  // @@protoc_insertion_point(field_set:presto.WorkerRequest.span_id)
}

// optional int64 parent_span_id = 14;
inline bool WorkerRequest::has_parent_span_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void WorkerRequest::set_has_parent_span_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void WorkerRequest::clear_has_parent_span_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void WorkerRequest::clear_parent_span_id() {
  parent_span_id_ = GOOGLE_LONGLONG(0);
  clear_has_parent_span_id();
}
inline ::google::protobuf::int64 WorkerRequest::parent_span_id() const {
  // @@protoc_insertion_point(field_get:presto.WorkerRequest.parent_span_id)
  return parent_span_id_;
}
inline void WorkerRequest::set_parent_span_id(::google::protobuf::int64 value) {
  set_has_parent_span_id();
  parent_span_id_ = value;
  // @@protoc_insertion_point(field_set:presto.WorkerRequest.parent_span_id)
}

// -------------------------------------------------------------------

// FetchRequest

// required string name = 1;
inline bool FetchRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FetchRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FetchRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FetchRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FetchRequest::name() const {
  // @@protoc_insertion_point(field_get:presto.FetchRequest.name)
  return *name_;
}
inline void FetchRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:presto.FetchRequest.name)
}
inline void FetchRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.FetchRequest.name)
}
inline void FetchRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.FetchRequest.name)
}
inline ::std::string* FetchRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.FetchRequest.name)
  return name_;
}
inline ::std::string* FetchRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FetchRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.FetchRequest.name)
}

// required .presto.ServerInfo location = 2;
inline bool FetchRequest::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FetchRequest::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FetchRequest::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FetchRequest::clear_location() {
  if (location_ != NULL) location_->::presto::ServerInfo::Clear();
  clear_has_location();
}
inline const ::presto::ServerInfo& FetchRequest::location() const {
  // @@protoc_insertion_point(field_get:presto.FetchRequest.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::presto::ServerInfo* FetchRequest::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::presto::ServerInfo;
  // @@protoc_insertion_point(field_mutable:presto.FetchRequest.location)
  return location_;
}
inline ::presto::ServerInfo* FetchRequest::release_location() {
  clear_has_location();
  ::presto::ServerInfo* temp = location_;
  location_ = NULL;
  return temp;
}
inline void FetchRequest::set_allocated_location(::presto::ServerInfo* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.FetchRequest.location)
}

// required int64 size = 3;
inline bool FetchRequest::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FetchRequest::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FetchRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FetchRequest::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::int64 FetchRequest::size() const {
  // @@protoc_insertion_point(field_get:presto.FetchRequest.size)
  return size_;
}
inline void FetchRequest::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:presto.FetchRequest.size)
}

// optional string store = 4;
inline bool FetchRequest::has_store() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FetchRequest::set_has_store() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FetchRequest::clear_has_store() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FetchRequest::clear_store() {
  if (store_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_->clear();
  }
  clear_has_store();
}
inline const ::std::string& FetchRequest::store() const {
  // @@protoc_insertion_point(field_get:presto.FetchRequest.store)
  return *store_;
}
inline void FetchRequest::set_store(const ::std::string& value) {
  set_has_store();
  if (store_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_ = new ::std::string;
  }
  store_->assign(value);
  // @@protoc_insertion_point(field_set:presto.FetchRequest.store)
}
inline void FetchRequest::set_store(const char* value) {
  set_has_store();
  if (store_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_ = new ::std::string;
  }
  store_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.FetchRequest.store)
}
inline void FetchRequest::set_store(const char* value, size_t size) {
  set_has_store();
  if (store_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_ = new ::std::string;
  }
  store_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.FetchRequest.store)
}
inline ::std::string* FetchRequest::mutable_store() {
  set_has_store();
  if (store_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.FetchRequest.store)
  return store_;
}
inline ::std::string* FetchRequest::release_store() {
  clear_has_store();
  if (store_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = store_;
    store_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FetchRequest::set_allocated_store(::std::string* store) {
  if (store_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete store_;
  }
  if (store) {
    set_has_store();
    store_ = store;
  } else {
    clear_has_store();
    store_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.FetchRequest.store)
}

// optional int64 id = 5;
inline bool FetchRequest::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FetchRequest::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FetchRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FetchRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 FetchRequest::id() const {
  // @@protoc_insertion_point(field_get:presto.FetchRequest.id)
  return id_;
}
inline void FetchRequest::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:presto.FetchRequest.id)
}

// optional int64 uid = 6;
inline bool FetchRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FetchRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FetchRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FetchRequest::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 FetchRequest::uid() const {
  // @@protoc_insertion_point(field_get:presto.FetchRequest.uid)
  return uid_;
}
inline void FetchRequest::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:presto.FetchRequest.uid)
}

// -------------------------------------------------------------------

// NewExecuteRRequest

// repeated string func = 1;
inline int NewExecuteRRequest::func_size() const {
  return func_.size();
}
inline void NewExecuteRRequest::clear_func() {
  func_.Clear();
}
inline const ::std::string& NewExecuteRRequest::func(int index) const {
  // @@protoc_insertion_point(field_get:presto.NewExecuteRRequest.func)
  return func_.Get(index);
}
inline ::std::string* NewExecuteRRequest::mutable_func(int index) {
  // @@protoc_insertion_point(field_mutable:presto.NewExecuteRRequest.func)
  return func_.Mutable(index);
}
inline void NewExecuteRRequest::set_func(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:presto.NewExecuteRRequest.func)
  func_.Mutable(index)->assign(value);
}
inline void NewExecuteRRequest::set_func(int index, const char* value) {
  func_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.NewExecuteRRequest.func)
}
inline void NewExecuteRRequest::set_func(int index, const char* value, size_t size) {
  func_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.NewExecuteRRequest.func)
}
inline ::std::string* NewExecuteRRequest::add_func() {
  return func_.Add();
}
inline void NewExecuteRRequest::add_func(const ::std::string& value) {
  func_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:presto.NewExecuteRRequest.func)
}
inline void NewExecuteRRequest::add_func(const char* value) {
  func_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:presto.NewExecuteRRequest.func)
}
inline void NewExecuteRRequest::add_func(const char* value, size_t size) {
  func_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:presto.NewExecuteRRequest.func)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NewExecuteRRequest::func() const {
  // @@protoc_insertion_point(field_list:presto.NewExecuteRRequest.func)
  return func_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NewExecuteRRequest::mutable_func() {
  // @@protoc_insertion_point(field_mutable_list:presto.NewExecuteRRequest.func)
  return &func_;
}

// repeated .presto.NewArg args = 2;
inline int NewExecuteRRequest::args_size() const {
  return args_.size();
}
inline void NewExecuteRRequest::clear_args() {
  args_.Clear();
}
inline const ::presto::NewArg& NewExecuteRRequest::args(int index) const {
  // @@protoc_insertion_point(field_get:presto.NewExecuteRRequest.args)
  return args_.Get(index);
}
inline ::presto::NewArg* NewExecuteRRequest::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:presto.NewExecuteRRequest.args)
  return args_.Mutable(index);
}
inline ::presto::NewArg* NewExecuteRRequest::add_args() {
  // @@protoc_insertion_point(field_add:presto.NewExecuteRRequest.args)
  return args_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::presto::NewArg >&
NewExecuteRRequest::args() const {
  // @@protoc_insertion_point(field_list:presto.NewExecuteRRequest.args)
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::presto::NewArg >*
NewExecuteRRequest::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:presto.NewExecuteRRequest.args)
  return &args_;
}

// repeated .presto.RawArg raw_args = 3;
inline int NewExecuteRRequest::raw_args_size() const {
  return raw_args_.size();
}
inline void NewExecuteRRequest::clear_raw_args() {
  raw_args_.Clear();
}
inline const ::presto::RawArg& NewExecuteRRequest::raw_args(int index) const {
  // @@protoc_insertion_point(field_get:presto.NewExecuteRRequest.raw_args)
  return raw_args_.Get(index);
}
inline ::presto::RawArg* NewExecuteRRequest::mutable_raw_args(int index) {
  // @@protoc_insertion_point(field_mutable:presto.NewExecuteRRequest.raw_args)
  return raw_args_.Mutable(index);
}
inline ::presto::RawArg* NewExecuteRRequest::add_raw_args() {
  // @@protoc_insertion_point(field_add:presto.NewExecuteRRequest.raw_args)
  return raw_args_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::presto::RawArg >&
NewExecuteRRequest::raw_args() const {
  // @@protoc_insertion_point(field_list:presto.NewExecuteRRequest.raw_args)
  return raw_args_;
}
inline ::google::protobuf::RepeatedPtrField< ::presto::RawArg >*
NewExecuteRRequest::mutable_raw_args() {
  // @@protoc_insertion_point(field_mutable_list:presto.NewExecuteRRequest.raw_args)
  return &raw_args_;
}

// repeated .presto.NewArg composite_args = 4;
inline int NewExecuteRRequest::composite_args_size() const {
  return composite_args_.size();
}
inline void NewExecuteRRequest::clear_composite_args() {
  composite_args_.Clear();
}
inline const ::presto::NewArg& NewExecuteRRequest::composite_args(int index) const {
  // @@protoc_insertion_point(field_get:presto.NewExecuteRRequest.composite_args)
  return composite_args_.Get(index);
}
inline ::presto::NewArg* NewExecuteRRequest::mutable_composite_args(int index) {
  // @@protoc_insertion_point(field_mutable:presto.NewExecuteRRequest.composite_args)
  return composite_args_.Mutable(index);
}
inline ::presto::NewArg* NewExecuteRRequest::add_composite_args() {
  // @@protoc_insertion_point(field_add:presto.NewExecuteRRequest.composite_args)
  return composite_args_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::presto::NewArg >&
NewExecuteRRequest::composite_args() const {
  // @@protoc_insertion_point(field_list:presto.NewExecuteRRequest.composite_args)
  return composite_args_;
}
inline ::google::protobuf::RepeatedPtrField< ::presto::NewArg >*
NewExecuteRRequest::mutable_composite_args() {
  // @@protoc_insertion_point(field_mutable_list:presto.NewExecuteRRequest.composite_args)
  return &composite_args_;
}

// optional int64 id = 5;
inline bool NewExecuteRRequest::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewExecuteRRequest::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewExecuteRRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewExecuteRRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 NewExecuteRRequest::id() const {
  // @@protoc_insertion_point(field_get:presto.NewExecuteRRequest.id)
  return id_;
}
inline void NewExecuteRRequest::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:presto.NewExecuteRRequest.id)
}

// required int64 uid = 6;
inline bool NewExecuteRRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NewExecuteRRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NewExecuteRRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NewExecuteRRequest::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 NewExecuteRRequest::uid() const {
  // @@protoc_insertion_point(field_get:presto.NewExecuteRRequest.uid)
  return uid_;
}
inline void NewExecuteRRequest::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:presto.NewExecuteRRequest.uid)
}

// -------------------------------------------------------------------

// IORequest

// required string array_name = 1;
inline bool IORequest::has_array_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IORequest::set_has_array_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IORequest::clear_has_array_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IORequest::clear_array_name() {
  if (array_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    array_name_->clear();
  }
  clear_has_array_name();
}
inline const ::std::string& IORequest::array_name() const {
  // @@protoc_insertion_point(field_get:presto.IORequest.array_name)
  return *array_name_;
}
inline void IORequest::set_array_name(const ::std::string& value) {
  set_has_array_name();
  if (array_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    array_name_ = new ::std::string;
  }
  array_name_->assign(value);
  // @@protoc_insertion_point(field_set:presto.IORequest.array_name)
}
inline void IORequest::set_array_name(const char* value) {
  set_has_array_name();
  if (array_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    array_name_ = new ::std::string;
  }
  array_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.IORequest.array_name)
}
inline void IORequest::set_array_name(const char* value, size_t size) {
  set_has_array_name();
  if (array_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    array_name_ = new ::std::string;
  }
  array_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.IORequest.array_name)
}
inline ::std::string* IORequest::mutable_array_name() {
  set_has_array_name();
  if (array_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    array_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.IORequest.array_name)
  return array_name_;
}
inline ::std::string* IORequest::release_array_name() {
  clear_has_array_name();
  if (array_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = array_name_;
    array_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IORequest::set_allocated_array_name(::std::string* array_name) {
  if (array_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete array_name_;
  }
  if (array_name) {
    set_has_array_name();
    array_name_ = array_name;
  } else {
    clear_has_array_name();
    array_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.IORequest.array_name)
}

// required string store_name = 2;
inline bool IORequest::has_store_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IORequest::set_has_store_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IORequest::clear_has_store_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IORequest::clear_store_name() {
  if (store_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_name_->clear();
  }
  clear_has_store_name();
}
inline const ::std::string& IORequest::store_name() const {
  // @@protoc_insertion_point(field_get:presto.IORequest.store_name)
  return *store_name_;
}
inline void IORequest::set_store_name(const ::std::string& value) {
  set_has_store_name();
  if (store_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_name_ = new ::std::string;
  }
  store_name_->assign(value);
  // @@protoc_insertion_point(field_set:presto.IORequest.store_name)
}
inline void IORequest::set_store_name(const char* value) {
  set_has_store_name();
  if (store_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_name_ = new ::std::string;
  }
  store_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.IORequest.store_name)
}
inline void IORequest::set_store_name(const char* value, size_t size) {
  set_has_store_name();
  if (store_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_name_ = new ::std::string;
  }
  store_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.IORequest.store_name)
}
inline ::std::string* IORequest::mutable_store_name() {
  set_has_store_name();
  if (store_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    store_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.IORequest.store_name)
  return store_name_;
}
inline ::std::string* IORequest::release_store_name() {
  clear_has_store_name();
  if (store_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = store_name_;
    store_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IORequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete store_name_;
  }
  if (store_name) {
    set_has_store_name();
    store_name_ = store_name;
  } else {
    clear_has_store_name();
    store_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.IORequest.store_name)
}

// required .presto.IORequest.Type type = 3;
inline bool IORequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IORequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IORequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IORequest::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::presto::IORequest_Type IORequest::type() const {
  // @@protoc_insertion_point(field_get:presto.IORequest.type)
  return static_cast< ::presto::IORequest_Type >(type_);
}
inline void IORequest::set_type(::presto::IORequest_Type value) {
  assert(::presto::IORequest_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:presto.IORequest.type)
}

// optional int64 id = 4;
inline bool IORequest::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IORequest::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IORequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IORequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 IORequest::id() const {
  // @@protoc_insertion_point(field_get:presto.IORequest.id)
  return id_;
}
inline void IORequest::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:presto.IORequest.id)
}

// required int64 uid = 5;
inline bool IORequest::has_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IORequest::set_has_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IORequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IORequest::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 IORequest::uid() const {
  // @@protoc_insertion_point(field_get:presto.IORequest.uid)
  return uid_;
}
inline void IORequest::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:presto.IORequest.uid)
}

// -------------------------------------------------------------------

// LogRequest

// required string msg = 1;
inline bool LogRequest::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogRequest::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogRequest::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogRequest::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& LogRequest::msg() const {
  // @@protoc_insertion_point(field_get:presto.LogRequest.msg)
  return *msg_;
}
inline void LogRequest::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:presto.LogRequest.msg)
}
inline void LogRequest::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.LogRequest.msg)
}
inline void LogRequest::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.LogRequest.msg)
}
inline ::std::string* LogRequest::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.LogRequest.msg)
  return msg_;
}
inline ::std::string* LogRequest::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LogRequest::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.LogRequest.msg)
}

// -------------------------------------------------------------------

// VerticaDLRequest

// required .presto.VerticaDLRequest.Type type = 1;
inline bool VerticaDLRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerticaDLRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerticaDLRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerticaDLRequest::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::presto::VerticaDLRequest_Type VerticaDLRequest::type() const {
  // @@protoc_insertion_point(field_get:presto.VerticaDLRequest.type)
  return static_cast< ::presto::VerticaDLRequest_Type >(type_);
}
inline void VerticaDLRequest::set_type(::presto::VerticaDLRequest_Type value) {
  assert(::presto::VerticaDLRequest_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:presto.VerticaDLRequest.type)
}

// optional int64 split_size = 2;
inline bool VerticaDLRequest::has_split_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerticaDLRequest::set_has_split_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerticaDLRequest::clear_has_split_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerticaDLRequest::clear_split_size() {
  split_size_ = GOOGLE_LONGLONG(0);
  clear_has_split_size();
}
inline ::google::protobuf::int64 VerticaDLRequest::split_size() const {
  // @@protoc_insertion_point(field_get:presto.VerticaDLRequest.split_size)
  return split_size_;
}
inline void VerticaDLRequest::set_split_size(::google::protobuf::int64 value) {
  set_has_split_size();
  split_size_ = value;
  // @@protoc_insertion_point(field_set:presto.VerticaDLRequest.split_size)
}

// optional string split_name = 3;
inline bool VerticaDLRequest::has_split_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerticaDLRequest::set_has_split_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerticaDLRequest::clear_has_split_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerticaDLRequest::clear_split_name() {
  if (split_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    split_name_->clear();
  }
  clear_has_split_name();
}
inline const ::std::string& VerticaDLRequest::split_name() const {
  // @@protoc_insertion_point(field_get:presto.VerticaDLRequest.split_name)
  return *split_name_;
}
inline void VerticaDLRequest::set_split_name(const ::std::string& value) {
  set_has_split_name();
  if (split_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    split_name_ = new ::std::string;
  }
  split_name_->assign(value);
  // @@protoc_insertion_point(field_set:presto.VerticaDLRequest.split_name)
}
inline void VerticaDLRequest::set_split_name(const char* value) {
  set_has_split_name();
  if (split_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    split_name_ = new ::std::string;
  }
  split_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.VerticaDLRequest.split_name)
}
inline void VerticaDLRequest::set_split_name(const char* value, size_t size) {
  set_has_split_name();
  if (split_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    split_name_ = new ::std::string;
  }
  split_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.VerticaDLRequest.split_name)
}
inline ::std::string* VerticaDLRequest::mutable_split_name() {
  set_has_split_name();
  if (split_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    split_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.VerticaDLRequest.split_name)
  return split_name_;
}
inline ::std::string* VerticaDLRequest::release_split_name() {
  clear_has_split_name();
  if (split_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = split_name_;
    split_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void VerticaDLRequest::set_allocated_split_name(::std::string* split_name) {
  if (split_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete split_name_;
  }
  if (split_name) {
    set_has_split_name();
    split_name_ = split_name;
  } else {
    clear_has_split_name();
    split_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.VerticaDLRequest.split_name)
}

// repeated string query_result = 4;
inline int VerticaDLRequest::query_result_size() const {
  return query_result_.size();
}
inline void VerticaDLRequest::clear_query_result() {
  query_result_.Clear();
}
inline const ::std::string& VerticaDLRequest::query_result(int index) const {
  // @@protoc_insertion_point(field_get:presto.VerticaDLRequest.query_result)
  return query_result_.Get(index);
}
inline ::std::string* VerticaDLRequest::mutable_query_result(int index) {
  // @@protoc_insertion_point(field_mutable:presto.VerticaDLRequest.query_result)
  return query_result_.Mutable(index);
}
inline void VerticaDLRequest::set_query_result(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:presto.VerticaDLRequest.query_result)
  query_result_.Mutable(index)->assign(value);
}
inline void VerticaDLRequest::set_query_result(int index, const char* value) {
  query_result_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.VerticaDLRequest.query_result)
}
inline void VerticaDLRequest::set_query_result(int index, const char* value, size_t size) {
  query_result_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.VerticaDLRequest.query_result)
}
inline ::std::string* VerticaDLRequest::add_query_result() {
  return query_result_.Add();
}
inline void VerticaDLRequest::add_query_result(const ::std::string& value) {
  query_result_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:presto.VerticaDLRequest.query_result)
}
inline void VerticaDLRequest::add_query_result(const char* value) {
  query_result_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:presto.VerticaDLRequest.query_result)
}
inline void VerticaDLRequest::add_query_result(const char* value, size_t size) {
  query_result_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:presto.VerticaDLRequest.query_result)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
VerticaDLRequest::query_result() const {
  // @@protoc_insertion_point(field_list:presto.VerticaDLRequest.query_result)
  return query_result_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
VerticaDLRequest::mutable_query_result() {
  // @@protoc_insertion_point(field_mutable_list:presto.VerticaDLRequest.query_result)
  return &query_result_;
}

// required int64 id = 5;
inline bool VerticaDLRequest::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VerticaDLRequest::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VerticaDLRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VerticaDLRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 VerticaDLRequest::id() const {
  // @@protoc_insertion_point(field_get:presto.VerticaDLRequest.id)
  return id_;
}
inline void VerticaDLRequest::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:presto.VerticaDLRequest.id)
}

// optional int64 uid = 6;
inline bool VerticaDLRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VerticaDLRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VerticaDLRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VerticaDLRequest::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 VerticaDLRequest::uid() const {
  // @@protoc_insertion_point(field_get:presto.VerticaDLRequest.uid)
  return uid_;
}
inline void VerticaDLRequest::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:presto.VerticaDLRequest.uid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace presto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::presto::WorkerRequest_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::presto::WorkerRequest_Type>() {
  return ::presto::WorkerRequest_Type_descriptor();
}
template <> struct is_proto_enum< ::presto::IORequest_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::presto::IORequest_Type>() {
  return ::presto::IORequest_Type_descriptor();
}
template <> struct is_proto_enum< ::presto::VerticaDLRequest_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::presto::VerticaDLRequest_Type>() {
  return ::presto::VerticaDLRequest_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_worker_2eproto__INCLUDED
