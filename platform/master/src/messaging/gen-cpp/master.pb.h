// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master.proto

#ifndef PROTOBUF_master_2eproto__INCLUDED
#define PROTOBUF_master_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "shared.pb.h"
// @@protoc_insertion_point(includes)

namespace presto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_master_2eproto();
void protobuf_AssignDesc_master_2eproto();
void protobuf_ShutdownFile_master_2eproto();

class UpdateArrayRequest;
class MasterRequest;
class NewUpdateRequest;
class TaskDoneRequest;
class ArrayStoreData;
class HelloReplyRequest;
class WorkerAbortRequest;

enum MasterRequest_Type {
  MasterRequest_Type_UPDATE = 1,
  MasterRequest_Type_NEWUPDATE = 2,
  MasterRequest_Type_TASKDONE = 3,
  MasterRequest_Type_HELLOREPLY = 4,
  MasterRequest_Type_SHUTDOWN = 5,
  MasterRequest_Type_WORKERABORT = 6
};
bool MasterRequest_Type_IsValid(int value);
const MasterRequest_Type MasterRequest_Type_Type_MIN = MasterRequest_Type_UPDATE;
const MasterRequest_Type MasterRequest_Type_Type_MAX = MasterRequest_Type_WORKERABORT;
const int MasterRequest_Type_Type_ARRAYSIZE = MasterRequest_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MasterRequest_Type_descriptor();
inline const ::std::string& MasterRequest_Type_Name(MasterRequest_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MasterRequest_Type_descriptor(), value);
}
inline bool MasterRequest_Type_Parse(
    const ::std::string& name, MasterRequest_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MasterRequest_Type>(
    MasterRequest_Type_descriptor(), name, value);
}
// ===================================================================

class UpdateArrayRequest : public ::google::protobuf::Message {
 public:
  UpdateArrayRequest();
  virtual ~UpdateArrayRequest();

  UpdateArrayRequest(const UpdateArrayRequest& from);

  inline UpdateArrayRequest& operator=(const UpdateArrayRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateArrayRequest& default_instance();

  void Swap(UpdateArrayRequest* other);

  // implements Message ----------------------------------------------

  UpdateArrayRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateArrayRequest& from);
  void MergeFrom(const UpdateArrayRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .presto.Array array = 1;
  inline bool has_array() const;
  inline void clear_array();
  static const int kArrayFieldNumber = 1;
  inline const ::presto::Array& array() const;
  inline ::presto::Array* mutable_array();
  inline ::presto::Array* release_array();
  inline void set_allocated_array(::presto::Array* array);

  // required .presto.ServerInfo location = 2;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 2;
  inline const ::presto::ServerInfo& location() const;
  inline ::presto::ServerInfo* mutable_location();
  inline ::presto::ServerInfo* release_location();
  inline void set_allocated_location(::presto::ServerInfo* location);

  // required string clear_name = 3;
  inline bool has_clear_name() const;
  inline void clear_clear_name();
  static const int kClearNameFieldNumber = 3;
  inline const ::std::string& clear_name() const;
  inline void set_clear_name(const ::std::string& value);
  inline void set_clear_name(const char* value);
  inline void set_clear_name(const char* value, size_t size);
  inline ::std::string* mutable_clear_name();
  inline ::std::string* release_clear_name();
  inline void set_allocated_clear_name(::std::string* clear_name);

  // @@protoc_insertion_point(class_scope:presto.UpdateArrayRequest)
 private:
  inline void set_has_array();
  inline void clear_has_array();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_clear_name();
  inline void clear_has_clear_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::presto::Array* array_;
  ::presto::ServerInfo* location_;
  ::std::string* clear_name_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static UpdateArrayRequest* default_instance_;
};
// -------------------------------------------------------------------

class MasterRequest : public ::google::protobuf::Message {
 public:
  MasterRequest();
  virtual ~MasterRequest();

  MasterRequest(const MasterRequest& from);

  inline MasterRequest& operator=(const MasterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MasterRequest& default_instance();

  void Swap(MasterRequest* other);

  // implements Message ----------------------------------------------

  MasterRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MasterRequest& from);
  void MergeFrom(const MasterRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MasterRequest_Type Type;
  static const Type UPDATE = MasterRequest_Type_UPDATE;
  static const Type NEWUPDATE = MasterRequest_Type_NEWUPDATE;
  static const Type TASKDONE = MasterRequest_Type_TASKDONE;
  static const Type HELLOREPLY = MasterRequest_Type_HELLOREPLY;
  static const Type SHUTDOWN = MasterRequest_Type_SHUTDOWN;
  static const Type WORKERABORT = MasterRequest_Type_WORKERABORT;
  static inline bool Type_IsValid(int value) {
    return MasterRequest_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MasterRequest_Type_Type_MIN;
  static const Type Type_MAX =
    MasterRequest_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MasterRequest_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MasterRequest_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MasterRequest_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MasterRequest_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .presto.MasterRequest.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::presto::MasterRequest_Type type() const;
  inline void set_type(::presto::MasterRequest_Type value);

  // optional .presto.UpdateArrayRequest update = 2;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 2;
  inline const ::presto::UpdateArrayRequest& update() const;
  inline ::presto::UpdateArrayRequest* mutable_update();
  inline ::presto::UpdateArrayRequest* release_update();
  inline void set_allocated_update(::presto::UpdateArrayRequest* update);

  // optional .presto.NewUpdateRequest newupdate = 3;
  inline bool has_newupdate() const;
  inline void clear_newupdate();
  static const int kNewupdateFieldNumber = 3;
  inline const ::presto::NewUpdateRequest& newupdate() const;
  inline ::presto::NewUpdateRequest* mutable_newupdate();
  inline ::presto::NewUpdateRequest* release_newupdate();
  inline void set_allocated_newupdate(::presto::NewUpdateRequest* newupdate);

  // optional .presto.TaskDoneRequest taskdone = 4;
  inline bool has_taskdone() const;
  inline void clear_taskdone();
  static const int kTaskdoneFieldNumber = 4;
  inline const ::presto::TaskDoneRequest& taskdone() const;
  inline ::presto::TaskDoneRequest* mutable_taskdone();
  inline ::presto::TaskDoneRequest* release_taskdone();
  inline void set_allocated_taskdone(::presto::TaskDoneRequest* taskdone);

  // optional .presto.HelloReplyRequest helloreply = 5;
  inline bool has_helloreply() const;
  inline void clear_helloreply();
  static const int kHelloreplyFieldNumber = 5;
  inline const ::presto::HelloReplyRequest& helloreply() const;
  inline ::presto::HelloReplyRequest* mutable_helloreply();
  inline ::presto::HelloReplyRequest* release_helloreply();
  inline void set_allocated_helloreply(::presto::HelloReplyRequest* helloreply);

  // optional .presto.WorkerAbortRequest workerabort = 6;
  inline bool has_workerabort() const;
  inline void clear_workerabort();
  static const int kWorkerabortFieldNumber = 6;
  inline const ::presto::WorkerAbortRequest& workerabort() const;
  inline ::presto::WorkerAbortRequest* mutable_workerabort();
  inline ::presto::WorkerAbortRequest* release_workerabort();
  inline void set_allocated_workerabort(::presto::WorkerAbortRequest* workerabort);

  // @@protoc_insertion_point(class_scope:presto.MasterRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_update();
  inline void clear_has_update();
  inline void set_has_newupdate();
  inline void clear_has_newupdate();
  inline void set_has_taskdone();
  inline void clear_has_taskdone();
  inline void set_has_helloreply();
  inline void clear_has_helloreply();
  inline void set_has_workerabort();
  inline void clear_has_workerabort();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::presto::UpdateArrayRequest* update_;
  ::presto::NewUpdateRequest* newupdate_;
  ::presto::TaskDoneRequest* taskdone_;
  ::presto::HelloReplyRequest* helloreply_;
  ::presto::WorkerAbortRequest* workerabort_;
  int type_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static MasterRequest* default_instance_;
};
// -------------------------------------------------------------------

class NewUpdateRequest : public ::google::protobuf::Message {
 public:
  NewUpdateRequest();
  virtual ~NewUpdateRequest();

  NewUpdateRequest(const NewUpdateRequest& from);

  inline NewUpdateRequest& operator=(const NewUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewUpdateRequest& default_instance();

  void Swap(NewUpdateRequest* other);

  // implements Message ----------------------------------------------

  NewUpdateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewUpdateRequest& from);
  void MergeFrom(const NewUpdateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .presto.ServerInfo location = 2;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 2;
  inline const ::presto::ServerInfo& location() const;
  inline ::presto::ServerInfo* mutable_location();
  inline ::presto::ServerInfo* release_location();
  inline void set_allocated_location(::presto::ServerInfo* location);

  // required int64 size = 3;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 3;
  inline ::google::protobuf::int64 size() const;
  inline void set_size(::google::protobuf::int64 value);

  // required int64 row_dim = 4;
  inline bool has_row_dim() const;
  inline void clear_row_dim();
  static const int kRowDimFieldNumber = 4;
  inline ::google::protobuf::int64 row_dim() const;
  inline void set_row_dim(::google::protobuf::int64 value);

  // required int64 col_dim = 5;
  inline bool has_col_dim() const;
  inline void clear_col_dim();
  static const int kColDimFieldNumber = 5;
  inline ::google::protobuf::int64 col_dim() const;
  inline void set_col_dim(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:presto.NewUpdateRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_row_dim();
  inline void clear_has_row_dim();
  inline void set_has_col_dim();
  inline void clear_has_col_dim();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::presto::ServerInfo* location_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 row_dim_;
  ::google::protobuf::int64 col_dim_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static NewUpdateRequest* default_instance_;
};
// -------------------------------------------------------------------

class TaskDoneRequest : public ::google::protobuf::Message {
 public:
  TaskDoneRequest();
  virtual ~TaskDoneRequest();

  TaskDoneRequest(const TaskDoneRequest& from);

  inline TaskDoneRequest& operator=(const TaskDoneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskDoneRequest& default_instance();

  void Swap(TaskDoneRequest* other);

  // implements Message ----------------------------------------------

  TaskDoneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskDoneRequest& from);
  void MergeFrom(const TaskDoneRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated string update_names = 2;
  inline int update_names_size() const;
  inline void clear_update_names();
  static const int kUpdateNamesFieldNumber = 2;
  inline const ::std::string& update_names(int index) const;
  inline ::std::string* mutable_update_names(int index);
  inline void set_update_names(int index, const ::std::string& value);
  inline void set_update_names(int index, const char* value);
  inline void set_update_names(int index, const char* value, size_t size);
  inline ::std::string* add_update_names();
  inline void add_update_names(const ::std::string& value);
  inline void add_update_names(const char* value);
  inline void add_update_names(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& update_names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_update_names();

  // repeated int64 update_sizes = 3;
  inline int update_sizes_size() const;
  inline void clear_update_sizes();
  static const int kUpdateSizesFieldNumber = 3;
  inline ::google::protobuf::int64 update_sizes(int index) const;
  inline void set_update_sizes(int index, ::google::protobuf::int64 value);
  inline void add_update_sizes(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      update_sizes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_update_sizes();

  // required .presto.ServerInfo location = 4;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 4;
  inline const ::presto::ServerInfo& location() const;
  inline ::presto::ServerInfo* mutable_location();
  inline ::presto::ServerInfo* release_location();
  inline void set_allocated_location(::presto::ServerInfo* location);

  // repeated string update_stores = 5;
  inline int update_stores_size() const;
  inline void clear_update_stores();
  static const int kUpdateStoresFieldNumber = 5;
  inline const ::std::string& update_stores(int index) const;
  inline ::std::string* mutable_update_stores(int index);
  inline void set_update_stores(int index, const ::std::string& value);
  inline void set_update_stores(int index, const char* value);
  inline void set_update_stores(int index, const char* value, size_t size);
  inline ::std::string* add_update_stores();
  inline void add_update_stores(const ::std::string& value);
  inline void add_update_stores(const char* value);
  inline void add_update_stores(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& update_stores() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_update_stores();

  // repeated bool update_empties = 6;
  inline int update_empties_size() const;
  inline void clear_update_empties();
  static const int kUpdateEmptiesFieldNumber = 6;
  inline bool update_empties(int index) const;
  inline void set_update_empties(int index, bool value);
  inline void add_update_empties(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      update_empties() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_update_empties();

  // required int64 uid = 7;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 7;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // optional int64 mem_used = 8;
  inline bool has_mem_used() const;
  inline void clear_mem_used();
  static const int kMemUsedFieldNumber = 8;
  inline ::google::protobuf::int64 mem_used() const;
  inline void set_mem_used(::google::protobuf::int64 value);

  // optional string task_message = 9;
  inline bool has_task_message() const;
  inline void clear_task_message();
  static const int kTaskMessageFieldNumber = 9;
  inline const ::std::string& task_message() const;
  inline void set_task_message(const ::std::string& value);
  inline void set_task_message(const char* value);
  inline void set_task_message(const char* value, size_t size);
  inline ::std::string* mutable_task_message();
  inline ::std::string* release_task_message();
  inline void set_allocated_task_message(::std::string* task_message);

  // optional int64 task_result = 10;
  inline bool has_task_result() const;
  inline void clear_task_result();
  static const int kTaskResultFieldNumber = 10;
  inline ::google::protobuf::int64 task_result() const;
  inline void set_task_result(::google::protobuf::int64 value);

  // repeated int64 row_dim = 11;
  inline int row_dim_size() const;
  inline void clear_row_dim();
  static const int kRowDimFieldNumber = 11;
  inline ::google::protobuf::int64 row_dim(int index) const;
  inline void set_row_dim(int index, ::google::protobuf::int64 value);
  inline void add_row_dim(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      row_dim() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_row_dim();

  // repeated int64 col_dim = 12;
  inline int col_dim_size() const;
  inline void clear_col_dim();
  static const int kColDimFieldNumber = 12;
  inline ::google::protobuf::int64 col_dim(int index) const;
  inline void set_col_dim(int index, ::google::protobuf::int64 value);
  inline void add_col_dim(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      col_dim() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_col_dim();

  // optional int64 npartitions = 13;
  inline bool has_npartitions() const;
  inline void clear_npartitions();
  static const int kNpartitionsFieldNumber = 13;
  inline ::google::protobuf::int64 npartitions() const;
  inline void set_npartitions(::google::protobuf::int64 value);

  // optional int32 loader_port = 14;
  inline bool has_loader_port() const;
  inline void clear_loader_port();
  static const int kLoaderPortFieldNumber = 14;
  inline ::google::protobuf::int32 loader_port() const;
  inline void set_loader_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:presto.TaskDoneRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_mem_used();
  inline void clear_has_mem_used();
  inline void set_has_task_message();
  inline void clear_has_task_message();
  inline void set_has_task_result();
  inline void clear_has_task_result();
  inline void set_has_npartitions();
  inline void clear_has_npartitions();
  inline void set_has_loader_port();
  inline void clear_has_loader_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> update_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > update_sizes_;
  ::presto::ServerInfo* location_;
  ::google::protobuf::RepeatedPtrField< ::std::string> update_stores_;
  ::google::protobuf::RepeatedField< bool > update_empties_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 mem_used_;
  ::std::string* task_message_;
  ::google::protobuf::int64 task_result_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > row_dim_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > col_dim_;
  ::google::protobuf::int64 npartitions_;
  ::google::protobuf::int32 loader_port_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static TaskDoneRequest* default_instance_;
};
// -------------------------------------------------------------------

class ArrayStoreData : public ::google::protobuf::Message {
 public:
  ArrayStoreData();
  virtual ~ArrayStoreData();

  ArrayStoreData(const ArrayStoreData& from);

  inline ArrayStoreData& operator=(const ArrayStoreData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArrayStoreData& default_instance();

  void Swap(ArrayStoreData* other);

  // implements Message ----------------------------------------------

  ArrayStoreData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArrayStoreData& from);
  void MergeFrom(const ArrayStoreData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 size = 1;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 1;
  inline ::google::protobuf::int64 size() const;
  inline void set_size(::google::protobuf::int64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .presto.ServerInfo location = 3;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 3;
  inline const ::presto::ServerInfo& location() const;
  inline ::presto::ServerInfo* mutable_location();
  inline ::presto::ServerInfo* release_location();
  inline void set_allocated_location(::presto::ServerInfo* location);

  // @@protoc_insertion_point(class_scope:presto.ArrayStoreData)
 private:
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_location();
  inline void clear_has_location();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 size_;
  ::std::string* name_;
  ::presto::ServerInfo* location_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static ArrayStoreData* default_instance_;
};
// -------------------------------------------------------------------

class HelloReplyRequest : public ::google::protobuf::Message {
 public:
  HelloReplyRequest();
  virtual ~HelloReplyRequest();

  HelloReplyRequest(const HelloReplyRequest& from);

  inline HelloReplyRequest& operator=(const HelloReplyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloReplyRequest& default_instance();

  void Swap(HelloReplyRequest* other);

  // implements Message ----------------------------------------------

  HelloReplyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloReplyRequest& from);
  void MergeFrom(const HelloReplyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .presto.ServerInfo location = 1;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 1;
  inline const ::presto::ServerInfo& location() const;
  inline ::presto::ServerInfo* mutable_location();
  inline ::presto::ServerInfo* release_location();
  inline void set_allocated_location(::presto::ServerInfo* location);

  // optional int64 shared_memory = 2;
  inline bool has_shared_memory() const;
  inline void clear_shared_memory();
  static const int kSharedMemoryFieldNumber = 2;
  inline ::google::protobuf::int64 shared_memory() const;
  inline void set_shared_memory(::google::protobuf::int64 value);

  // optional int32 executors = 3;
  inline bool has_executors() const;
  inline void clear_executors();
  static const int kExecutorsFieldNumber = 3;
  inline ::google::protobuf::int32 executors() const;
  inline void set_executors(::google::protobuf::int32 value);

  // repeated .presto.ArrayStoreData array_stores = 4;
  inline int array_stores_size() const;
  inline void clear_array_stores();
  static const int kArrayStoresFieldNumber = 4;
  inline const ::presto::ArrayStoreData& array_stores(int index) const;
  inline ::presto::ArrayStoreData* mutable_array_stores(int index);
  inline ::presto::ArrayStoreData* add_array_stores();
  inline const ::google::protobuf::RepeatedPtrField< ::presto::ArrayStoreData >&
      array_stores() const;
  inline ::google::protobuf::RepeatedPtrField< ::presto::ArrayStoreData >*
      mutable_array_stores();

  // optional int64 mem_total = 5 [default = 0];
  inline bool has_mem_total() const;
  inline void clear_mem_total();
  static const int kMemTotalFieldNumber = 5;
  inline ::google::protobuf::int64 mem_total() const;
  inline void set_mem_total(::google::protobuf::int64 value);

  // optional int64 mem_used = 6 [default = 0];
  inline bool has_mem_used() const;
  inline void clear_mem_used();
  static const int kMemUsedFieldNumber = 6;
  inline ::google::protobuf::int64 mem_used() const;
  inline void set_mem_used(::google::protobuf::int64 value);

  // optional bool is_heartbeat = 7 [default = false];
  inline bool has_is_heartbeat() const;
  inline void clear_is_heartbeat();
  static const int kIsHeartbeatFieldNumber = 7;
  inline bool is_heartbeat() const;
  inline void set_is_heartbeat(bool value);

  // @@protoc_insertion_point(class_scope:presto.HelloReplyRequest)
 private:
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_shared_memory();
  inline void clear_has_shared_memory();
  inline void set_has_executors();
  inline void clear_has_executors();
  inline void set_has_mem_total();
  inline void clear_has_mem_total();
  inline void set_has_mem_used();
  inline void clear_has_mem_used();
  inline void set_has_is_heartbeat();
  inline void clear_has_is_heartbeat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::presto::ServerInfo* location_;
  ::google::protobuf::int64 shared_memory_;
  ::google::protobuf::RepeatedPtrField< ::presto::ArrayStoreData > array_stores_;
  ::google::protobuf::int64 mem_total_;
  ::google::protobuf::int32 executors_;
  bool is_heartbeat_;
  ::google::protobuf::int64 mem_used_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static HelloReplyRequest* default_instance_;
};
// -------------------------------------------------------------------

class WorkerAbortRequest : public ::google::protobuf::Message {
 public:
  WorkerAbortRequest();
  virtual ~WorkerAbortRequest();

  WorkerAbortRequest(const WorkerAbortRequest& from);

  inline WorkerAbortRequest& operator=(const WorkerAbortRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkerAbortRequest& default_instance();

  void Swap(WorkerAbortRequest* other);

  // implements Message ----------------------------------------------

  WorkerAbortRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkerAbortRequest& from);
  void MergeFrom(const WorkerAbortRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .presto.ServerInfo location = 1;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 1;
  inline const ::presto::ServerInfo& location() const;
  inline ::presto::ServerInfo* mutable_location();
  inline ::presto::ServerInfo* release_location();
  inline void set_allocated_location(::presto::ServerInfo* location);

  // required string reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // optional int64 shared_memory = 3;
  inline bool has_shared_memory() const;
  inline void clear_shared_memory();
  static const int kSharedMemoryFieldNumber = 3;
  inline ::google::protobuf::int64 shared_memory() const;
  inline void set_shared_memory(::google::protobuf::int64 value);

  // optional int32 executors = 4;
  inline bool has_executors() const;
  inline void clear_executors();
  static const int kExecutorsFieldNumber = 4;
  inline ::google::protobuf::int32 executors() const;
  inline void set_executors(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:presto.WorkerAbortRequest)
 private:
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_shared_memory();
  inline void clear_has_shared_memory();
  inline void set_has_executors();
  inline void clear_has_executors();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::presto::ServerInfo* location_;
  ::std::string* reason_;
  ::google::protobuf::int64 shared_memory_;
  ::google::protobuf::int32 executors_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static WorkerAbortRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// UpdateArrayRequest

// required .presto.Array array = 1;
inline bool UpdateArrayRequest::has_array() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateArrayRequest::set_has_array() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateArrayRequest::clear_has_array() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateArrayRequest::clear_array() {
  if (array_ != NULL) array_->::presto::Array::Clear();
  clear_has_array();
}
inline const ::presto::Array& UpdateArrayRequest::array() const {
  // @@protoc_insertion_point(field_get:presto.UpdateArrayRequest.array)
  return array_ != NULL ? *array_ : *default_instance_->array_;
}
inline ::presto::Array* UpdateArrayRequest::mutable_array() {
  set_has_array();
  if (array_ == NULL) array_ = new ::presto::Array;
  // @@protoc_insertion_point(field_mutable:presto.UpdateArrayRequest.array)
  return array_;
}
inline ::presto::Array* UpdateArrayRequest::release_array() {
  clear_has_array();
  ::presto::Array* temp = array_;
  array_ = NULL;
  return temp;
}
inline void UpdateArrayRequest::set_allocated_array(::presto::Array* array) {
  delete array_;
  array_ = array;
  if (array) {
    set_has_array();
  } else {
    clear_has_array();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.UpdateArrayRequest.array)
}

// required .presto.ServerInfo location = 2;
inline bool UpdateArrayRequest::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateArrayRequest::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateArrayRequest::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateArrayRequest::clear_location() {
  if (location_ != NULL) location_->::presto::ServerInfo::Clear();
  clear_has_location();
}
inline const ::presto::ServerInfo& UpdateArrayRequest::location() const {
  // @@protoc_insertion_point(field_get:presto.UpdateArrayRequest.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::presto::ServerInfo* UpdateArrayRequest::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::presto::ServerInfo;
  // @@protoc_insertion_point(field_mutable:presto.UpdateArrayRequest.location)
  return location_;
}
inline ::presto::ServerInfo* UpdateArrayRequest::release_location() {
  clear_has_location();
  ::presto::ServerInfo* temp = location_;
  location_ = NULL;
  return temp;
}
inline void UpdateArrayRequest::set_allocated_location(::presto::ServerInfo* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.UpdateArrayRequest.location)
}

// required string clear_name = 3;
inline bool UpdateArrayRequest::has_clear_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateArrayRequest::set_has_clear_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateArrayRequest::clear_has_clear_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateArrayRequest::clear_clear_name() {
  if (clear_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    clear_name_->clear();
  }
  clear_has_clear_name();
}
inline const ::std::string& UpdateArrayRequest::clear_name() const {
  // @@protoc_insertion_point(field_get:presto.UpdateArrayRequest.clear_name)
  return *clear_name_;
}
inline void UpdateArrayRequest::set_clear_name(const ::std::string& value) {
  set_has_clear_name();
  if (clear_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    clear_name_ = new ::std::string;
  }
  clear_name_->assign(value);
  // @@protoc_insertion_point(field_set:presto.UpdateArrayRequest.clear_name)
}
inline void UpdateArrayRequest::set_clear_name(const char* value) {
  set_has_clear_name();
  if (clear_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    clear_name_ = new ::std::string;
  }
  clear_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.UpdateArrayRequest.clear_name)
}
inline void UpdateArrayRequest::set_clear_name(const char* value, size_t size) {
  set_has_clear_name();
  if (clear_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    clear_name_ = new ::std::string;
  }
  clear_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.UpdateArrayRequest.clear_name)
}
inline ::std::string* UpdateArrayRequest::mutable_clear_name() {
  set_has_clear_name();
  if (clear_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    clear_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.UpdateArrayRequest.clear_name)
  return clear_name_;
}
inline ::std::string* UpdateArrayRequest::release_clear_name() {
  clear_has_clear_name();
  if (clear_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = clear_name_;
    clear_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateArrayRequest::set_allocated_clear_name(::std::string* clear_name) {
  if (clear_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete clear_name_;
  }
  if (clear_name) {
    set_has_clear_name();
    clear_name_ = clear_name;
  } else {
    clear_has_clear_name();
    clear_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.UpdateArrayRequest.clear_name)
}

// -------------------------------------------------------------------

// MasterRequest

// required .presto.MasterRequest.Type type = 1;
inline bool MasterRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MasterRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MasterRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MasterRequest::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::presto::MasterRequest_Type MasterRequest::type() const {
  // @@protoc_insertion_point(field_get:presto.MasterRequest.type)
  return static_cast< ::presto::MasterRequest_Type >(type_);
}
inline void MasterRequest::set_type(::presto::MasterRequest_Type value) {
  assert(::presto::MasterRequest_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:presto.MasterRequest.type)
}

// optional .presto.UpdateArrayRequest update = 2;
inline bool MasterRequest::has_update() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MasterRequest::set_has_update() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MasterRequest::clear_has_update() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MasterRequest::clear_update() {
  if (update_ != NULL) update_->::presto::UpdateArrayRequest::Clear();
  clear_has_update();
}
inline const ::presto::UpdateArrayRequest& MasterRequest::update() const {
  // @@protoc_insertion_point(field_get:presto.MasterRequest.update)
  return update_ != NULL ? *update_ : *default_instance_->update_;
}
inline ::presto::UpdateArrayRequest* MasterRequest::mutable_update() {
  set_has_update();
  if (update_ == NULL) update_ = new ::presto::UpdateArrayRequest;
  // @@protoc_insertion_point(field_mutable:presto.MasterRequest.update)
  return update_;
}
inline ::presto::UpdateArrayRequest* MasterRequest::release_update() {
  clear_has_update();
  ::presto::UpdateArrayRequest* temp = update_;
  update_ = NULL;
  return temp;
}
inline void MasterRequest::set_allocated_update(::presto::UpdateArrayRequest* update) {
  delete update_;
  update_ = update;
  if (update) {
    set_has_update();
  } else {
    clear_has_update();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.MasterRequest.update)
}

// optional .presto.NewUpdateRequest newupdate = 3;
inline bool MasterRequest::has_newupdate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MasterRequest::set_has_newupdate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MasterRequest::clear_has_newupdate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MasterRequest::clear_newupdate() {
  if (newupdate_ != NULL) newupdate_->::presto::NewUpdateRequest::Clear();
  clear_has_newupdate();
}
inline const ::presto::NewUpdateRequest& MasterRequest::newupdate() const {
  // @@protoc_insertion_point(field_get:presto.MasterRequest.newupdate)
  return newupdate_ != NULL ? *newupdate_ : *default_instance_->newupdate_;
}
inline ::presto::NewUpdateRequest* MasterRequest::mutable_newupdate() {
  set_has_newupdate();
  if (newupdate_ == NULL) newupdate_ = new ::presto::NewUpdateRequest;
  // @@protoc_insertion_point(field_mutable:presto.MasterRequest.newupdate)
  return newupdate_;
}
inline ::presto::NewUpdateRequest* MasterRequest::release_newupdate() {
  clear_has_newupdate();
  ::presto::NewUpdateRequest* temp = newupdate_;
  newupdate_ = NULL;
  return temp;
}
inline void MasterRequest::set_allocated_newupdate(::presto::NewUpdateRequest* newupdate) {
  delete newupdate_;
  newupdate_ = newupdate;
  if (newupdate) {
    set_has_newupdate();
  } else {
    clear_has_newupdate();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.MasterRequest.newupdate)
}

// optional .presto.TaskDoneRequest taskdone = 4;
inline bool MasterRequest::has_taskdone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MasterRequest::set_has_taskdone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MasterRequest::clear_has_taskdone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MasterRequest::clear_taskdone() {
  if (taskdone_ != NULL) taskdone_->::presto::TaskDoneRequest::Clear();
  clear_has_taskdone();
}
inline const ::presto::TaskDoneRequest& MasterRequest::taskdone() const {
  // @@protoc_insertion_point(field_get:presto.MasterRequest.taskdone)
  return taskdone_ != NULL ? *taskdone_ : *default_instance_->taskdone_;
}
inline ::presto::TaskDoneRequest* MasterRequest::mutable_taskdone() {
  set_has_taskdone();
  if (taskdone_ == NULL) taskdone_ = new ::presto::TaskDoneRequest;
  // @@protoc_insertion_point(field_mutable:presto.MasterRequest.taskdone)
  return taskdone_;
}
inline ::presto::TaskDoneRequest* MasterRequest::release_taskdone() {
  clear_has_taskdone();
  ::presto::TaskDoneRequest* temp = taskdone_;
  taskdone_ = NULL;
  return temp;
}
inline void MasterRequest::set_allocated_taskdone(::presto::TaskDoneRequest* taskdone) {
  delete taskdone_;
  taskdone_ = taskdone;
  if (taskdone) {
    set_has_taskdone();
  } else {
    clear_has_taskdone();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.MasterRequest.taskdone)
}

// optional .presto.HelloReplyRequest helloreply = 5;
inline bool MasterRequest::has_helloreply() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MasterRequest::set_has_helloreply() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MasterRequest::clear_has_helloreply() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MasterRequest::clear_helloreply() {
  if (helloreply_ != NULL) helloreply_->::presto::HelloReplyRequest::Clear();
  clear_has_helloreply();
}
inline const ::presto::HelloReplyRequest& MasterRequest::helloreply() const {
  // @@protoc_insertion_point(field_get:presto.MasterRequest.helloreply)
  return helloreply_ != NULL ? *helloreply_ : *default_instance_->helloreply_;
}
inline ::presto::HelloReplyRequest* MasterRequest::mutable_helloreply() {
  set_has_helloreply();
  if (helloreply_ == NULL) helloreply_ = new ::presto::HelloReplyRequest;
  // @@protoc_insertion_point(field_mutable:presto.MasterRequest.helloreply)
  return helloreply_;
}
inline ::presto::HelloReplyRequest* MasterRequest::release_helloreply() {
  clear_has_helloreply();
  ::presto::HelloReplyRequest* temp = helloreply_;
  helloreply_ = NULL;
  return temp;
}
inline void MasterRequest::set_allocated_helloreply(::presto::HelloReplyRequest* helloreply) {
  delete helloreply_;
  helloreply_ = helloreply;
  if (helloreply) {
    set_has_helloreply();
  } else {
    clear_has_helloreply();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.MasterRequest.helloreply)
}

// optional .presto.WorkerAbortRequest workerabort = 6;
inline bool MasterRequest::has_workerabort() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MasterRequest::set_has_workerabort() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MasterRequest::clear_has_workerabort() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MasterRequest::clear_workerabort() {
  if (workerabort_ != NULL) workerabort_->::presto::WorkerAbortRequest::Clear();
  clear_has_workerabort();
}
inline const ::presto::WorkerAbortRequest& MasterRequest::workerabort() const {
  // @@protoc_insertion_point(field_get:presto.MasterRequest.workerabort)
  return workerabort_ != NULL ? *workerabort_ : *default_instance_->workerabort_;
}
inline ::presto::WorkerAbortRequest* MasterRequest::mutable_workerabort() {
  set_has_workerabort();
  if (workerabort_ == NULL) workerabort_ = new ::presto::WorkerAbortRequest;
  // @@protoc_insertion_point(field_mutable:presto.MasterRequest.workerabort)
  return workerabort_;
}
inline ::presto::WorkerAbortRequest* MasterRequest::release_workerabort() {
  clear_has_workerabort();
  ::presto::WorkerAbortRequest* temp = workerabort_;
  workerabort_ = NULL;
  return temp;
}
inline void MasterRequest::set_allocated_workerabort(::presto::WorkerAbortRequest* workerabort) {
  delete workerabort_;
  workerabort_ = workerabort;
  if (workerabort) {
    set_has_workerabort();
  } else {
    clear_has_workerabort();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.MasterRequest.workerabort)
}

// -------------------------------------------------------------------

// NewUpdateRequest

// required string name = 1;
inline bool NewUpdateRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewUpdateRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewUpdateRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewUpdateRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& NewUpdateRequest::name() const {
  // @@protoc_insertion_point(field_get:presto.NewUpdateRequest.name)
  return *name_;
}
inline void NewUpdateRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:presto.NewUpdateRequest.name)
}
inline void NewUpdateRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.NewUpdateRequest.name)
}
inline void NewUpdateRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.NewUpdateRequest.name)
}
inline ::std::string* NewUpdateRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.NewUpdateRequest.name)
  return name_;
}
inline ::std::string* NewUpdateRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NewUpdateRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.NewUpdateRequest.name)
}

// required .presto.ServerInfo location = 2;
inline bool NewUpdateRequest::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewUpdateRequest::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewUpdateRequest::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewUpdateRequest::clear_location() {
  if (location_ != NULL) location_->::presto::ServerInfo::Clear();
  clear_has_location();
}
inline const ::presto::ServerInfo& NewUpdateRequest::location() const {
  // @@protoc_insertion_point(field_get:presto.NewUpdateRequest.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::presto::ServerInfo* NewUpdateRequest::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::presto::ServerInfo;
  // @@protoc_insertion_point(field_mutable:presto.NewUpdateRequest.location)
  return location_;
}
inline ::presto::ServerInfo* NewUpdateRequest::release_location() {
  clear_has_location();
  ::presto::ServerInfo* temp = location_;
  location_ = NULL;
  return temp;
}
inline void NewUpdateRequest::set_allocated_location(::presto::ServerInfo* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.NewUpdateRequest.location)
}

// required int64 size = 3;
inline bool NewUpdateRequest::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewUpdateRequest::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewUpdateRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewUpdateRequest::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::int64 NewUpdateRequest::size() const {
  // @@protoc_insertion_point(field_get:presto.NewUpdateRequest.size)
  return size_;
}
inline void NewUpdateRequest::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:presto.NewUpdateRequest.size)
}

// required int64 row_dim = 4;
inline bool NewUpdateRequest::has_row_dim() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewUpdateRequest::set_has_row_dim() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewUpdateRequest::clear_has_row_dim() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewUpdateRequest::clear_row_dim() {
  row_dim_ = GOOGLE_LONGLONG(0);
  clear_has_row_dim();
}
inline ::google::protobuf::int64 NewUpdateRequest::row_dim() const {
  // @@protoc_insertion_point(field_get:presto.NewUpdateRequest.row_dim)
  return row_dim_;
}
inline void NewUpdateRequest::set_row_dim(::google::protobuf::int64 value) {
  set_has_row_dim();
  row_dim_ = value;
  // @@protoc_insertion_point(field_set:presto.NewUpdateRequest.row_dim)
}

// required int64 col_dim = 5;
inline bool NewUpdateRequest::has_col_dim() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewUpdateRequest::set_has_col_dim() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewUpdateRequest::clear_has_col_dim() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewUpdateRequest::clear_col_dim() {
  col_dim_ = GOOGLE_LONGLONG(0);
  clear_has_col_dim();
}
inline ::google::protobuf::int64 NewUpdateRequest::col_dim() const {
  // @@protoc_insertion_point(field_get:presto.NewUpdateRequest.col_dim)
  return col_dim_;
}
inline void NewUpdateRequest::set_col_dim(::google::protobuf::int64 value) {
  set_has_col_dim();
  col_dim_ = value;
  // @@protoc_insertion_point(field_set:presto.NewUpdateRequest.col_dim)
}

// -------------------------------------------------------------------

// TaskDoneRequest

// required int64 id = 1;
inline bool TaskDoneRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskDoneRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskDoneRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskDoneRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 TaskDoneRequest::id() const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.id)
  return id_;
}
inline void TaskDoneRequest::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.id)
}

// repeated string update_names = 2;
inline int TaskDoneRequest::update_names_size() const {
  return update_names_.size();
}
inline void TaskDoneRequest::clear_update_names() {
  update_names_.Clear();
}
inline const ::std::string& TaskDoneRequest::update_names(int index) const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.update_names)
  return update_names_.Get(index);
}
inline ::std::string* TaskDoneRequest::mutable_update_names(int index) {
  // @@protoc_insertion_point(field_mutable:presto.TaskDoneRequest.update_names)
  return update_names_.Mutable(index);
}
inline void TaskDoneRequest::set_update_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.update_names)
  update_names_.Mutable(index)->assign(value);
}
inline void TaskDoneRequest::set_update_names(int index, const char* value) {
  update_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.TaskDoneRequest.update_names)
}
inline void TaskDoneRequest::set_update_names(int index, const char* value, size_t size) {
  update_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.TaskDoneRequest.update_names)
}
inline ::std::string* TaskDoneRequest::add_update_names() {
  return update_names_.Add();
}
inline void TaskDoneRequest::add_update_names(const ::std::string& value) {
  update_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:presto.TaskDoneRequest.update_names)
}
inline void TaskDoneRequest::add_update_names(const char* value) {
  update_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:presto.TaskDoneRequest.update_names)
}
inline void TaskDoneRequest::add_update_names(const char* value, size_t size) {
  update_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:presto.TaskDoneRequest.update_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TaskDoneRequest::update_names() const {
  // @@protoc_insertion_point(field_list:presto.TaskDoneRequest.update_names)
  return update_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TaskDoneRequest::mutable_update_names() {
  // @@protoc_insertion_point(field_mutable_list:presto.TaskDoneRequest.update_names)
  return &update_names_;
}

// repeated int64 update_sizes = 3;
inline int TaskDoneRequest::update_sizes_size() const {
  return update_sizes_.size();
}
inline void TaskDoneRequest::clear_update_sizes() {
  update_sizes_.Clear();
}
inline ::google::protobuf::int64 TaskDoneRequest::update_sizes(int index) const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.update_sizes)
  return update_sizes_.Get(index);
}
inline void TaskDoneRequest::set_update_sizes(int index, ::google::protobuf::int64 value) {
  update_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.update_sizes)
}
inline void TaskDoneRequest::add_update_sizes(::google::protobuf::int64 value) {
  update_sizes_.Add(value);
  // @@protoc_insertion_point(field_add:presto.TaskDoneRequest.update_sizes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TaskDoneRequest::update_sizes() const {
  // @@protoc_insertion_point(field_list:presto.TaskDoneRequest.update_sizes)
  return update_sizes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TaskDoneRequest::mutable_update_sizes() {
  // @@protoc_insertion_point(field_mutable_list:presto.TaskDoneRequest.update_sizes)
  return &update_sizes_;
}

// required .presto.ServerInfo location = 4;
inline bool TaskDoneRequest::has_location() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TaskDoneRequest::set_has_location() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TaskDoneRequest::clear_has_location() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TaskDoneRequest::clear_location() {
  if (location_ != NULL) location_->::presto::ServerInfo::Clear();
  clear_has_location();
}
inline const ::presto::ServerInfo& TaskDoneRequest::location() const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::presto::ServerInfo* TaskDoneRequest::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::presto::ServerInfo;
  // @@protoc_insertion_point(field_mutable:presto.TaskDoneRequest.location)
  return location_;
}
inline ::presto::ServerInfo* TaskDoneRequest::release_location() {
  clear_has_location();
  ::presto::ServerInfo* temp = location_;
  location_ = NULL;
  return temp;
}
inline void TaskDoneRequest::set_allocated_location(::presto::ServerInfo* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.TaskDoneRequest.location)
}

// repeated string update_stores = 5;
inline int TaskDoneRequest::update_stores_size() const {
  return update_stores_.size();
}
inline void TaskDoneRequest::clear_update_stores() {
  update_stores_.Clear();
}
inline const ::std::string& TaskDoneRequest::update_stores(int index) const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.update_stores)
  return update_stores_.Get(index);
}
inline ::std::string* TaskDoneRequest::mutable_update_stores(int index) {
  // @@protoc_insertion_point(field_mutable:presto.TaskDoneRequest.update_stores)
  return update_stores_.Mutable(index);
}
inline void TaskDoneRequest::set_update_stores(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.update_stores)
  update_stores_.Mutable(index)->assign(value);
}
inline void TaskDoneRequest::set_update_stores(int index, const char* value) {
  update_stores_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.TaskDoneRequest.update_stores)
}
inline void TaskDoneRequest::set_update_stores(int index, const char* value, size_t size) {
  update_stores_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.TaskDoneRequest.update_stores)
}
inline ::std::string* TaskDoneRequest::add_update_stores() {
  return update_stores_.Add();
}
inline void TaskDoneRequest::add_update_stores(const ::std::string& value) {
  update_stores_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:presto.TaskDoneRequest.update_stores)
}
inline void TaskDoneRequest::add_update_stores(const char* value) {
  update_stores_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:presto.TaskDoneRequest.update_stores)
}
inline void TaskDoneRequest::add_update_stores(const char* value, size_t size) {
  update_stores_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:presto.TaskDoneRequest.update_stores)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TaskDoneRequest::update_stores() const {
  // @@protoc_insertion_point(field_list:presto.TaskDoneRequest.update_stores)
  return update_stores_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TaskDoneRequest::mutable_update_stores() {
  // @@protoc_insertion_point(field_mutable_list:presto.TaskDoneRequest.update_stores)
  return &update_stores_;
}

// repeated bool update_empties = 6;
inline int TaskDoneRequest::update_empties_size() const {
  return update_empties_.size();
}
inline void TaskDoneRequest::clear_update_empties() {
  update_empties_.Clear();
}
inline bool TaskDoneRequest::update_empties(int index) const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.update_empties)
  return update_empties_.Get(index);
}
inline void TaskDoneRequest::set_update_empties(int index, bool value) {
  update_empties_.Set(index, value);
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.update_empties)
}
inline void TaskDoneRequest::add_update_empties(bool value) {
  update_empties_.Add(value);
  // @@protoc_insertion_point(field_add:presto.TaskDoneRequest.update_empties)
}
inline const ::google::protobuf::RepeatedField< bool >&
TaskDoneRequest::update_empties() const {
  // @@protoc_insertion_point(field_list:presto.TaskDoneRequest.update_empties)
  return update_empties_;
}
inline ::google::protobuf::RepeatedField< bool >*
TaskDoneRequest::mutable_update_empties() {
  // @@protoc_insertion_point(field_mutable_list:presto.TaskDoneRequest.update_empties)
  return &update_empties_;
}

// required int64 uid = 7;
inline bool TaskDoneRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TaskDoneRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TaskDoneRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TaskDoneRequest::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 TaskDoneRequest::uid() const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.uid)
  return uid_;
}
inline void TaskDoneRequest::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.uid)
}

// optional int64 mem_used = 8;
inline bool TaskDoneRequest::has_mem_used() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TaskDoneRequest::set_has_mem_used() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TaskDoneRequest::clear_has_mem_used() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TaskDoneRequest::clear_mem_used() {
  mem_used_ = GOOGLE_LONGLONG(0);
  clear_has_mem_used();
}
inline ::google::protobuf::int64 TaskDoneRequest::mem_used() const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.mem_used)
  return mem_used_;
}
inline void TaskDoneRequest::set_mem_used(::google::protobuf::int64 value) {
  set_has_mem_used();
  mem_used_ = value;
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.mem_used)
}

// optional string task_message = 9;
inline bool TaskDoneRequest::has_task_message() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TaskDoneRequest::set_has_task_message() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TaskDoneRequest::clear_has_task_message() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TaskDoneRequest::clear_task_message() {
  if (task_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    task_message_->clear();
  }
  clear_has_task_message();
}
inline const ::std::string& TaskDoneRequest::task_message() const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.task_message)
  return *task_message_;
}
inline void TaskDoneRequest::set_task_message(const ::std::string& value) {
  set_has_task_message();
  if (task_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    task_message_ = new ::std::string;
  }
  task_message_->assign(value);
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.task_message)
}
inline void TaskDoneRequest::set_task_message(const char* value) {
  set_has_task_message();
  if (task_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    task_message_ = new ::std::string;
  }
  task_message_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.TaskDoneRequest.task_message)
}
inline void TaskDoneRequest::set_task_message(const char* value, size_t size) {
  set_has_task_message();
  if (task_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    task_message_ = new ::std::string;
  }
  task_message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.TaskDoneRequest.task_message)
}
inline ::std::string* TaskDoneRequest::mutable_task_message() {
  set_has_task_message();
  if (task_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    task_message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.TaskDoneRequest.task_message)
  return task_message_;
}
inline ::std::string* TaskDoneRequest::release_task_message() {
  clear_has_task_message();
  if (task_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = task_message_;
    task_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TaskDoneRequest::set_allocated_task_message(::std::string* task_message) {
  if (task_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete task_message_;
  }
  if (task_message) {
    set_has_task_message();
    task_message_ = task_message;
  } else {
    clear_has_task_message();
    task_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.TaskDoneRequest.task_message)
}

// optional int64 task_result = 10;
inline bool TaskDoneRequest::has_task_result() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TaskDoneRequest::set_has_task_result() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TaskDoneRequest::clear_has_task_result() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TaskDoneRequest::clear_task_result() {
  task_result_ = GOOGLE_LONGLONG(0);
  clear_has_task_result();
}
inline ::google::protobuf::int64 TaskDoneRequest::task_result() const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.task_result)
  return task_result_;
}
inline void TaskDoneRequest::set_task_result(::google::protobuf::int64 value) {
  set_has_task_result();
  task_result_ = value;
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.task_result)
}

// repeated int64 row_dim = 11;
inline int TaskDoneRequest::row_dim_size() const {
  return row_dim_.size();
}
inline void TaskDoneRequest::clear_row_dim() {
  row_dim_.Clear();
}
inline ::google::protobuf::int64 TaskDoneRequest::row_dim(int index) const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.row_dim)
  return row_dim_.Get(index);
}
inline void TaskDoneRequest::set_row_dim(int index, ::google::protobuf::int64 value) {
  row_dim_.Set(index, value);
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.row_dim)
}
inline void TaskDoneRequest::add_row_dim(::google::protobuf::int64 value) {
  row_dim_.Add(value);
  // @@protoc_insertion_point(field_add:presto.TaskDoneRequest.row_dim)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TaskDoneRequest::row_dim() const {
  // @@protoc_insertion_point(field_list:presto.TaskDoneRequest.row_dim)
  return row_dim_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TaskDoneRequest::mutable_row_dim() {
  // @@protoc_insertion_point(field_mutable_list:presto.TaskDoneRequest.row_dim)
  return &row_dim_;
}

// repeated int64 col_dim = 12;
inline int TaskDoneRequest::col_dim_size() const {
  return col_dim_.size();
}
inline void TaskDoneRequest::clear_col_dim() {
  col_dim_.Clear();
}
inline ::google::protobuf::int64 TaskDoneRequest::col_dim(int index) const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.col_dim)
  return col_dim_.Get(index);
}
inline void TaskDoneRequest::set_col_dim(int index, ::google::protobuf::int64 value) {
  col_dim_.Set(index, value);
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.col_dim)
}
inline void TaskDoneRequest::add_col_dim(::google::protobuf::int64 value) {
  col_dim_.Add(value);
  // @@protoc_insertion_point(field_add:presto.TaskDoneRequest.col_dim)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TaskDoneRequest::col_dim() const {
  // @@protoc_insertion_point(field_list:presto.TaskDoneRequest.col_dim)
  return col_dim_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TaskDoneRequest::mutable_col_dim() {
  // @@protoc_insertion_point(field_mutable_list:presto.TaskDoneRequest.col_dim)
  return &col_dim_;
}

// optional int64 npartitions = 13;
inline bool TaskDoneRequest::has_npartitions() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TaskDoneRequest::set_has_npartitions() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TaskDoneRequest::clear_has_npartitions() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TaskDoneRequest::clear_npartitions() {
  npartitions_ = GOOGLE_LONGLONG(0);
  clear_has_npartitions();
}
inline ::google::protobuf::int64 TaskDoneRequest::npartitions() const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.npartitions)
  return npartitions_;
}
inline void TaskDoneRequest::set_npartitions(::google::protobuf::int64 value) {
  set_has_npartitions();
  npartitions_ = value;
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.npartitions)
}

// optional int32 loader_port = 14;
inline bool TaskDoneRequest::has_loader_port() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TaskDoneRequest::set_has_loader_port() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TaskDoneRequest::clear_has_loader_port() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TaskDoneRequest::clear_loader_port() {
  loader_port_ = 0;
  clear_has_loader_port();
}
inline ::google::protobuf::int32 TaskDoneRequest::loader_port() const {
  // @@protoc_insertion_point(field_get:presto.TaskDoneRequest.loader_port)
  return loader_port_;
}
inline void TaskDoneRequest::set_loader_port(::google::protobuf::int32 value) {
  set_has_loader_port();
  loader_port_ = value;
  // @@protoc_insertion_point(field_set:presto.TaskDoneRequest.loader_port)
}

// -------------------------------------------------------------------

// ArrayStoreData

// required int64 size = 1;
inline bool ArrayStoreData::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArrayStoreData::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArrayStoreData::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArrayStoreData::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::int64 ArrayStoreData::size() const {
  // @@protoc_insertion_point(field_get:presto.ArrayStoreData.size)
  return size_;
}
inline void ArrayStoreData::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:presto.ArrayStoreData.size)
}

// required string name = 2;
inline bool ArrayStoreData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArrayStoreData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArrayStoreData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArrayStoreData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ArrayStoreData::name() const {
  // @@protoc_insertion_point(field_get:presto.ArrayStoreData.name)
  return *name_;
}
inline void ArrayStoreData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:presto.ArrayStoreData.name)
}
inline void ArrayStoreData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.ArrayStoreData.name)
}
inline void ArrayStoreData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.ArrayStoreData.name)
}
inline ::std::string* ArrayStoreData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.ArrayStoreData.name)
  return name_;
}
inline ::std::string* ArrayStoreData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ArrayStoreData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.ArrayStoreData.name)
}

// required .presto.ServerInfo location = 3;
inline bool ArrayStoreData::has_location() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArrayStoreData::set_has_location() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArrayStoreData::clear_has_location() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArrayStoreData::clear_location() {
  if (location_ != NULL) location_->::presto::ServerInfo::Clear();
  clear_has_location();
}
inline const ::presto::ServerInfo& ArrayStoreData::location() const {
  // @@protoc_insertion_point(field_get:presto.ArrayStoreData.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::presto::ServerInfo* ArrayStoreData::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::presto::ServerInfo;
  // @@protoc_insertion_point(field_mutable:presto.ArrayStoreData.location)
  return location_;
}
inline ::presto::ServerInfo* ArrayStoreData::release_location() {
  clear_has_location();
  ::presto::ServerInfo* temp = location_;
  location_ = NULL;
  return temp;
}
inline void ArrayStoreData::set_allocated_location(::presto::ServerInfo* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.ArrayStoreData.location)
}

// -------------------------------------------------------------------

// HelloReplyRequest

// required .presto.ServerInfo location = 1;
inline bool HelloReplyRequest::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HelloReplyRequest::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HelloReplyRequest::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HelloReplyRequest::clear_location() {
  if (location_ != NULL) location_->::presto::ServerInfo::Clear();
  clear_has_location();
}
inline const ::presto::ServerInfo& HelloReplyRequest::location() const {
  // @@protoc_insertion_point(field_get:presto.HelloReplyRequest.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::presto::ServerInfo* HelloReplyRequest::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::presto::ServerInfo;
  // @@protoc_insertion_point(field_mutable:presto.HelloReplyRequest.location)
  return location_;
}
inline ::presto::ServerInfo* HelloReplyRequest::release_location() {
  clear_has_location();
  ::presto::ServerInfo* temp = location_;
  location_ = NULL;
  return temp;
}
inline void HelloReplyRequest::set_allocated_location(::presto::ServerInfo* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.HelloReplyRequest.location)
}

// optional int64 shared_memory = 2;
inline bool HelloReplyRequest::has_shared_memory() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HelloReplyRequest::set_has_shared_memory() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HelloReplyRequest::clear_has_shared_memory() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HelloReplyRequest::clear_shared_memory() {
  shared_memory_ = GOOGLE_LONGLONG(0);
  clear_has_shared_memory();
}
inline ::google::protobuf::int64 HelloReplyRequest::shared_memory() const {
  // @@protoc_insertion_point(field_get:presto.HelloReplyRequest.shared_memory)
  return shared_memory_;
}
inline void HelloReplyRequest::set_shared_memory(::google::protobuf::int64 value) {
  set_has_shared_memory();
  shared_memory_ = value;
  // @@protoc_insertion_point(field_set:presto.HelloReplyRequest.shared_memory)
}

// optional int32 executors = 3;
inline bool HelloReplyRequest::has_executors() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HelloReplyRequest::set_has_executors() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HelloReplyRequest::clear_has_executors() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HelloReplyRequest::clear_executors() {
  executors_ = 0;
  clear_has_executors();
}
inline ::google::protobuf::int32 HelloReplyRequest::executors() const {
  // @@protoc_insertion_point(field_get:presto.HelloReplyRequest.executors)
  return executors_;
}
inline void HelloReplyRequest::set_executors(::google::protobuf::int32 value) {
  set_has_executors();
  executors_ = value;
  // @@protoc_insertion_point(field_set:presto.HelloReplyRequest.executors)
}

// repeated .presto.ArrayStoreData array_stores = 4;
inline int HelloReplyRequest::array_stores_size() const {
  return array_stores_.size();
}
inline void HelloReplyRequest::clear_array_stores() {
  array_stores_.Clear();
}
inline const ::presto::ArrayStoreData& HelloReplyRequest::array_stores(int index) const {
  // @@protoc_insertion_point(field_get:presto.HelloReplyRequest.array_stores)
  return array_stores_.Get(index);
}
inline ::presto::ArrayStoreData* HelloReplyRequest::mutable_array_stores(int index) {
  // @@protoc_insertion_point(field_mutable:presto.HelloReplyRequest.array_stores)
  return array_stores_.Mutable(index);
}
inline ::presto::ArrayStoreData* HelloReplyRequest::add_array_stores() {
  // @@protoc_insertion_point(field_add:presto.HelloReplyRequest.array_stores)
  return array_stores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::presto::ArrayStoreData >&
HelloReplyRequest::array_stores() const {
  // @@protoc_insertion_point(field_list:presto.HelloReplyRequest.array_stores)
  return array_stores_;
}
inline ::google::protobuf::RepeatedPtrField< ::presto::ArrayStoreData >*
HelloReplyRequest::mutable_array_stores() {
  // @@protoc_insertion_point(field_mutable_list:presto.HelloReplyRequest.array_stores)
  return &array_stores_;
}

// optional int64 mem_total = 5 [default = 0];
inline bool HelloReplyRequest::has_mem_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HelloReplyRequest::set_has_mem_total() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HelloReplyRequest::clear_has_mem_total() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HelloReplyRequest::clear_mem_total() {
  mem_total_ = GOOGLE_LONGLONG(0);
  clear_has_mem_total();
}
inline ::google::protobuf::int64 HelloReplyRequest::mem_total() const {
  // @@protoc_insertion_point(field_get:presto.HelloReplyRequest.mem_total)
  return mem_total_;
}
inline void HelloReplyRequest::set_mem_total(::google::protobuf::int64 value) {
  set_has_mem_total();
  mem_total_ = value;
  // @@protoc_insertion_point(field_set:presto.HelloReplyRequest.mem_total)
}

// optional int64 mem_used = 6 [default = 0];
inline bool HelloReplyRequest::has_mem_used() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HelloReplyRequest::set_has_mem_used() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HelloReplyRequest::clear_has_mem_used() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HelloReplyRequest::clear_mem_used() {
  mem_used_ = GOOGLE_LONGLONG(0);
  clear_has_mem_used();
}
inline ::google::protobuf::int64 HelloReplyRequest::mem_used() const {
  // @@protoc_insertion_point(field_get:presto.HelloReplyRequest.mem_used)
  return mem_used_;
}
inline void HelloReplyRequest::set_mem_used(::google::protobuf::int64 value) {
  set_has_mem_used();
  mem_used_ = value;
  // @@protoc_insertion_point(field_set:presto.HelloReplyRequest.mem_used)
}

// optional bool is_heartbeat = 7 [default = false];
inline bool HelloReplyRequest::has_is_heartbeat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HelloReplyRequest::set_has_is_heartbeat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HelloReplyRequest::clear_has_is_heartbeat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HelloReplyRequest::clear_is_heartbeat() {
  is_heartbeat_ = false;
  clear_has_is_heartbeat();
}
inline bool HelloReplyRequest::is_heartbeat() const {
  // @@protoc_insertion_point(field_get:presto.HelloReplyRequest.is_heartbeat)
  return is_heartbeat_;
}
inline void HelloReplyRequest::set_is_heartbeat(bool value) {
  set_has_is_heartbeat();
  is_heartbeat_ = value;
  // @@protoc_insertion_point(field_set:presto.HelloReplyRequest.is_heartbeat)
}

// -------------------------------------------------------------------

// WorkerAbortRequest

// required .presto.ServerInfo location = 1;
inline bool WorkerAbortRequest::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkerAbortRequest::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkerAbortRequest::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkerAbortRequest::clear_location() {
  if (location_ != NULL) location_->::presto::ServerInfo::Clear();
  clear_has_location();
}
inline const ::presto::ServerInfo& WorkerAbortRequest::location() const {
  // @@protoc_insertion_point(field_get:presto.WorkerAbortRequest.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::presto::ServerInfo* WorkerAbortRequest::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::presto::ServerInfo;
  // @@protoc_insertion_point(field_mutable:presto.WorkerAbortRequest.location)
  return location_;
}
inline ::presto::ServerInfo* WorkerAbortRequest::release_location() {
  clear_has_location();
  ::presto::ServerInfo* temp = location_;
  location_ = NULL;
  return temp;
}
inline void WorkerAbortRequest::set_allocated_location(::presto::ServerInfo* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerAbortRequest.location)
}

// required string reason = 2;
inline bool WorkerAbortRequest::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkerAbortRequest::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkerAbortRequest::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkerAbortRequest::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& WorkerAbortRequest::reason() const {
  // @@protoc_insertion_point(field_get:presto.WorkerAbortRequest.reason)
  return *reason_;
}
inline void WorkerAbortRequest::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:presto.WorkerAbortRequest.reason)
}
inline void WorkerAbortRequest::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:presto.WorkerAbortRequest.reason)
}
inline void WorkerAbortRequest::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:presto.WorkerAbortRequest.reason)
}
inline ::std::string* WorkerAbortRequest::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:presto.WorkerAbortRequest.reason)
  return reason_;
}
inline ::std::string* WorkerAbortRequest::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WorkerAbortRequest::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:presto.WorkerAbortRequest.reason)
}

// optional int64 shared_memory = 3;
inline bool WorkerAbortRequest::has_shared_memory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorkerAbortRequest::set_has_shared_memory() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorkerAbortRequest::clear_has_shared_memory() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorkerAbortRequest::clear_shared_memory() {
  shared_memory_ = GOOGLE_LONGLONG(0);
  clear_has_shared_memory();
}
inline ::google::protobuf::int64 WorkerAbortRequest::shared_memory() const {
  // @@protoc_insertion_point(field_get:presto.WorkerAbortRequest.shared_memory)
  return shared_memory_;
}
inline void WorkerAbortRequest::set_shared_memory(::google::protobuf::int64 value) {
  set_has_shared_memory();
  shared_memory_ = value;
  // @@protoc_insertion_point(field_set:presto.WorkerAbortRequest.shared_memory)
}

// optional int32 executors = 4;
inline bool WorkerAbortRequest::has_executors() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorkerAbortRequest::set_has_executors() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorkerAbortRequest::clear_has_executors() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorkerAbortRequest::clear_executors() {
  executors_ = 0;
  clear_has_executors();
}
inline ::google::protobuf::int32 WorkerAbortRequest::executors() const {
  // @@protoc_insertion_point(field_get:presto.WorkerAbortRequest.executors)
  return executors_;
}
inline void WorkerAbortRequest::set_executors(::google::protobuf::int32 value) {
  set_has_executors();
  executors_ = value;
  // @@protoc_insertion_point(field_set:presto.WorkerAbortRequest.executors)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace presto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::presto::MasterRequest_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::presto::MasterRequest_Type>() {
  return ::presto::MasterRequest_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_master_2eproto__INCLUDED
