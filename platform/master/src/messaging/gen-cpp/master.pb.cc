// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "master.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace presto {

namespace {

const ::google::protobuf::Descriptor* UpdateArrayRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateArrayRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MasterRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MasterRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MasterRequest_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* NewUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskDoneRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskDoneRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ArrayStoreData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArrayStoreData_reflection_ = NULL;
const ::google::protobuf::Descriptor* HelloReplyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HelloReplyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* WorkerAbortRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorkerAbortRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_master_2eproto() {
  protobuf_AddDesc_master_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "master.proto");
  GOOGLE_CHECK(file != NULL);
  UpdateArrayRequest_descriptor_ = file->message_type(0);
  static const int UpdateArrayRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateArrayRequest, array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateArrayRequest, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateArrayRequest, clear_name_),
  };
  UpdateArrayRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateArrayRequest_descriptor_,
      UpdateArrayRequest::default_instance_,
      UpdateArrayRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateArrayRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateArrayRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateArrayRequest));
  MasterRequest_descriptor_ = file->message_type(1);
  static const int MasterRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterRequest, update_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterRequest, newupdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterRequest, taskdone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterRequest, helloreply_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterRequest, workerabort_),
  };
  MasterRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MasterRequest_descriptor_,
      MasterRequest::default_instance_,
      MasterRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MasterRequest));
  MasterRequest_Type_descriptor_ = MasterRequest_descriptor_->enum_type(0);
  NewUpdateRequest_descriptor_ = file->message_type(2);
  static const int NewUpdateRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUpdateRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUpdateRequest, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUpdateRequest, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUpdateRequest, row_dim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUpdateRequest, col_dim_),
  };
  NewUpdateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewUpdateRequest_descriptor_,
      NewUpdateRequest::default_instance_,
      NewUpdateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUpdateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewUpdateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewUpdateRequest));
  TaskDoneRequest_descriptor_ = file->message_type(3);
  static const int TaskDoneRequest_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, update_names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, update_sizes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, update_stores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, update_empties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, mem_used_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, task_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, task_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, row_dim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, col_dim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, npartitions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, loader_port_),
  };
  TaskDoneRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TaskDoneRequest_descriptor_,
      TaskDoneRequest::default_instance_,
      TaskDoneRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskDoneRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TaskDoneRequest));
  ArrayStoreData_descriptor_ = file->message_type(4);
  static const int ArrayStoreData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArrayStoreData, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArrayStoreData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArrayStoreData, location_),
  };
  ArrayStoreData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ArrayStoreData_descriptor_,
      ArrayStoreData::default_instance_,
      ArrayStoreData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArrayStoreData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArrayStoreData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ArrayStoreData));
  HelloReplyRequest_descriptor_ = file->message_type(5);
  static const int HelloReplyRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReplyRequest, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReplyRequest, shared_memory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReplyRequest, executors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReplyRequest, array_stores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReplyRequest, mem_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReplyRequest, mem_used_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReplyRequest, is_heartbeat_),
  };
  HelloReplyRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HelloReplyRequest_descriptor_,
      HelloReplyRequest::default_instance_,
      HelloReplyRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReplyRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReplyRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HelloReplyRequest));
  WorkerAbortRequest_descriptor_ = file->message_type(6);
  static const int WorkerAbortRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAbortRequest, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAbortRequest, reason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAbortRequest, shared_memory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAbortRequest, executors_),
  };
  WorkerAbortRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WorkerAbortRequest_descriptor_,
      WorkerAbortRequest::default_instance_,
      WorkerAbortRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAbortRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAbortRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WorkerAbortRequest));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_master_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateArrayRequest_descriptor_, &UpdateArrayRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MasterRequest_descriptor_, &MasterRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewUpdateRequest_descriptor_, &NewUpdateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TaskDoneRequest_descriptor_, &TaskDoneRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ArrayStoreData_descriptor_, &ArrayStoreData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HelloReplyRequest_descriptor_, &HelloReplyRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WorkerAbortRequest_descriptor_, &WorkerAbortRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_master_2eproto() {
  delete UpdateArrayRequest::default_instance_;
  delete UpdateArrayRequest_reflection_;
  delete MasterRequest::default_instance_;
  delete MasterRequest_reflection_;
  delete NewUpdateRequest::default_instance_;
  delete NewUpdateRequest_reflection_;
  delete TaskDoneRequest::default_instance_;
  delete TaskDoneRequest_reflection_;
  delete ArrayStoreData::default_instance_;
  delete ArrayStoreData_reflection_;
  delete HelloReplyRequest::default_instance_;
  delete HelloReplyRequest_reflection_;
  delete WorkerAbortRequest::default_instance_;
  delete WorkerAbortRequest_reflection_;
}

void protobuf_AddDesc_master_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::presto::protobuf_AddDesc_shared_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014master.proto\022\006presto\032\014shared.proto\"l\n\022"
    "UpdateArrayRequest\022\034\n\005array\030\001 \002(\0132\r.pres"
    "to.Array\022$\n\010location\030\002 \002(\0132\022.presto.Serv"
    "erInfo\022\022\n\nclear_name\030\003 \002(\t\"\375\002\n\rMasterReq"
    "uest\022(\n\004type\030\001 \002(\0162\032.presto.MasterReques"
    "t.Type\022*\n\006update\030\002 \001(\0132\032.presto.UpdateAr"
    "rayRequest\022+\n\tnewupdate\030\003 \001(\0132\030.presto.N"
    "ewUpdateRequest\022)\n\010taskdone\030\004 \001(\0132\027.pres"
    "to.TaskDoneRequest\022-\n\nhelloreply\030\005 \001(\0132\031"
    ".presto.HelloReplyRequest\022/\n\013workerabort"
    "\030\006 \001(\0132\032.presto.WorkerAbortRequest\"^\n\004Ty"
    "pe\022\n\n\006UPDATE\020\001\022\r\n\tNEWUPDATE\020\002\022\014\n\010TASKDON"
    "E\020\003\022\016\n\nHELLOREPLY\020\004\022\014\n\010SHUTDOWN\020\005\022\017\n\013WOR"
    "KERABORT\020\006\"v\n\020NewUpdateRequest\022\014\n\004name\030\001"
    " \002(\t\022$\n\010location\030\002 \002(\0132\022.presto.ServerIn"
    "fo\022\014\n\004size\030\003 \002(\003\022\017\n\007row_dim\030\004 \002(\003\022\017\n\007col"
    "_dim\030\005 \002(\003\"\264\002\n\017TaskDoneRequest\022\n\n\002id\030\001 \002"
    "(\003\022\024\n\014update_names\030\002 \003(\t\022\024\n\014update_sizes"
    "\030\003 \003(\003\022$\n\010location\030\004 \002(\0132\022.presto.Server"
    "Info\022\025\n\rupdate_stores\030\005 \003(\t\022\026\n\016update_em"
    "pties\030\006 \003(\010\022\013\n\003uid\030\007 \002(\003\022\020\n\010mem_used\030\010 \001"
    "(\003\022\024\n\014task_message\030\t \001(\t\022\023\n\013task_result\030"
    "\n \001(\003\022\017\n\007row_dim\030\013 \003(\003\022\017\n\007col_dim\030\014 \003(\003\022"
    "\023\n\013npartitions\030\r \001(\003\022\023\n\013loader_port\030\016 \001("
    "\005\"R\n\016ArrayStoreData\022\014\n\004size\030\001 \002(\003\022\014\n\004nam"
    "e\030\002 \002(\t\022$\n\010location\030\003 \002(\0132\022.presto.Serve"
    "rInfo\"\331\001\n\021HelloReplyRequest\022$\n\010location\030"
    "\001 \002(\0132\022.presto.ServerInfo\022\025\n\rshared_memo"
    "ry\030\002 \001(\003\022\021\n\texecutors\030\003 \001(\005\022,\n\014array_sto"
    "res\030\004 \003(\0132\026.presto.ArrayStoreData\022\024\n\tmem"
    "_total\030\005 \001(\003:\0010\022\023\n\010mem_used\030\006 \001(\003:\0010\022\033\n\014"
    "is_heartbeat\030\007 \001(\010:\005false\"t\n\022WorkerAbort"
    "Request\022$\n\010location\030\001 \002(\0132\022.presto.Serve"
    "rInfo\022\016\n\006reason\030\002 \002(\t\022\025\n\rshared_memory\030\003"
    " \001(\003\022\021\n\texecutors\030\004 \001(\005", 1383);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "master.proto", &protobuf_RegisterTypes);
  UpdateArrayRequest::default_instance_ = new UpdateArrayRequest();
  MasterRequest::default_instance_ = new MasterRequest();
  NewUpdateRequest::default_instance_ = new NewUpdateRequest();
  TaskDoneRequest::default_instance_ = new TaskDoneRequest();
  ArrayStoreData::default_instance_ = new ArrayStoreData();
  HelloReplyRequest::default_instance_ = new HelloReplyRequest();
  WorkerAbortRequest::default_instance_ = new WorkerAbortRequest();
  UpdateArrayRequest::default_instance_->InitAsDefaultInstance();
  MasterRequest::default_instance_->InitAsDefaultInstance();
  NewUpdateRequest::default_instance_->InitAsDefaultInstance();
  TaskDoneRequest::default_instance_->InitAsDefaultInstance();
  ArrayStoreData::default_instance_->InitAsDefaultInstance();
  HelloReplyRequest::default_instance_->InitAsDefaultInstance();
  WorkerAbortRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_master_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_master_2eproto {
  StaticDescriptorInitializer_master_2eproto() {
    protobuf_AddDesc_master_2eproto();
  }
} static_descriptor_initializer_master_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int UpdateArrayRequest::kArrayFieldNumber;
const int UpdateArrayRequest::kLocationFieldNumber;
const int UpdateArrayRequest::kClearNameFieldNumber;
#endif  // !_MSC_VER

UpdateArrayRequest::UpdateArrayRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.UpdateArrayRequest)
}

void UpdateArrayRequest::InitAsDefaultInstance() {
  array_ = const_cast< ::presto::Array*>(&::presto::Array::default_instance());
  location_ = const_cast< ::presto::ServerInfo*>(&::presto::ServerInfo::default_instance());
}

UpdateArrayRequest::UpdateArrayRequest(const UpdateArrayRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.UpdateArrayRequest)
}

void UpdateArrayRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  array_ = NULL;
  location_ = NULL;
  clear_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateArrayRequest::~UpdateArrayRequest() {
  // @@protoc_insertion_point(destructor:presto.UpdateArrayRequest)
  SharedDtor();
}

void UpdateArrayRequest::SharedDtor() {
  if (clear_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete clear_name_;
  }
  if (this != default_instance_) {
    delete array_;
    delete location_;
  }
}

void UpdateArrayRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateArrayRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateArrayRequest_descriptor_;
}

const UpdateArrayRequest& UpdateArrayRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

UpdateArrayRequest* UpdateArrayRequest::default_instance_ = NULL;

UpdateArrayRequest* UpdateArrayRequest::New() const {
  return new UpdateArrayRequest;
}

void UpdateArrayRequest::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_array()) {
      if (array_ != NULL) array_->::presto::Array::Clear();
    }
    if (has_location()) {
      if (location_ != NULL) location_->::presto::ServerInfo::Clear();
    }
    if (has_clear_name()) {
      if (clear_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        clear_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateArrayRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.UpdateArrayRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .presto.Array array = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_array()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_location;
        break;
      }

      // required .presto.ServerInfo location = 2;
      case 2: {
        if (tag == 18) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_clear_name;
        break;
      }

      // required string clear_name = 3;
      case 3: {
        if (tag == 26) {
         parse_clear_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clear_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clear_name().data(), this->clear_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "clear_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.UpdateArrayRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.UpdateArrayRequest)
  return false;
#undef DO_
}

void UpdateArrayRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.UpdateArrayRequest)
  // required .presto.Array array = 1;
  if (has_array()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->array(), output);
  }

  // required .presto.ServerInfo location = 2;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->location(), output);
  }

  // required string clear_name = 3;
  if (has_clear_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clear_name().data(), this->clear_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "clear_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clear_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.UpdateArrayRequest)
}

::google::protobuf::uint8* UpdateArrayRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.UpdateArrayRequest)
  // required .presto.Array array = 1;
  if (has_array()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->array(), target);
  }

  // required .presto.ServerInfo location = 2;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->location(), target);
  }

  // required string clear_name = 3;
  if (has_clear_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clear_name().data(), this->clear_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "clear_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clear_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.UpdateArrayRequest)
  return target;
}

int UpdateArrayRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .presto.Array array = 1;
    if (has_array()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->array());
    }

    // required .presto.ServerInfo location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }

    // required string clear_name = 3;
    if (has_clear_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clear_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateArrayRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateArrayRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateArrayRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateArrayRequest::MergeFrom(const UpdateArrayRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_array()) {
      mutable_array()->::presto::Array::MergeFrom(from.array());
    }
    if (from.has_location()) {
      mutable_location()->::presto::ServerInfo::MergeFrom(from.location());
    }
    if (from.has_clear_name()) {
      set_clear_name(from.clear_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateArrayRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateArrayRequest::CopyFrom(const UpdateArrayRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateArrayRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_array()) {
    if (!this->array().IsInitialized()) return false;
  }
  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void UpdateArrayRequest::Swap(UpdateArrayRequest* other) {
  if (other != this) {
    std::swap(array_, other->array_);
    std::swap(location_, other->location_);
    std::swap(clear_name_, other->clear_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateArrayRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateArrayRequest_descriptor_;
  metadata.reflection = UpdateArrayRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MasterRequest_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MasterRequest_Type_descriptor_;
}
bool MasterRequest_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MasterRequest_Type MasterRequest::UPDATE;
const MasterRequest_Type MasterRequest::NEWUPDATE;
const MasterRequest_Type MasterRequest::TASKDONE;
const MasterRequest_Type MasterRequest::HELLOREPLY;
const MasterRequest_Type MasterRequest::SHUTDOWN;
const MasterRequest_Type MasterRequest::WORKERABORT;
const MasterRequest_Type MasterRequest::Type_MIN;
const MasterRequest_Type MasterRequest::Type_MAX;
const int MasterRequest::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MasterRequest::kTypeFieldNumber;
const int MasterRequest::kUpdateFieldNumber;
const int MasterRequest::kNewupdateFieldNumber;
const int MasterRequest::kTaskdoneFieldNumber;
const int MasterRequest::kHelloreplyFieldNumber;
const int MasterRequest::kWorkerabortFieldNumber;
#endif  // !_MSC_VER

MasterRequest::MasterRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.MasterRequest)
}

void MasterRequest::InitAsDefaultInstance() {
  update_ = const_cast< ::presto::UpdateArrayRequest*>(&::presto::UpdateArrayRequest::default_instance());
  newupdate_ = const_cast< ::presto::NewUpdateRequest*>(&::presto::NewUpdateRequest::default_instance());
  taskdone_ = const_cast< ::presto::TaskDoneRequest*>(&::presto::TaskDoneRequest::default_instance());
  helloreply_ = const_cast< ::presto::HelloReplyRequest*>(&::presto::HelloReplyRequest::default_instance());
  workerabort_ = const_cast< ::presto::WorkerAbortRequest*>(&::presto::WorkerAbortRequest::default_instance());
}

MasterRequest::MasterRequest(const MasterRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.MasterRequest)
}

void MasterRequest::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  update_ = NULL;
  newupdate_ = NULL;
  taskdone_ = NULL;
  helloreply_ = NULL;
  workerabort_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MasterRequest::~MasterRequest() {
  // @@protoc_insertion_point(destructor:presto.MasterRequest)
  SharedDtor();
}

void MasterRequest::SharedDtor() {
  if (this != default_instance_) {
    delete update_;
    delete newupdate_;
    delete taskdone_;
    delete helloreply_;
    delete workerabort_;
  }
}

void MasterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MasterRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MasterRequest_descriptor_;
}

const MasterRequest& MasterRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

MasterRequest* MasterRequest::default_instance_ = NULL;

MasterRequest* MasterRequest::New() const {
  return new MasterRequest;
}

void MasterRequest::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    type_ = 1;
    if (has_update()) {
      if (update_ != NULL) update_->::presto::UpdateArrayRequest::Clear();
    }
    if (has_newupdate()) {
      if (newupdate_ != NULL) newupdate_->::presto::NewUpdateRequest::Clear();
    }
    if (has_taskdone()) {
      if (taskdone_ != NULL) taskdone_->::presto::TaskDoneRequest::Clear();
    }
    if (has_helloreply()) {
      if (helloreply_ != NULL) helloreply_->::presto::HelloReplyRequest::Clear();
    }
    if (has_workerabort()) {
      if (workerabort_ != NULL) workerabort_->::presto::WorkerAbortRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MasterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.MasterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .presto.MasterRequest.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::presto::MasterRequest_Type_IsValid(value)) {
            set_type(static_cast< ::presto::MasterRequest_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_update;
        break;
      }

      // optional .presto.UpdateArrayRequest update = 2;
      case 2: {
        if (tag == 18) {
         parse_update:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_newupdate;
        break;
      }

      // optional .presto.NewUpdateRequest newupdate = 3;
      case 3: {
        if (tag == 26) {
         parse_newupdate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newupdate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_taskdone;
        break;
      }

      // optional .presto.TaskDoneRequest taskdone = 4;
      case 4: {
        if (tag == 34) {
         parse_taskdone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskdone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_helloreply;
        break;
      }

      // optional .presto.HelloReplyRequest helloreply = 5;
      case 5: {
        if (tag == 42) {
         parse_helloreply:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_helloreply()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_workerabort;
        break;
      }

      // optional .presto.WorkerAbortRequest workerabort = 6;
      case 6: {
        if (tag == 50) {
         parse_workerabort:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_workerabort()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.MasterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.MasterRequest)
  return false;
#undef DO_
}

void MasterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.MasterRequest)
  // required .presto.MasterRequest.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .presto.UpdateArrayRequest update = 2;
  if (has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->update(), output);
  }

  // optional .presto.NewUpdateRequest newupdate = 3;
  if (has_newupdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->newupdate(), output);
  }

  // optional .presto.TaskDoneRequest taskdone = 4;
  if (has_taskdone()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->taskdone(), output);
  }

  // optional .presto.HelloReplyRequest helloreply = 5;
  if (has_helloreply()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->helloreply(), output);
  }

  // optional .presto.WorkerAbortRequest workerabort = 6;
  if (has_workerabort()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->workerabort(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.MasterRequest)
}

::google::protobuf::uint8* MasterRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.MasterRequest)
  // required .presto.MasterRequest.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .presto.UpdateArrayRequest update = 2;
  if (has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->update(), target);
  }

  // optional .presto.NewUpdateRequest newupdate = 3;
  if (has_newupdate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->newupdate(), target);
  }

  // optional .presto.TaskDoneRequest taskdone = 4;
  if (has_taskdone()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->taskdone(), target);
  }

  // optional .presto.HelloReplyRequest helloreply = 5;
  if (has_helloreply()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->helloreply(), target);
  }

  // optional .presto.WorkerAbortRequest workerabort = 6;
  if (has_workerabort()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->workerabort(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.MasterRequest)
  return target;
}

int MasterRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .presto.MasterRequest.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .presto.UpdateArrayRequest update = 2;
    if (has_update()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->update());
    }

    // optional .presto.NewUpdateRequest newupdate = 3;
    if (has_newupdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->newupdate());
    }

    // optional .presto.TaskDoneRequest taskdone = 4;
    if (has_taskdone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->taskdone());
    }

    // optional .presto.HelloReplyRequest helloreply = 5;
    if (has_helloreply()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->helloreply());
    }

    // optional .presto.WorkerAbortRequest workerabort = 6;
    if (has_workerabort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workerabort());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MasterRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MasterRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MasterRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MasterRequest::MergeFrom(const MasterRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_update()) {
      mutable_update()->::presto::UpdateArrayRequest::MergeFrom(from.update());
    }
    if (from.has_newupdate()) {
      mutable_newupdate()->::presto::NewUpdateRequest::MergeFrom(from.newupdate());
    }
    if (from.has_taskdone()) {
      mutable_taskdone()->::presto::TaskDoneRequest::MergeFrom(from.taskdone());
    }
    if (from.has_helloreply()) {
      mutable_helloreply()->::presto::HelloReplyRequest::MergeFrom(from.helloreply());
    }
    if (from.has_workerabort()) {
      mutable_workerabort()->::presto::WorkerAbortRequest::MergeFrom(from.workerabort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MasterRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterRequest::CopyFrom(const MasterRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_update()) {
    if (!this->update().IsInitialized()) return false;
  }
  if (has_newupdate()) {
    if (!this->newupdate().IsInitialized()) return false;
  }
  if (has_taskdone()) {
    if (!this->taskdone().IsInitialized()) return false;
  }
  if (has_helloreply()) {
    if (!this->helloreply().IsInitialized()) return false;
  }
  if (has_workerabort()) {
    if (!this->workerabort().IsInitialized()) return false;
  }
  return true;
}

void MasterRequest::Swap(MasterRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(update_, other->update_);
    std::swap(newupdate_, other->newupdate_);
    std::swap(taskdone_, other->taskdone_);
    std::swap(helloreply_, other->helloreply_);
    std::swap(workerabort_, other->workerabort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MasterRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MasterRequest_descriptor_;
  metadata.reflection = MasterRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewUpdateRequest::kNameFieldNumber;
const int NewUpdateRequest::kLocationFieldNumber;
const int NewUpdateRequest::kSizeFieldNumber;
const int NewUpdateRequest::kRowDimFieldNumber;
const int NewUpdateRequest::kColDimFieldNumber;
#endif  // !_MSC_VER

NewUpdateRequest::NewUpdateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.NewUpdateRequest)
}

void NewUpdateRequest::InitAsDefaultInstance() {
  location_ = const_cast< ::presto::ServerInfo*>(&::presto::ServerInfo::default_instance());
}

NewUpdateRequest::NewUpdateRequest(const NewUpdateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.NewUpdateRequest)
}

void NewUpdateRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_ = NULL;
  size_ = GOOGLE_LONGLONG(0);
  row_dim_ = GOOGLE_LONGLONG(0);
  col_dim_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewUpdateRequest::~NewUpdateRequest() {
  // @@protoc_insertion_point(destructor:presto.NewUpdateRequest)
  SharedDtor();
}

void NewUpdateRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete location_;
  }
}

void NewUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewUpdateRequest_descriptor_;
}

const NewUpdateRequest& NewUpdateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

NewUpdateRequest* NewUpdateRequest::default_instance_ = NULL;

NewUpdateRequest* NewUpdateRequest::New() const {
  return new NewUpdateRequest;
}

void NewUpdateRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NewUpdateRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(size_, col_dim_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_location()) {
      if (location_ != NULL) location_->::presto::ServerInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.NewUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_location;
        break;
      }

      // required .presto.ServerInfo location = 2;
      case 2: {
        if (tag == 18) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_size;
        break;
      }

      // required int64 size = 3;
      case 3: {
        if (tag == 24) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_row_dim;
        break;
      }

      // required int64 row_dim = 4;
      case 4: {
        if (tag == 32) {
         parse_row_dim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &row_dim_)));
          set_has_row_dim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_col_dim;
        break;
      }

      // required int64 col_dim = 5;
      case 5: {
        if (tag == 40) {
         parse_col_dim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &col_dim_)));
          set_has_col_dim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.NewUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.NewUpdateRequest)
  return false;
#undef DO_
}

void NewUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.NewUpdateRequest)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .presto.ServerInfo location = 2;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->location(), output);
  }

  // required int64 size = 3;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->size(), output);
  }

  // required int64 row_dim = 4;
  if (has_row_dim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->row_dim(), output);
  }

  // required int64 col_dim = 5;
  if (has_col_dim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->col_dim(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.NewUpdateRequest)
}

::google::protobuf::uint8* NewUpdateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.NewUpdateRequest)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .presto.ServerInfo location = 2;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->location(), target);
  }

  // required int64 size = 3;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->size(), target);
  }

  // required int64 row_dim = 4;
  if (has_row_dim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->row_dim(), target);
  }

  // required int64 col_dim = 5;
  if (has_col_dim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->col_dim(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.NewUpdateRequest)
  return target;
}

int NewUpdateRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .presto.ServerInfo location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }

    // required int64 size = 3;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->size());
    }

    // required int64 row_dim = 4;
    if (has_row_dim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->row_dim());
    }

    // required int64 col_dim = 5;
    if (has_col_dim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->col_dim());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewUpdateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewUpdateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewUpdateRequest::MergeFrom(const NewUpdateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_location()) {
      mutable_location()->::presto::ServerInfo::MergeFrom(from.location());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
    if (from.has_row_dim()) {
      set_row_dim(from.row_dim());
    }
    if (from.has_col_dim()) {
      set_col_dim(from.col_dim());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewUpdateRequest::CopyFrom(const NewUpdateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void NewUpdateRequest::Swap(NewUpdateRequest* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(location_, other->location_);
    std::swap(size_, other->size_);
    std::swap(row_dim_, other->row_dim_);
    std::swap(col_dim_, other->col_dim_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewUpdateRequest_descriptor_;
  metadata.reflection = NewUpdateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TaskDoneRequest::kIdFieldNumber;
const int TaskDoneRequest::kUpdateNamesFieldNumber;
const int TaskDoneRequest::kUpdateSizesFieldNumber;
const int TaskDoneRequest::kLocationFieldNumber;
const int TaskDoneRequest::kUpdateStoresFieldNumber;
const int TaskDoneRequest::kUpdateEmptiesFieldNumber;
const int TaskDoneRequest::kUidFieldNumber;
const int TaskDoneRequest::kMemUsedFieldNumber;
const int TaskDoneRequest::kTaskMessageFieldNumber;
const int TaskDoneRequest::kTaskResultFieldNumber;
const int TaskDoneRequest::kRowDimFieldNumber;
const int TaskDoneRequest::kColDimFieldNumber;
const int TaskDoneRequest::kNpartitionsFieldNumber;
const int TaskDoneRequest::kLoaderPortFieldNumber;
#endif  // !_MSC_VER

TaskDoneRequest::TaskDoneRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.TaskDoneRequest)
}

void TaskDoneRequest::InitAsDefaultInstance() {
  location_ = const_cast< ::presto::ServerInfo*>(&::presto::ServerInfo::default_instance());
}

TaskDoneRequest::TaskDoneRequest(const TaskDoneRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.TaskDoneRequest)
}

void TaskDoneRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  location_ = NULL;
  uid_ = GOOGLE_LONGLONG(0);
  mem_used_ = GOOGLE_LONGLONG(0);
  task_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_result_ = GOOGLE_LONGLONG(0);
  npartitions_ = GOOGLE_LONGLONG(0);
  loader_port_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskDoneRequest::~TaskDoneRequest() {
  // @@protoc_insertion_point(destructor:presto.TaskDoneRequest)
  SharedDtor();
}

void TaskDoneRequest::SharedDtor() {
  if (task_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete task_message_;
  }
  if (this != default_instance_) {
    delete location_;
  }
}

void TaskDoneRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskDoneRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskDoneRequest_descriptor_;
}

const TaskDoneRequest& TaskDoneRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

TaskDoneRequest* TaskDoneRequest::default_instance_ = NULL;

TaskDoneRequest* TaskDoneRequest::New() const {
  return new TaskDoneRequest;
}

void TaskDoneRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TaskDoneRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 201) {
    ZR_(uid_, mem_used_);
    id_ = GOOGLE_LONGLONG(0);
    if (has_location()) {
      if (location_ != NULL) location_->::presto::ServerInfo::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 13056) {
    ZR_(npartitions_, loader_port_);
    if (has_task_message()) {
      if (task_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        task_message_->clear();
      }
    }
    task_result_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  update_names_.Clear();
  update_sizes_.Clear();
  update_stores_.Clear();
  update_empties_.Clear();
  row_dim_.Clear();
  col_dim_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TaskDoneRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.TaskDoneRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_update_names;
        break;
      }

      // repeated string update_names = 2;
      case 2: {
        if (tag == 18) {
         parse_update_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_update_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->update_names(this->update_names_size() - 1).data(),
            this->update_names(this->update_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "update_names");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_update_names;
        if (input->ExpectTag(24)) goto parse_update_sizes;
        break;
      }

      // repeated int64 update_sizes = 3;
      case 3: {
        if (tag == 24) {
         parse_update_sizes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_update_sizes())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_update_sizes())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_update_sizes;
        if (input->ExpectTag(34)) goto parse_location;
        break;
      }

      // required .presto.ServerInfo location = 4;
      case 4: {
        if (tag == 34) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_update_stores;
        break;
      }

      // repeated string update_stores = 5;
      case 5: {
        if (tag == 42) {
         parse_update_stores:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_update_stores()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->update_stores(this->update_stores_size() - 1).data(),
            this->update_stores(this->update_stores_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "update_stores");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_update_stores;
        if (input->ExpectTag(48)) goto parse_update_empties;
        break;
      }

      // repeated bool update_empties = 6;
      case 6: {
        if (tag == 48) {
         parse_update_empties:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 48, input, this->mutable_update_empties())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_update_empties())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_update_empties;
        if (input->ExpectTag(56)) goto parse_uid;
        break;
      }

      // required int64 uid = 7;
      case 7: {
        if (tag == 56) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_mem_used;
        break;
      }

      // optional int64 mem_used = 8;
      case 8: {
        if (tag == 64) {
         parse_mem_used:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mem_used_)));
          set_has_mem_used();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_task_message;
        break;
      }

      // optional string task_message = 9;
      case 9: {
        if (tag == 74) {
         parse_task_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_message().data(), this->task_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "task_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_task_result;
        break;
      }

      // optional int64 task_result = 10;
      case 10: {
        if (tag == 80) {
         parse_task_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &task_result_)));
          set_has_task_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_row_dim;
        break;
      }

      // repeated int64 row_dim = 11;
      case 11: {
        if (tag == 88) {
         parse_row_dim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 88, input, this->mutable_row_dim())));
        } else if (tag == 90) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_row_dim())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_row_dim;
        if (input->ExpectTag(96)) goto parse_col_dim;
        break;
      }

      // repeated int64 col_dim = 12;
      case 12: {
        if (tag == 96) {
         parse_col_dim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 96, input, this->mutable_col_dim())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_col_dim())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_col_dim;
        if (input->ExpectTag(104)) goto parse_npartitions;
        break;
      }

      // optional int64 npartitions = 13;
      case 13: {
        if (tag == 104) {
         parse_npartitions:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &npartitions_)));
          set_has_npartitions();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_loader_port;
        break;
      }

      // optional int32 loader_port = 14;
      case 14: {
        if (tag == 112) {
         parse_loader_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loader_port_)));
          set_has_loader_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.TaskDoneRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.TaskDoneRequest)
  return false;
#undef DO_
}

void TaskDoneRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.TaskDoneRequest)
  // required int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // repeated string update_names = 2;
  for (int i = 0; i < this->update_names_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->update_names(i).data(), this->update_names(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "update_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->update_names(i), output);
  }

  // repeated int64 update_sizes = 3;
  for (int i = 0; i < this->update_sizes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->update_sizes(i), output);
  }

  // required .presto.ServerInfo location = 4;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->location(), output);
  }

  // repeated string update_stores = 5;
  for (int i = 0; i < this->update_stores_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->update_stores(i).data(), this->update_stores(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "update_stores");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->update_stores(i), output);
  }

  // repeated bool update_empties = 6;
  for (int i = 0; i < this->update_empties_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      6, this->update_empties(i), output);
  }

  // required int64 uid = 7;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->uid(), output);
  }

  // optional int64 mem_used = 8;
  if (has_mem_used()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->mem_used(), output);
  }

  // optional string task_message = 9;
  if (has_task_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_message().data(), this->task_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "task_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->task_message(), output);
  }

  // optional int64 task_result = 10;
  if (has_task_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->task_result(), output);
  }

  // repeated int64 row_dim = 11;
  for (int i = 0; i < this->row_dim_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      11, this->row_dim(i), output);
  }

  // repeated int64 col_dim = 12;
  for (int i = 0; i < this->col_dim_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      12, this->col_dim(i), output);
  }

  // optional int64 npartitions = 13;
  if (has_npartitions()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->npartitions(), output);
  }

  // optional int32 loader_port = 14;
  if (has_loader_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->loader_port(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.TaskDoneRequest)
}

::google::protobuf::uint8* TaskDoneRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.TaskDoneRequest)
  // required int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // repeated string update_names = 2;
  for (int i = 0; i < this->update_names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->update_names(i).data(), this->update_names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "update_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->update_names(i), target);
  }

  // repeated int64 update_sizes = 3;
  for (int i = 0; i < this->update_sizes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->update_sizes(i), target);
  }

  // required .presto.ServerInfo location = 4;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->location(), target);
  }

  // repeated string update_stores = 5;
  for (int i = 0; i < this->update_stores_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->update_stores(i).data(), this->update_stores(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "update_stores");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->update_stores(i), target);
  }

  // repeated bool update_empties = 6;
  for (int i = 0; i < this->update_empties_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(6, this->update_empties(i), target);
  }

  // required int64 uid = 7;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->uid(), target);
  }

  // optional int64 mem_used = 8;
  if (has_mem_used()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->mem_used(), target);
  }

  // optional string task_message = 9;
  if (has_task_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_message().data(), this->task_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "task_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->task_message(), target);
  }

  // optional int64 task_result = 10;
  if (has_task_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->task_result(), target);
  }

  // repeated int64 row_dim = 11;
  for (int i = 0; i < this->row_dim_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(11, this->row_dim(i), target);
  }

  // repeated int64 col_dim = 12;
  for (int i = 0; i < this->col_dim_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(12, this->col_dim(i), target);
  }

  // optional int64 npartitions = 13;
  if (has_npartitions()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->npartitions(), target);
  }

  // optional int32 loader_port = 14;
  if (has_loader_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->loader_port(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.TaskDoneRequest)
  return target;
}

int TaskDoneRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // required .presto.ServerInfo location = 4;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }

    // required int64 uid = 7;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }

    // optional int64 mem_used = 8;
    if (has_mem_used()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mem_used());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string task_message = 9;
    if (has_task_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->task_message());
    }

    // optional int64 task_result = 10;
    if (has_task_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->task_result());
    }

    // optional int64 npartitions = 13;
    if (has_npartitions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->npartitions());
    }

    // optional int32 loader_port = 14;
    if (has_loader_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->loader_port());
    }

  }
  // repeated string update_names = 2;
  total_size += 1 * this->update_names_size();
  for (int i = 0; i < this->update_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->update_names(i));
  }

  // repeated int64 update_sizes = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->update_sizes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->update_sizes(i));
    }
    total_size += 1 * this->update_sizes_size() + data_size;
  }

  // repeated string update_stores = 5;
  total_size += 1 * this->update_stores_size();
  for (int i = 0; i < this->update_stores_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->update_stores(i));
  }

  // repeated bool update_empties = 6;
  {
    int data_size = 0;
    data_size = 1 * this->update_empties_size();
    total_size += 1 * this->update_empties_size() + data_size;
  }

  // repeated int64 row_dim = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->row_dim_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->row_dim(i));
    }
    total_size += 1 * this->row_dim_size() + data_size;
  }

  // repeated int64 col_dim = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->col_dim_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->col_dim(i));
    }
    total_size += 1 * this->col_dim_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskDoneRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TaskDoneRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskDoneRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskDoneRequest::MergeFrom(const TaskDoneRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  update_names_.MergeFrom(from.update_names_);
  update_sizes_.MergeFrom(from.update_sizes_);
  update_stores_.MergeFrom(from.update_stores_);
  update_empties_.MergeFrom(from.update_empties_);
  row_dim_.MergeFrom(from.row_dim_);
  col_dim_.MergeFrom(from.col_dim_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_location()) {
      mutable_location()->::presto::ServerInfo::MergeFrom(from.location());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_mem_used()) {
      set_mem_used(from.mem_used());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_task_message()) {
      set_task_message(from.task_message());
    }
    if (from.has_task_result()) {
      set_task_result(from.task_result());
    }
    if (from.has_npartitions()) {
      set_npartitions(from.npartitions());
    }
    if (from.has_loader_port()) {
      set_loader_port(from.loader_port());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TaskDoneRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskDoneRequest::CopyFrom(const TaskDoneRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskDoneRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000049) != 0x00000049) return false;

  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void TaskDoneRequest::Swap(TaskDoneRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    update_names_.Swap(&other->update_names_);
    update_sizes_.Swap(&other->update_sizes_);
    std::swap(location_, other->location_);
    update_stores_.Swap(&other->update_stores_);
    update_empties_.Swap(&other->update_empties_);
    std::swap(uid_, other->uid_);
    std::swap(mem_used_, other->mem_used_);
    std::swap(task_message_, other->task_message_);
    std::swap(task_result_, other->task_result_);
    row_dim_.Swap(&other->row_dim_);
    col_dim_.Swap(&other->col_dim_);
    std::swap(npartitions_, other->npartitions_);
    std::swap(loader_port_, other->loader_port_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TaskDoneRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskDoneRequest_descriptor_;
  metadata.reflection = TaskDoneRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ArrayStoreData::kSizeFieldNumber;
const int ArrayStoreData::kNameFieldNumber;
const int ArrayStoreData::kLocationFieldNumber;
#endif  // !_MSC_VER

ArrayStoreData::ArrayStoreData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.ArrayStoreData)
}

void ArrayStoreData::InitAsDefaultInstance() {
  location_ = const_cast< ::presto::ServerInfo*>(&::presto::ServerInfo::default_instance());
}

ArrayStoreData::ArrayStoreData(const ArrayStoreData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.ArrayStoreData)
}

void ArrayStoreData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  size_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ArrayStoreData::~ArrayStoreData() {
  // @@protoc_insertion_point(destructor:presto.ArrayStoreData)
  SharedDtor();
}

void ArrayStoreData::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete location_;
  }
}

void ArrayStoreData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArrayStoreData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArrayStoreData_descriptor_;
}

const ArrayStoreData& ArrayStoreData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

ArrayStoreData* ArrayStoreData::default_instance_ = NULL;

ArrayStoreData* ArrayStoreData::New() const {
  return new ArrayStoreData;
}

void ArrayStoreData::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    size_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_location()) {
      if (location_ != NULL) location_->::presto::ServerInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ArrayStoreData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.ArrayStoreData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_location;
        break;
      }

      // required .presto.ServerInfo location = 3;
      case 3: {
        if (tag == 26) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.ArrayStoreData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.ArrayStoreData)
  return false;
#undef DO_
}

void ArrayStoreData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.ArrayStoreData)
  // required int64 size = 1;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->size(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required .presto.ServerInfo location = 3;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->location(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.ArrayStoreData)
}

::google::protobuf::uint8* ArrayStoreData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.ArrayStoreData)
  // required int64 size = 1;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->size(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required .presto.ServerInfo location = 3;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->location(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.ArrayStoreData)
  return target;
}

int ArrayStoreData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 size = 1;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->size());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .presto.ServerInfo location = 3;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArrayStoreData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ArrayStoreData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ArrayStoreData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ArrayStoreData::MergeFrom(const ArrayStoreData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_size()) {
      set_size(from.size());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_location()) {
      mutable_location()->::presto::ServerInfo::MergeFrom(from.location());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ArrayStoreData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayStoreData::CopyFrom(const ArrayStoreData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayStoreData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void ArrayStoreData::Swap(ArrayStoreData* other) {
  if (other != this) {
    std::swap(size_, other->size_);
    std::swap(name_, other->name_);
    std::swap(location_, other->location_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ArrayStoreData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArrayStoreData_descriptor_;
  metadata.reflection = ArrayStoreData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HelloReplyRequest::kLocationFieldNumber;
const int HelloReplyRequest::kSharedMemoryFieldNumber;
const int HelloReplyRequest::kExecutorsFieldNumber;
const int HelloReplyRequest::kArrayStoresFieldNumber;
const int HelloReplyRequest::kMemTotalFieldNumber;
const int HelloReplyRequest::kMemUsedFieldNumber;
const int HelloReplyRequest::kIsHeartbeatFieldNumber;
#endif  // !_MSC_VER

HelloReplyRequest::HelloReplyRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.HelloReplyRequest)
}

void HelloReplyRequest::InitAsDefaultInstance() {
  location_ = const_cast< ::presto::ServerInfo*>(&::presto::ServerInfo::default_instance());
}

HelloReplyRequest::HelloReplyRequest(const HelloReplyRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.HelloReplyRequest)
}

void HelloReplyRequest::SharedCtor() {
  _cached_size_ = 0;
  location_ = NULL;
  shared_memory_ = GOOGLE_LONGLONG(0);
  executors_ = 0;
  mem_total_ = GOOGLE_LONGLONG(0);
  mem_used_ = GOOGLE_LONGLONG(0);
  is_heartbeat_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HelloReplyRequest::~HelloReplyRequest() {
  // @@protoc_insertion_point(destructor:presto.HelloReplyRequest)
  SharedDtor();
}

void HelloReplyRequest::SharedDtor() {
  if (this != default_instance_) {
    delete location_;
  }
}

void HelloReplyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloReplyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HelloReplyRequest_descriptor_;
}

const HelloReplyRequest& HelloReplyRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

HelloReplyRequest* HelloReplyRequest::default_instance_ = NULL;

HelloReplyRequest* HelloReplyRequest::New() const {
  return new HelloReplyRequest;
}

void HelloReplyRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HelloReplyRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 119) {
    ZR_(mem_total_, mem_used_);
    if (has_location()) {
      if (location_ != NULL) location_->::presto::ServerInfo::Clear();
    }
    shared_memory_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  array_stores_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HelloReplyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.HelloReplyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .presto.ServerInfo location = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_shared_memory;
        break;
      }

      // optional int64 shared_memory = 2;
      case 2: {
        if (tag == 16) {
         parse_shared_memory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shared_memory_)));
          set_has_shared_memory();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_executors;
        break;
      }

      // optional int32 executors = 3;
      case 3: {
        if (tag == 24) {
         parse_executors:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &executors_)));
          set_has_executors();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_array_stores;
        break;
      }

      // repeated .presto.ArrayStoreData array_stores = 4;
      case 4: {
        if (tag == 34) {
         parse_array_stores:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_array_stores()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_array_stores;
        if (input->ExpectTag(40)) goto parse_mem_total;
        break;
      }

      // optional int64 mem_total = 5 [default = 0];
      case 5: {
        if (tag == 40) {
         parse_mem_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mem_total_)));
          set_has_mem_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_mem_used;
        break;
      }

      // optional int64 mem_used = 6 [default = 0];
      case 6: {
        if (tag == 48) {
         parse_mem_used:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mem_used_)));
          set_has_mem_used();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_is_heartbeat;
        break;
      }

      // optional bool is_heartbeat = 7 [default = false];
      case 7: {
        if (tag == 56) {
         parse_is_heartbeat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_heartbeat_)));
          set_has_is_heartbeat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.HelloReplyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.HelloReplyRequest)
  return false;
#undef DO_
}

void HelloReplyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.HelloReplyRequest)
  // required .presto.ServerInfo location = 1;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->location(), output);
  }

  // optional int64 shared_memory = 2;
  if (has_shared_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->shared_memory(), output);
  }

  // optional int32 executors = 3;
  if (has_executors()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->executors(), output);
  }

  // repeated .presto.ArrayStoreData array_stores = 4;
  for (int i = 0; i < this->array_stores_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->array_stores(i), output);
  }

  // optional int64 mem_total = 5 [default = 0];
  if (has_mem_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->mem_total(), output);
  }

  // optional int64 mem_used = 6 [default = 0];
  if (has_mem_used()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->mem_used(), output);
  }

  // optional bool is_heartbeat = 7 [default = false];
  if (has_is_heartbeat()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_heartbeat(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.HelloReplyRequest)
}

::google::protobuf::uint8* HelloReplyRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.HelloReplyRequest)
  // required .presto.ServerInfo location = 1;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->location(), target);
  }

  // optional int64 shared_memory = 2;
  if (has_shared_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->shared_memory(), target);
  }

  // optional int32 executors = 3;
  if (has_executors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->executors(), target);
  }

  // repeated .presto.ArrayStoreData array_stores = 4;
  for (int i = 0; i < this->array_stores_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->array_stores(i), target);
  }

  // optional int64 mem_total = 5 [default = 0];
  if (has_mem_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->mem_total(), target);
  }

  // optional int64 mem_used = 6 [default = 0];
  if (has_mem_used()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->mem_used(), target);
  }

  // optional bool is_heartbeat = 7 [default = false];
  if (has_is_heartbeat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_heartbeat(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.HelloReplyRequest)
  return target;
}

int HelloReplyRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .presto.ServerInfo location = 1;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }

    // optional int64 shared_memory = 2;
    if (has_shared_memory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shared_memory());
    }

    // optional int32 executors = 3;
    if (has_executors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->executors());
    }

    // optional int64 mem_total = 5 [default = 0];
    if (has_mem_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mem_total());
    }

    // optional int64 mem_used = 6 [default = 0];
    if (has_mem_used()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mem_used());
    }

    // optional bool is_heartbeat = 7 [default = false];
    if (has_is_heartbeat()) {
      total_size += 1 + 1;
    }

  }
  // repeated .presto.ArrayStoreData array_stores = 4;
  total_size += 1 * this->array_stores_size();
  for (int i = 0; i < this->array_stores_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->array_stores(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloReplyRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HelloReplyRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HelloReplyRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HelloReplyRequest::MergeFrom(const HelloReplyRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  array_stores_.MergeFrom(from.array_stores_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_location()) {
      mutable_location()->::presto::ServerInfo::MergeFrom(from.location());
    }
    if (from.has_shared_memory()) {
      set_shared_memory(from.shared_memory());
    }
    if (from.has_executors()) {
      set_executors(from.executors());
    }
    if (from.has_mem_total()) {
      set_mem_total(from.mem_total());
    }
    if (from.has_mem_used()) {
      set_mem_used(from.mem_used());
    }
    if (from.has_is_heartbeat()) {
      set_is_heartbeat(from.is_heartbeat());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HelloReplyRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloReplyRequest::CopyFrom(const HelloReplyRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloReplyRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->array_stores())) return false;
  return true;
}

void HelloReplyRequest::Swap(HelloReplyRequest* other) {
  if (other != this) {
    std::swap(location_, other->location_);
    std::swap(shared_memory_, other->shared_memory_);
    std::swap(executors_, other->executors_);
    array_stores_.Swap(&other->array_stores_);
    std::swap(mem_total_, other->mem_total_);
    std::swap(mem_used_, other->mem_used_);
    std::swap(is_heartbeat_, other->is_heartbeat_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HelloReplyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HelloReplyRequest_descriptor_;
  metadata.reflection = HelloReplyRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WorkerAbortRequest::kLocationFieldNumber;
const int WorkerAbortRequest::kReasonFieldNumber;
const int WorkerAbortRequest::kSharedMemoryFieldNumber;
const int WorkerAbortRequest::kExecutorsFieldNumber;
#endif  // !_MSC_VER

WorkerAbortRequest::WorkerAbortRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:presto.WorkerAbortRequest)
}

void WorkerAbortRequest::InitAsDefaultInstance() {
  location_ = const_cast< ::presto::ServerInfo*>(&::presto::ServerInfo::default_instance());
}

WorkerAbortRequest::WorkerAbortRequest(const WorkerAbortRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:presto.WorkerAbortRequest)
}

void WorkerAbortRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  location_ = NULL;
  reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_memory_ = GOOGLE_LONGLONG(0);
  executors_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WorkerAbortRequest::~WorkerAbortRequest() {
  // @@protoc_insertion_point(destructor:presto.WorkerAbortRequest)
  SharedDtor();
}

void WorkerAbortRequest::SharedDtor() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (this != default_instance_) {
    delete location_;
  }
}

void WorkerAbortRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkerAbortRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorkerAbortRequest_descriptor_;
}

const WorkerAbortRequest& WorkerAbortRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

WorkerAbortRequest* WorkerAbortRequest::default_instance_ = NULL;

WorkerAbortRequest* WorkerAbortRequest::New() const {
  return new WorkerAbortRequest;
}

void WorkerAbortRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<WorkerAbortRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(shared_memory_, executors_);
    if (has_location()) {
      if (location_ != NULL) location_->::presto::ServerInfo::Clear();
    }
    if (has_reason()) {
      if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reason_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WorkerAbortRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:presto.WorkerAbortRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .presto.ServerInfo location = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reason;
        break;
      }

      // required string reason = 2;
      case 2: {
        if (tag == 18) {
         parse_reason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reason");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_shared_memory;
        break;
      }

      // optional int64 shared_memory = 3;
      case 3: {
        if (tag == 24) {
         parse_shared_memory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shared_memory_)));
          set_has_shared_memory();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_executors;
        break;
      }

      // optional int32 executors = 4;
      case 4: {
        if (tag == 32) {
         parse_executors:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &executors_)));
          set_has_executors();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:presto.WorkerAbortRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:presto.WorkerAbortRequest)
  return false;
#undef DO_
}

void WorkerAbortRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:presto.WorkerAbortRequest)
  // required .presto.ServerInfo location = 1;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->location(), output);
  }

  // required string reason = 2;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  // optional int64 shared_memory = 3;
  if (has_shared_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shared_memory(), output);
  }

  // optional int32 executors = 4;
  if (has_executors()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->executors(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:presto.WorkerAbortRequest)
}

::google::protobuf::uint8* WorkerAbortRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:presto.WorkerAbortRequest)
  // required .presto.ServerInfo location = 1;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->location(), target);
  }

  // required string reason = 2;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  // optional int64 shared_memory = 3;
  if (has_shared_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shared_memory(), target);
  }

  // optional int32 executors = 4;
  if (has_executors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->executors(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:presto.WorkerAbortRequest)
  return target;
}

int WorkerAbortRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .presto.ServerInfo location = 1;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }

    // required string reason = 2;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

    // optional int64 shared_memory = 3;
    if (has_shared_memory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shared_memory());
    }

    // optional int32 executors = 4;
    if (has_executors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->executors());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkerAbortRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WorkerAbortRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WorkerAbortRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WorkerAbortRequest::MergeFrom(const WorkerAbortRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_location()) {
      mutable_location()->::presto::ServerInfo::MergeFrom(from.location());
    }
    if (from.has_reason()) {
      set_reason(from.reason());
    }
    if (from.has_shared_memory()) {
      set_shared_memory(from.shared_memory());
    }
    if (from.has_executors()) {
      set_executors(from.executors());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WorkerAbortRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerAbortRequest::CopyFrom(const WorkerAbortRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerAbortRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_location()) {
    if (!this->location().IsInitialized()) return false;
  }
  return true;
}

void WorkerAbortRequest::Swap(WorkerAbortRequest* other) {
  if (other != this) {
    std::swap(location_, other->location_);
    std::swap(reason_, other->reason_);
    std::swap(shared_memory_, other->shared_memory_);
    std::swap(executors_, other->executors_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WorkerAbortRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorkerAbortRequest_descriptor_;
  metadata.reflection = WorkerAbortRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace presto

// @@protoc_insertion_point(global_scope)
